{"version":3,"sources":["pages/x6/components/Stencil/index.module.scss","pages/x6/components/DropTarget/index.module.scss","pages/x6/components/DragSource/index.module.scss","pages/x6/components/Background/index.module.scss","pages/x6/components/Alert/index.module.scss","pages/x6/components/CmsWorkbench/index.module.scss","pages/x6/components/X6Workbench/index.module.scss","pages/x6/components/WfhRect/index.module.scss","pages/x6/components/WfhTriangle/index.module.scss","pages/x6/index.module.scss","pages/x6/components/Stencil/index.tsx","pages/x6/components/DropTarget/index.tsx","pages/x6/components/DragSource/index.tsx","pages/x6/components/Background/index.tsx","pages/x6/components/Alert/index.tsx","pages/x6/components/WfhInput/index.tsx","pages/x6/components/WfhInputNum/index.tsx","pages/x6/components/WfhSelect/index.tsx","pages/x6/components/WfhTable/index.tsx","pages/x6/components/CmsWorkbench/index.tsx","pages/x6/components/WfhRect/index.tsx","pages/x6/components/X6Workbench/Tools.tsx","pages/x6/components/WfhTriangle/index.tsx","pages/x6/components/X6Workbench/biz.tsx","pages/x6/components/X6Workbench/register.tsx","pages/x6/components/X6Workbench/index.tsx","pages/x6/frame.tsx"],"names":["module","exports","sidebar","title","gtitle","search","container","tools","tool","noresult","droptarget","dragsource","default","icon","name","background","alert","cmsworkbench","toolbar","active","toollist","business","save","content","workbench","pc","phone","unit","delete","component","config","preview","graph","selected","myport","root","mine","dndframe","Stencil","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearch","e","searched","target","value","allToolList","state","newToolList","console","log","filter","_tool$name","_tool$id","indexOf","id","setState","toolList","toJS","prevToolList","nextProps","prevState","Immutable","is","_this$props","DragSource","dragSource","bSearch","_this$props$title","_this$props$notFoundT","notFoundText","react","className","styles","placeholder","onChange","length","map","index","key","concat","assign","React","defaultProps","ITEM_TYPE","DATA_SOURCE_TYPE","initialState","dataList","List","edgeList","current","Map","configs","dataSource","DRAG_NODE_DATA","reducers","action","type","payload","_payload$dataList","_payload$edgeList","_payload$current","_payload$configs","isList","isMap","API_DATA","push","currId","newDataList","data","newCurrent","objectSpread","prevConfig","defineProperty","DropTarget","_React$useReducer","_React$useReducer2","slicedToArray","_React$useReducer2$","dispatch","initData","deleteData","setEdge","deleteEdge","setCurrent","setConfigs","Workbench","_props$accept","accept","X6_DROP_TARGET","_useDrop","useDrop","drop","item","monitor","uuid","node","clockseq","msecs","Date","getTime","nsecs","collect","demo","_useDrop2","collectedProps","ref","init","DefaultStencil","_props$type","toolComponent","_props$data","_useDrag","useDrag","end","drag","element","Background","componentType","bgStyle","backgroundColor","color","backgroundImage","image","style","BackgroundConfig","setConfig","_React$useState","_React$useState2","bgColor","setBgColor","thumbnail","Alert","text","AlertConfig","WfhInput","label","param","_props$required","required","_props$length","Number","MAX_SAFE_INTEGER","_props$holder","holder","undefined","es_form","Item","rules","message","input","maxLength","YES_OR_NO","CONFIG_LABELS","base","labelHolder","paramHolder","holderHolder","spec","requiredHolder","maxlength","maxlengthHolder","WfhInputConfig","_Form$useForm","Form","useForm","form","paramList","setParam","setTimeout","other","fields","keys","reduce","prev","curr","tmp","onValuesChange","changedValue","allVAlues","labelCol","span","card","es_select","labelInValue","Option","input_number","min","WfhInputNum","WfhInputNumConfig","WfhSelect","searchHolder","option","source","sourceHolder","select","selectHolder","inparam","inparamHolder","typeHolder","remote","remoteHolder","multiple","multipleHolder","WfhSelectConfig","allValues","WfhTable","WfhTableConfig","WITHOUT_RENDER_COMPONENTTYPE_LIST","MOCK_MAP","MOCK_MAP_CONRIG","CmsWorkbench","_current$toJS","currComponentType","currDisplayName","displayName","_ref","_ref$type","_ref$payload","bPreview","bPhone","Config","get","currConfig","onDelete","onClick","_currConfig$current","validateFields","_component$componentT","includes","Component","savedConfig","WfhRect","_Component","count","onChangeData","setData","onChangeName","inherits","createClass","nextState","prevNode","getData","hasChanged","begin","now","duration","react_default","a","createElement","renderSimplified","renderClassic","ContextMenuTool","_ToolsView$ToolItem","_getPrototypeOf2","_len","arguments","_args","Array","_key","apply","knob","timer","contextMenu","onMenu","args","_this$contextMenu","cell","edge","_this$graph","getSourceNode","getTargetNode","sourcePos","position","targetPos","clone","setSource","x","y","setTarget","addEdge","isNode","_this$graph2","_this$graph3","_this$graph4","outgoingEdges","getOutgoingEdges","incomingEdges","getIncomingEdges","clientX","clientY","pos","clientToGraph","forEach","removeCells","isEdge","_this$graph5","removeEdge","onMouseDown","window","updatePosition","toggleContextMenu","ToolsView","appendChild","menu","visible","ReactDom","unmountComponentAtNode","document","removeEventListener","render","dropdown","trigger","overlay","renderMenu","addEventListener","_this$knob","left","top","clearTimeout","cellView","on","onContextMenu","prototype","off","ToolItem","tagName","isSVGElement","WfhTriangle","_this$props$node","_this$props$node$data","mode","_ReactShape","WfhDD","ReactShape","width","height","WfhDemoNode","_ReactShape2","WfhRect_WfhRect","WfhRectNode","_ReactShape3","portMarkup","Markup","getForeignObjectMarkup","ports","groups","in","attrs","fo","magnet","zIndex","out","items","group","WfhTriangleNode","_ReactShape4","WfhTriangle_WfhTriangle","Graph","registerNode","registerEdgeTool","registerNodeTool","MOCKDATA","nodes","age","info","from","edges","port","X6Workbench","refContainer","onGetAllData","allData","toJSON","model","view","onSwitchMode","allNodes","getNodes","onLayout","_this$graph6","_this$graph7","rootNodes","getRootNodes","leafNodes","getLeafNodes","currentNodes","batchUpdate","level","result","sum","_this$graph8","getNeighbors","outgoing","_this$graph9","_this$graph10","_this$graph11","_this$graph12","_this$graph13","_this$graph14","_this$graph15","_this$graph16","_this$graph17","_this$graph18","_this$graph19","_this$graph20","_this$graph21","_this$graph22","grid","panning","enabled","modifiers","clipboard","selecting","rubberband","strict","movable","showNodeSelectionBox","showEdgeSelectionBox","snapline","sharp","scroller","pageVisible","pageBreak","highlighting","magnetAvailable","padding","strokeWidth","stroke","connecting","snap","allowBlank","allowLoop","allowNode","highlight","validateMagnet","getAttribute","createEdge","Edge","validateConnection","targetCell","sourceCell","validateEdge","tmpSource","getTarget","tmpTarget","getSource","tmpEdges","interacting","onPortRendered","selectors","contentSelectors","foContent","ReactDOM","tooltip","shape","getTargetCellId","getSourceCellId","_ref2","addTools","_ref3","removeTools","_ref4","fill","_ref5","circle","r","prevProps","prevDataList","prevEdgeList","elemList","_this$graph23","_this$graph24","addNode","_this$graph25","targetList","elem","fromJSON","_this2","array","i","maxDegree","children","_this2$graph","DND_ITEM_LIST","MOCK_TOO_LIST","Frame","stencilList","_match$params","_this$props$match","match","params","_this$state$stencilLi","DndProvider","backend","HTML5Backend","components_Stencil","components_DropTarget","CMSWorkbench"],"mappings":"+EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,MAAA,uBAAAC,OAAA,wBAAAC,OAAA,wBAAAC,UAAA,2BAAAC,MAAA,uBAAAC,KAAA,sBAAAC,SAAA,iDCAlBT,EAAAC,QAAA,CAAkBS,WAAA,sDCAlBV,EAAAC,QAAA,CAAkBU,WAAA,+BAAAC,QAAA,4BAAAC,KAAA,yBAAAC,KAAA,gDCAlBd,EAAAC,QAAA,CAAkBc,WAAA,sDCAlBf,EAAAC,QAAA,CAAkBe,MAAA,4CCAlBhB,EAAAC,QAAA,CAAkBgB,aAAA,mCAAAC,QAAA,8BAAAC,OAAA,6BAAAC,SAAA,+BAAAC,SAAA,+BAAAC,KAAA,2BAAAC,QAAA,8BAAAC,UAAA,gCAAAC,GAAA,yBAAAC,MAAA,4BAAAC,KAAA,2BAAAC,OAAA,6BAAAC,UAAA,gCAAAC,OAAA,6BAAAC,QAAA,qDCAlB/B,EAAAC,QAAA,CAAkBK,UAAA,+BAAAY,QAAA,6BAAAc,MAAA,2BAAAC,SAAA,8BAAAC,OAAA,mDCAlBlC,EAAAC,QAAA,CAAkBkC,KAAA,6CCAlBnC,EAAAC,QAAA,CAAkBkC,KAAA,iDCAlBnC,EAAAC,QAAA,CAAkBK,UAAA,sBAAA8B,KAAA,iBAAAC,SAAA,qBAAAnC,QAAA,oBAAAqB,QAAA,uKC4BZe,cAoBJ,SAAAA,EAAYC,GAAsB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,SAAW,SAACC,GACV,IAAMC,EAAWD,EAAEE,OAAOC,MAClBC,EAAgBZ,EAAKa,MAArBD,YACJE,EAAcF,EAClBG,QAAQC,IAAI,aAAcF,GACtBL,IACFK,EAAcF,EAAYK,OACxB,SAACjD,GAAD,IAAAkD,EAAAC,EAAA,OACE,QAAAD,EAAAlD,EAAKM,YAAL,IAAA4C,OAAA,EAAAA,EAAWE,QAAQX,KAAa,IAAK,QAAAU,EAAAnD,EAAKqD,UAAL,IAAAF,OAAA,EAAAA,EAASC,QAAQX,KAAa,KAIzET,EAAKsB,SAAS,CACZC,SAAUT,KApBZd,EAAKa,MAAQ,CACXU,SAAUvB,EAAKD,MAAMwB,SAASC,OAC9BZ,YAAaZ,EAAKD,MAAMwB,SAASC,OACjCC,aAAczB,EAAKD,MAAMwB,UALKvB,6FAdF0B,EAAgBC,GAAgB,IACtDJ,EAAaG,EAAbH,SACAE,EAAiBE,EAAjBF,aACR,OAAKG,UAAUC,GAAGJ,EAAcF,GAQzB,KAPE,CACLA,SAAUA,EAASC,OACnBZ,YAAaW,EAASC,OACtBC,aAAcF,qDAiCX,IAAAO,EAMH3B,KAAKJ,MAJKgC,EAFPD,EAELE,WACAC,EAHKH,EAGLG,QAHKC,EAAAJ,EAILnE,aAJK,IAAAuE,EAIG,qBAJHA,EAAAC,EAAAL,EAKLM,oBALK,IAAAD,EAKU,yDALVA,EAOCZ,EAAapB,KAAKU,MAAlBU,SAER,OACEc,EAAA,qBAAKC,UAAWC,IAAO7E,SACpBC,EAAQ0E,EAAA,qBAAKC,UAAWC,IAAO5E,OAAQA,GAAe,KACtDsE,EACCI,EAAA,qBAAKC,UAAWC,IAAO1E,QACrBwE,EAAA,uBAAOG,YAAY,6CAAUC,SAAUtC,KAAKI,YAE5C,KACHgB,EAASmB,OAAS,EACjBL,EAAA,qBAAKC,UAAWC,IAAOzE,WACrBuE,EAAA,qBAAKC,UAAWC,IAAO3E,QAAvB,YACAyE,EAAA,qBAAKC,UAAWC,IAAOxE,OACpBwD,EAASoB,IAAI,SAAC3E,EAAiB4E,GAC9B,OACEP,EAAA,qBAAKC,UAAWC,IAAOvE,KAAM6E,IAAG,GAAAC,OAAK9E,EAAKqD,GAAV,KAAAyB,OAAgBF,IAC9CP,EAAA,cAACN,EAAD9B,OAAA8C,OAAA,CAAYF,IAAG,GAAAC,OAAK9E,EAAKqD,GAAV,KAAAyB,OAAgBF,IAAa5E,SAOtDqE,EAAA,qBAAKC,UAAWC,IAAOtE,UAAWmE,WA7EtBY,aAAhBlD,EACGmD,aAAe,CACpB1B,SAAU,GACVU,SAAS,GAiFEnC,IC3GVoD,EAKAC,EDsGUrD,6EC3GVoD,0DAKAC,mIAqBL,IAAMC,EAA8B,CAClCC,SAAUzB,UAAU0B,KAAK,IACzBC,SAAU3B,UAAU0B,KAAK,IACzBE,QAAS5B,UAAU6B,IAAI,IACvBC,QAAS9B,UAAU6B,IAAI,IACvBE,WAAYR,EAAiBS,gBAG/B,SAASC,EAAShD,EAAYiD,GAAa,IACjCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,IAAK,OAAQ,IAAAE,EAMPD,EAJFX,gBAFS,IAAAY,EAEE,GAFFA,EAAAC,EAMPF,EAHFT,gBAHS,IAAAW,EAGE,GAHFA,EAAAC,EAMPH,EAFFR,eAJS,IAAAW,EAIC,GAJDA,EAAAC,EAMPJ,EADFN,eALS,IAAAU,EAKC,GALDA,EAQX,MAAO,CACLf,SAAUzB,UAAU0B,KAAKe,OAAOhB,GAC5BA,EACAzB,UAAU0B,KAAKD,GACnBE,SAAU3B,UAAU0B,KAAKe,OAAOd,GAC5BA,EACA3B,UAAU0B,KAAKC,GACnBC,QAAS5B,UAAU6B,IAAIa,MAAMd,GACzBA,EACA5B,UAAU6B,IAAID,GAClBE,QAAS9B,UAAU6B,IAAIa,MAAMZ,GACzBA,EACA9B,UAAU6B,IAAIC,GAClBC,WAAYR,EAAiBoB,UAGjC,IAAK,OAAQ,IACHlB,EAAgCxC,EAAhCwC,SAAUE,EAAsB1C,EAAtB0C,SAAUG,EAAY7C,EAAZ6C,QAC5B,MAAO,CACLL,SAAUA,EAASmB,KAAKR,GACxBT,WACAC,QAAS5B,UAAU6B,IAAIO,GACvBN,UACAC,WAAYR,EAAiBS,gBAGjC,IAAK,aAAc,IACTJ,EAA+B3C,EAA/B2C,QAASE,EAAsB7C,EAAtB6C,QAASL,EAAaxC,EAAbwC,SACdoB,EAAWjB,EAAfnC,GACFqD,EAAcrB,EAASpC,OAAO,SAAC0D,GAAD,OAAeA,EAAKtD,KAAOoD,WACxDf,EAAQe,GACf,IAAMG,EAAaF,EAAY,GAE/B,OAAOzE,OAAA4E,EAAA,EAAA5E,CAAA,GACFY,EADL,CAEEwC,SAAUqB,EACVlB,QAASoB,EACTlB,QAAQzD,OAAA4E,EAAA,EAAA5E,CAAA,GACHyD,KAIT,IAAK,OAGL,IAAK,aACH,OAAO7C,EAET,IAAK,UACH,OAAOZ,OAAA4E,EAAA,EAAA5E,CAAA,GACFY,EADL,CAEE2C,QAAS5B,UAAU6B,IAAIO,KAG3B,IAAK,UAAW,IACNN,EAAY7C,EAAZ6C,QACArC,EAAe2C,EAAf3C,GAAI/B,EAAW0E,EAAX1E,OACNwF,EAAapB,EAAQrC,IAAO,GAClC,OAAOpB,OAAA4E,EAAA,EAAA5E,CAAA,GACFY,EADL,CAEE6C,QAAQzD,OAAA4E,EAAA,EAAA5E,CAAA,GACHyD,EADEzD,OAAA8E,EAAA,EAAA9E,CAAA,GAEJoB,EAFIpB,OAAA4E,EAAA,EAAA5E,CAAA,GAGA6E,EACAxF,OAKX,QACE,OAAOuB,GAqGEmE,IC3NV9B,ED2NU8B,EAjGf,SAAoBjF,GAAyB,IAAAkF,EAEzCjC,aAAiBa,EAAUT,GAFc8B,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAAgF,EAAA,GAAAG,EAAAF,EAAA,GAClC7B,EADkC+B,EAClC/B,SAAUE,EADwB6B,EACxB7B,SAAUC,EADc4B,EACd5B,QAASE,EADK0B,EACL1B,QAASC,EADJyB,EACIzB,WAAc0B,EADlBH,EAAA,GAGrCI,EAAWtC,cAAkB,SAACgB,GAClCqB,EAAS,CACPtB,KAAM,OACNC,aAED,IAOGuB,EAAavC,cAAkB,WACnCqC,EAAS,CACPtB,KAAM,gBAEP,IACGyB,EAAUxC,cAAkB,SAACgB,GACjCqB,EAAS,CACPtB,KAAM,OACNC,aAED,IACGyB,EAAazC,cAAkB,SAACgB,GACpCqB,EAAS,CACPtB,KAAM,aACNC,aAED,IAEG0B,EAAa1C,cAAkB,SAACgB,GACpCqB,EAAS,CACPtB,KAAM,UACNC,aAED,IACG2B,EAAa3C,cAAkB,SAACgB,GACpCqB,EAAS,CACPtB,KAAM,UACNC,aAED,IACHjD,QAAQC,IAAI,8BAA+B0C,GA7CA,IA+CxBkC,EAAmD7F,EAA9Df,UA/CmC6G,EA+C2B9F,EAAxC+F,cA/Ca,IAAAD,EA+CJ,CAAC3C,EAAU6C,gBA/CPF,EAAAG,EAgDZC,YAAQ,WACrC,MAAO,CACLH,SACAI,KAAM,SAACC,EAAiBC,GACtB,IAAM/E,EAAKgF,YAAK,CACdC,KAAM,CAAC,EAAM,GAAM,GAAM,IAAM,IAAM,KACrCC,SAAU,KACVC,OAAO,IAAIC,MAAOC,UAClBC,MAAO,OAST,OAPAtB,EAAS,CACPtB,KAAM,OACNC,QAAQ/D,OAAA4E,EAAA,EAAA5E,CAAA,CACNoB,MACG8E,KAGA,IAETS,QAAS,SAACR,GACR,MAAO,CAELS,KAAM,YAtE6BC,EAAA7G,OAAAkF,EAAA,EAAAlF,CAAA+F,EAAA,GAgDpCe,EAhDoCD,EAAA,GAgDpBZ,EAhDoBY,EAAA,GA4E3C,OACEzE,EAAA,qBAAK2E,IAAKd,EAAM5D,UAAWC,IAAOrE,YAChCmE,EAAA,cAACuD,EAAD3F,OAAA8C,OAAA,CACEkE,KAAM3B,EACNjC,SAAUA,EACVM,WAAYA,EAEZ4B,WAAYA,EACZhC,SAAUA,EACViC,QAASA,EACTC,WAAYA,EACZjC,QAASA,EACTkC,WAAYA,EACZhC,QAASA,EACTiC,WAAYA,GACRoB,mCCnMZ,SAASG,EAAenH,GACtB,OACEsC,EAAA,qBAAKC,UAAWC,IAAOnE,SACrBiE,EAAA,qBAAKC,UAAWC,IAAOlE,OACvBgE,EAAA,qBAAKC,UAAWC,IAAOjE,MAAOyB,EAAMzB,QAtBrC4E,2CA8DUnB,MAnCf,SAAoBhC,GAAyB,IAAAoH,EAMvCpH,EAJFgE,YAFyC,IAAAoD,EAElCjE,EAAU6C,eAFwBoB,EAGzC7I,EAGEyB,EAHFzB,KACA8I,EAEErH,EAFFqH,cAJyCC,EAMvCtH,EADF4E,YALyC,IAAA0C,EAKlC,GALkCA,EAAAC,EAO1BC,YAAQ,WAGvB,OAFAxG,QAAQC,IAAI,2BAA4B2D,GAEjC,CACLZ,OACAoC,KAAKlG,OAAA4E,EAAA,EAAA5E,CAAA,GAEA0E,GAEL6C,IAAK,aACLZ,QAAS,SAACR,GACR,MAAO,CACLS,KAAM,YAZLY,EAPkCxH,OAAAkF,EAAA,EAAAlF,CAAAqH,EAAA,MAwBvCI,EAAerF,EAAA,cAAC6E,EAAD,CAAgB5I,KAAMA,IAIzC,OAHI8I,IACFM,EAAUN,GAGV/E,EAAA,qBAAKC,UAAWC,IAAOpE,WAAY6I,IAAKS,GACrCC,uBCnDA,SAASC,EAAW5H,GAEzB,GAD0BA,EAAlB6H,gBACcD,EAAWC,cAC/B,OAAO,KAGT,IAAMC,EAAU,CACdC,gBAAiB/H,EAAMgI,MACvBC,gBAAiBjI,EAAMkI,OAEzB,OAAO5F,EAAA,qBAAKC,UAAWC,IAAOhE,WAAY2J,MAAOL,IAO5C,SAASM,EAAiBpI,GAAkB,IACzCgI,EAAqBhI,EAArBgI,MAAOK,EAAcrI,EAAdqI,UADkCC,EAEnBrF,WAAe+E,GAAS,IAFLO,EAAArI,OAAAkF,EAAA,EAAAlF,CAAAoI,EAAA,GAE1CE,EAF0CD,EAAA,GAEjCE,EAFiCF,EAAA,GAUjD,OACEjG,EAAA,yBACEA,EAAA,wCACAA,EAAA,uBACE1B,MAAO4H,EACP9F,SAAUO,cAVhB,SAAkBxC,GAChB4H,EAAU,QAAS5H,EAAEE,OAAOC,OAC5B6H,EAAWhI,EAAEE,OAAOC,QAQsB,IACtC6B,YAAY,sDApBpBmF,EAAWc,UAAY,qBACvBd,EAAWC,cAAgB,aAC3BD,EAAWhK,MAAQ,qBAwBnBwK,EAAiBP,cAAgB,oCCvC1B,SAASc,EAAM3I,GAAe,IAC3B4I,EAAS5I,EAAT4I,KACR,OAAOtG,EAAA,qBAAKC,UAAWC,IAAO/D,OAAQmK,GAOjC,SAASC,EAAY7I,GAAY,IAC9B4I,EAAmC5I,EAAnC4I,KAAMP,EAA6BrI,EAA7BqI,UACd,GAD2CrI,EAAlB6H,gBACHc,EAAMd,cAC1B,OAAO,KAOT,OACEvF,EAAA,yBACEA,EAAA,mCACAA,EAAA,uBAAO1B,MAAOgI,EAAMlG,SAPxB,SAAkBjC,GAChB4H,EAAU,OAAQ5H,EAAEE,OAAOC,QAMe6B,YAAY,gDAjB1DkG,EAAMD,UAAY,2BAClBC,EAAMd,cAAgB,QACtBc,EAAM/K,MAAQ,2BAmBdiL,EAAYhB,cAAgB,8DCtBrB,SAASiB,EAAS9I,GACvBgB,QAAQC,IAAI,gBAAiBjB,GADS,IAGpC+I,EAKE/I,EALF+I,MACAC,EAIEhJ,EAJFgJ,MAJoCC,EAQlCjJ,EAHFkJ,gBALoC,IAAAD,EAKzB,GALyBA,EAAAE,EAQlCnJ,EAFF2C,cANoC,IAAAwG,EAM3BC,OAAOC,iBANoBF,EAAAG,EAQlCtJ,EADFuJ,cAPoC,IAAAD,OAO3BE,EAP2BF,EAStC,OACEhH,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOA,EACPxK,KAAMyK,GAAgB,OACtBW,MAAO,CACL,CACET,SAA6B,WAAnBA,EAAStI,MACnBgJ,QAAO,GAAA7G,OAAKgG,EAAL,qCAGXzG,EAAA,cAACuH,EAAA,EAAD,CAAOC,UAAWnH,EAAQF,YAAa8G,KAK7CT,EAASJ,UAAY,2BACrBI,EAASjB,cAAgB,WACzBiB,EAASlL,MAAQ,2BAEjB,IAAMmM,EAAY,CAChB,CACEhB,MAAO,SACPnI,MAAO,UAET,CACEmI,MAAO,SACPnI,MAAO,WAILoJ,EAAgB,CACpBpM,MAAO,mCACPqM,KAAM,2BACNlB,MAAO,eACPmB,YAAa,iCACblB,MAAO,2BACPmB,YAAa,6CACbZ,OAAQ,2BACRa,aAAc,6CACdC,KAAM,2BACNnB,SAAU,eACVoB,eAAgB,6CAChBC,UAAW,2BACXC,gBAAiB,8CA2GZ,IAAMC,EAAiBxH,aAnG9B,SAAgBjD,EAAYiH,GAAU,IAAAyD,EACrBC,IAAKC,UAAbC,EAD6B3K,OAAAkF,EAAA,EAAAlF,CAAAwK,EAAA,MAEpCzH,sBAA0BgE,EAAK,iBAAO,CACpC4D,KAAMA,KAH4B,IAAAvC,EAKNrF,WAAe,IALTsF,EAAArI,OAAAkF,EAAA,EAAAlF,CAAAoI,EAAA,GAK7BwC,EAL6BvC,EAAA,GAKlBwC,EALkBxC,EAAA,GAMpCtF,YAAgB,WACd+H,WAAW,WAkBTD,EAjByB,CACvB,CACEhC,MAAO,MACPnI,MAAO,MACPqK,MAAO,KAET,CACElC,MAAO,OACPnI,MAAO,OACPqK,MAAO,KAET,CACElC,MAAO,MACPnI,MAAO,MACPqK,MAAO,QAIV,MACF,IA3BiC,IA4B5B1L,EAAqCS,EAArCT,OAAQ8I,EAA6BrI,EAA7BqI,UAChB,GAD6CrI,EAAlB6H,gBACLiB,EAASjB,cAC7B,OAAO,KAET,IAAMqD,EAAShL,OAAOiL,KAAK5L,GAAQ6L,OAAO,SAACC,EAAaC,GACtD,IAAMC,EAAM,CACVhN,KAAM,CAAC+M,GACP1K,MAAOrB,EAAO+L,IAKhB,OAFAD,EAAK5G,KAAK8G,GAEHF,GACN,IAMH,OACE/I,EAAA,cAACmH,EAAA,EAAD,CACEyB,OAAQA,EACRL,KAAMA,EACNW,eARJ,SAAwBC,EAAmBC,GACzC,IAAM5I,EAAM5C,OAAOiL,KAAKM,GAAc,GACtCpD,EAAUvF,EAAK2I,EAAa3I,KAO1B6I,SAAU,CAAEC,KAAM,IAClBtJ,EAAA,cAACuJ,EAAA,EAAD,CAAMjO,MAAOoM,EAAcpM,OACzB0E,EAAA,wBAAK0H,EAAcC,MACnB3H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,EAAcjB,MACrBxK,KAAK,QACLoL,MAAO,CAAC,CAAET,UAAU,EAAMU,QAASI,EAAcE,eACjD5H,EAAA,cAACuH,EAAA,EAAD,CAAOC,UAAW,GAAIrH,YAAauH,EAAcE,eAEnD5H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,EAAchB,MACrBzK,KAAK,QACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,EAAcG,eAG3B7H,EAAA,cAACwJ,EAAA,EAAD,CAAQC,cAAY,EAACtJ,YAAauH,EAAcG,aAC7CW,EAAUlI,IAAI,SAACoG,GAAD,OACb1G,EAAA,cAACwJ,EAAA,EAAOE,OAAR,CAAelJ,IAAKkG,EAAMpI,MAAOA,MAAOoI,EAAMpI,OAC3CoI,EAAMD,WAKfzG,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,EAAcT,OAAQhL,KAAK,UAC3C+D,EAAA,cAACuH,EAAA,EAAD,CAAOC,UAAW,GAAIrH,YAAauH,EAAcI,gBAEnD9H,EAAA,wBAAK0H,EAAcK,MACnB/H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,EAAcd,SAAU3K,KAAK,YAC7C+D,EAAA,cAACwJ,EAAA,EAAD,CAAQC,cAAY,EAACtJ,YAAauH,EAAcM,gBAC7CP,EAAUnH,IAAI,SAACwD,GAAD,OACb9D,EAAA,cAACwJ,EAAA,EAAOE,OAAR,CAAelJ,IAAKsD,EAAKxF,MAAOA,MAAOwF,EAAKxF,OACzCwF,EAAK2C,WAKdzG,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,EAAcO,UAAWhM,KAAK,UAC9C+D,EAAA,cAAC2J,EAAA,EAAD,CAAaC,IAAK,EAAGzJ,YAAauH,EAAcQ,uBC5JnD,SAAS2B,EAAYnM,GAAkB,IACpC4I,EAAS5I,EAAT4I,KACR,OAAOtG,EAAA,yBAAMsG,GAOR,SAASwD,EAAkBpM,GAAY,IACpC4I,EAAmC5I,EAAnC4I,KAAMP,EAA6BrI,EAA7BqI,UACd,GAD2CrI,EAAlB6H,gBACHsE,EAAYtE,cAChC,OAAO,KAOT,OACEvF,EAAA,yBACEA,EAAA,yCACAA,EAAA,uBAAO1B,MAAOgI,EAAMlG,SAPxB,SAAkBjC,GAChB4H,EAAU,OAAQ5H,EAAEE,OAAOC,QAMe6B,YAAY,gDCtBnD,SAAS4J,GAAUrM,GAAgB,IAChC4I,EAAS5I,EAAT4I,KACR,OAAOtG,EAAA,yBAAMsG,GDGfuD,EAAYzD,UAAY,2BACxByD,EAAYtE,cAAgB,cAC5BsE,EAAYvO,MAAQ,2BAmBpBwO,EAAkBvE,cAAgB,QCrBlCwE,GAAU3D,UAAY,qBACtB2D,GAAUxE,cAAgB,YAC1BwE,GAAUzO,MAAQ,qBAElB,IAAMmM,GAAY,CAChB,CACEhB,MAAO,SACPnI,MAAO,UAET,CACEmI,MAAO,SACPnI,MAAO,WAILoJ,GAAgB,CACpBpM,MAAO,oCACPqM,KAAM,2BACNlB,MAAO,eACPmB,YAAa,iCACblB,MAAO,2BACPmB,YAAa,6CACbZ,OAAQ,2BACRa,aAAc,6CACdtM,OAAQ,eACRwO,aAAc,yDACdjC,KAAM,2BACNnB,SAAU,2BACVoB,eAAgB,6CAChBiC,OAAQ,2BACRC,OAAQ,qBACRC,aAAc,uCACdC,OAAQ,2BACRC,aAAc,6CACdC,QAAS,2BACTC,cAAe,6CACf7I,KAAM,2BACN8I,WAAY,6CACZC,OAAQ,iCACRC,aAAc,mDACdC,SAAU,2BACVC,eAAgB,0DAqJX,IAAMC,GAAkBlK,aAnJxB,SAAgBjD,EAAYiH,GAAU,IAAAyD,EAC5BC,IAAKC,UAAbC,EADoC3K,OAAAkF,EAAA,EAAAlF,CAAAwK,EAAA,MAEnCrC,EAA6BrI,EAA7BqI,UAAWR,EAAkB7H,EAAlB6H,cACnB5E,sBAA0BgE,EAAK,iBAAO,CACpC4D,UAEF,IAAMW,EAAiBvI,cACrB,SAACwI,EAAmB2B,GAClB,IAAMtK,EAAM5C,OAAOiL,KAAKM,GAAc,GACtCpD,EAAUvF,EAAK2I,EAAa3I,KAE9B,CAACuF,IAXwCC,EAabrF,WAAe,IAbFsF,EAAArI,OAAAkF,EAAA,EAAAlF,CAAAoI,EAAA,GAapCwC,EAboCvC,EAAA,GAazBwC,EAbyBxC,EAAA,GAqC3C,OAvBAtF,YAAgB,WACd+H,WAAW,WAkBTD,EAjByB,CACvB,CACEhC,MAAO,MACPnI,MAAO,MACPqK,MAAO,KAET,CACElC,MAAO,OACPnI,MAAO,OACPqK,MAAO,KAET,CACElC,MAAO,MACPnI,MAAO,MACPqK,MAAO,QAIV,MACF,IAECpD,IAAkBwE,GAAUxE,cACvB,KAIPvF,EAAA,cAACmH,EAAA,EAAD,CAAM+B,eAAgBA,EAAgBG,SAAU,CAAEC,KAAM,IACtDtJ,EAAA,cAACuJ,EAAA,EAAD,CAAMjO,MAAOoM,GAAcpM,OACzB0E,EAAA,wBAAK0H,GAAcC,MACnB3H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAcjB,MACrBxK,KAAK,QACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAckD,kBAG3B5K,EAAA,cAACuH,EAAA,EAAD,CAAOC,UAAW,GAAIrH,YAAauH,GAAcE,eAEnD5H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAchB,MACrBzK,KAAK,QACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAckD,kBAG3B5K,EAAA,cAACwJ,EAAA,EAAD,CAAQC,cAAY,EAACtJ,YAAauH,GAAcG,aAC7CW,EAAUlI,IAAI,SAACoG,GAAD,OACb1G,EAAA,cAACwJ,EAAA,EAAOE,OAAR,CAAelJ,IAAKkG,EAAMpI,MAAOA,MAAOoI,EAAMpI,OAC3CoI,EAAMD,WAKfzG,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,GAAcT,OAAQhL,KAAK,UAC3C+D,EAAA,cAACuH,EAAA,EAAD,CAAOC,UAAW,GAAIrH,YAAauH,GAAcI,gBAEnD9H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,GAAclM,QAC9BwE,EAAA,cAACwJ,EAAA,EAAD,CACEC,cAAY,EACZtJ,YAAauH,GAAcsC,gBAE/BhK,EAAA,wBAAK0H,GAAcK,MACnB/H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAcwC,OACrBjO,KAAK,SACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAcyC,gBAG3BnK,EAAA,cAACuH,EAAA,EAAD,CAAOpH,YAAauH,GAAcyC,gBAEpCnK,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAc0C,OACrBnO,KAAK,SACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAc2C,gBAG3BrK,EAAA,cAACuH,EAAA,EAAD,CAAOpH,YAAauH,GAAc2C,gBAEpCrK,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAc4C,QACrBrO,KAAK,UACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAc6C,iBAG3BvK,EAAA,cAACuH,EAAA,EAAD,CAAOpH,YAAauH,GAAc6C,iBAEpCvK,EAAA,cAACmH,EAAA,EAAKC,KAAN,CAAWX,MAAOiB,GAAciD,SAAU1O,KAAK,WAC7C+D,EAAA,cAACwJ,EAAA,EAAD,CAAQC,cAAY,EAACtJ,YAAauH,GAAckD,gBAC7CnD,GAAUnH,IAAI,SAACwD,GAAD,OACb9D,EAAA,cAACwJ,EAAA,EAAOE,OAAR,CAAelJ,IAAKsD,EAAKxF,MAAOA,MAAOwF,EAAKxF,OACzCwF,EAAK2C,WAKdzG,EAAA,wBAAK0H,GAAcK,MACnB/H,EAAA,cAACmH,EAAA,EAAKC,KAAN,CACEX,MAAOiB,GAAcd,SACrB3K,KAAK,WACLoL,MAAO,CACL,CACET,UAAU,EACVU,QAASI,GAAcM,kBAG3BhI,EAAA,cAACwJ,EAAA,EAAD,CAAQC,cAAY,EAACtJ,YAAauH,GAAcM,gBAC7CP,GAAUnH,IAAI,SAACwD,GAAD,OACb9D,EAAA,cAACwJ,EAAA,EAAOE,OAAR,CAAelJ,IAAKsD,EAAKxF,MAAOA,MAAOwF,EAAKxF,OACzCwF,EAAK2C,eCzLf,SAASsE,GAASrN,GAAe,IAC9B4I,EAAS5I,EAAT4I,KACR,OAAOtG,EAAA,yBAAMsG,GAOR,SAAS0E,GAAetN,GAAY,IACjC4I,EAAmC5I,EAAnC4I,KAAMP,EAA6BrI,EAA7BqI,UACd,GAD2CrI,EAAlB6H,gBACHwF,GAASxF,cAC7B,OAAO,KAOT,OACEvF,EAAA,yBACEA,EAAA,sCACAA,EAAA,uBAAO1B,MAAOgI,EAAMlG,SAPxB,SAAkBjC,GAChB4H,EAAU,OAAQ5H,EAAEE,OAAOC,QAMe6B,YAAY,gDAjB1D4K,GAAS3E,UAAY,eACrB2E,GAASxF,cAAgB,WACzBwF,GAASzP,MAAQ,eAmBjB0P,GAAezF,cAAgB,kCCxBzB0F,GAAoC,CAAC,cAIrCC,GAAW,IAAI9J,IAAkD,CACrE,CAACkE,EAAWC,cAAeD,GAC3B,CAACe,EAAMd,cAAec,GACtB,CAACG,EAASjB,cAAeiB,GACzB,CAACqD,EAAYtE,cAAesE,GAC5B,CAACE,GAAUxE,cAAewE,IAC1B,CAACgB,GAASxF,cAAewF,MAGrBI,GAAkB,IAAI/J,IAAkD,CAC5E,CAACkE,EAAWC,cAAeO,GAC3B,CAACO,EAAMd,cAAegB,GACtB,CAACC,EAASjB,cAAe4C,GACzB,CAAC0B,EAAYtE,cAAeuE,GAC5B,CAACC,GAAUxE,cAAesF,IAC1B,CAACE,GAASxF,cAAeyF,MAmJZI,OAhJf,SAAsB1N,GAAsB,IAClCsD,EACNtD,EADMsD,SAAUkC,EAChBxF,EADgBwF,WAAY/B,EAC5BzD,EAD4ByD,QAASkC,EACrC3F,EADqC2F,WAAYhC,EACjD3D,EADiD2D,QAASiC,EAC1D5F,EAD0D4F,WADlB+H,EAOtClK,EAAQhC,OAHNiD,EAJoCiJ,EAIxCrM,GACesM,EALyBD,EAKxC9F,cACagG,EAN2BF,EAMxCG,YAGF9M,QAAQC,IAAI,oBAAqBjB,GATS,IAAAkF,EAWDjC,aACvC,SAACnC,EAADiN,GAAgD,IAAAC,EAAAD,EAAjC/J,YAAiC,IAAAgK,EAA1B,GAA0BA,EAAAC,EAAAF,EAAtB9J,eAAsB,IAAAgK,KAC9C,OAAQjK,GACN,IAAK,UACH,OAAO9D,OAAA4E,EAAA,EAAA5E,CAAA,GACFY,EADL,CAEEoN,SAAUjK,IAGd,IAAK,QACH,OAAO/D,OAAA4E,EAAA,EAAA5E,CAAA,GACFY,EADL,CAEEqN,OAAQlK,IAGZ,QACE,OAAOnD,IAGb,CACEoN,UAAU,EACVC,QAAQ,IAhC8BhJ,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAAgF,EAAA,GAAAG,EAAAF,EAAA,GAWjC+I,EAXiC7I,EAWjC6I,SAAUC,EAXuB9I,EAWvB8I,OAAU7I,EAXaH,EAAA,GAoCtCiJ,EAAcX,GAAgBY,IAAIT,GAChCU,EAAkBrL,SAAa,MAC/B1D,EAASoE,EAAQlC,OAAOiD,IAAW,GACnCoD,EAAe,GAiBrB,SAASyG,IACP/I,IAwBF,OAzCIjG,EAAOyI,QACTF,EAAQC,gBAAkBxI,EAAOyI,OAE/BzI,EAAO2I,QACTJ,EAAQG,gBAAkB1I,EAAO2I,OAsCjC5F,EAAA,qBAAKC,UAAWC,KAAO9D,cACrB4D,EAAA,qBAAKC,UAAWC,KAAO7D,SACrB2D,EAAA,qBAAKC,UAAWC,KAAO3D,UACrByD,EAAA,qBAAKkM,QAlBb,WACElJ,EAAS,CACPtB,KAAM,QACNC,SAAUkK,KAeiB5L,UAAW4L,EAAS3L,KAAO5D,OAAS,IAA3D,gBAGA0D,EAAA,qBAAKkM,QA5Bb,WACElJ,EAAS,CACPtB,KAAM,UACNC,SAAS,MAyBL,iBAEF3B,EAAA,qBAAKC,UAAWC,KAAO1D,UACrBwD,EAAA,qBAAKC,UAAWC,KAAOzD,KAAMyP,QAjBrC,WACkB,IAAAC,EAAZH,IACF,QAAAG,EAAAH,EAAW7K,eAAX,IAAAgL,KAAoB5D,KAAK6D,iBACzB1N,QAAQC,IAAI,wBAAyB1B,MAcjC,kBAKJ+C,EAAA,qBAAKC,UAAWC,KAAOxD,SACrBsD,EAAA,qBAAKC,UAAWC,KAAOvD,UAAWkJ,MAAOL,GACvCxF,EAAA,qBAAKC,UAAW4L,EAAS3L,KAAOrD,MAAQqD,KAAOtD,IAC5CoE,EAAS7B,OAAOmB,IAAI,SAACtD,EAAgBuD,GAAkB,IAAA8L,EACnBrP,EAA3BuI,qBAD8C,IAAA8G,EAC9B,GAD8BA,EAC1BrN,EAAOhC,EAAPgC,GAC5B,GAAIiM,GAAkCqB,SAAS/G,GAC7C,OAAO,KAEP,IAAMgH,EAAYrB,GAASa,IAAIxG,GACzBiH,EAAcnL,EAAQrC,GAC5B,OAAOuN,EACLvM,EAAA,qBACEC,UAAWC,KAAOpD,KAClB0D,IAAG,GAAAC,OAAKzD,EAAUuI,cAAf,KAAA9E,OAAgCF,GACnC2L,QAAS,kBAAM7I,EAAWrG,KACzBoF,IAAWpD,EACVgB,EAAA,qBAAKC,UAAWC,KAAOnD,OAAQmP,QAASD,GAAxC,gBAGE,KACJjM,EAAA,qBAAKC,UAAWC,KAAOlD,WACrBgD,EAAA,cAACuM,EAAcC,KAGjB,SAKZxM,EAAA,qBAAKC,UAAWC,KAAOjD,QACpB6O,EACC9L,EAAA,cAAC8L,EAADlO,OAAA8C,OAAA,CACEF,IAAK4B,EACLuC,IAAKqH,EACLzG,cAAe+F,EACfE,YAAaD,EACbtO,OAAQA,GACJA,EANN,CAOE8I,UAvFZ,SAAmB9J,EAAcqC,GAC/BgF,EAAW,CACTtE,GAAIoD,EACJnF,OAAOW,OAAA8E,EAAA,EAAA9E,CAAA,GACJ3B,EAAOqC,SAqFF,OAGPsN,EAAW5L,EAAA,qBAAKC,UAAWC,KAAOhD,SAAvB,WAAgD,qGC9JrDuP,GAAb,SAAAC,GAIE,SAAAD,EAAY/O,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2O,IACtB9O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6O,GAAAxO,KAAAH,KAAMJ,KAJRiP,WAGwB,EAAAhP,EAqCxBiP,aAAe,WAAM,IACX3I,EAAStG,EAAKD,MAAduG,KACRvF,QAAQC,IAAI,eAAgBsF,GAExB,OAAJA,QAAI,IAAJA,KAAM4I,QAAQ,CAAE5Q,KAAI,cAAAwE,OAAgB9C,EAAKgP,YAzCnBhP,EA4CxBmP,aAAe,WACbnP,EAAKsB,SAAS,CACZhD,KAAM,OA5CRyC,QAAQC,IAAI,eACZhB,EAAKa,MAAQ,CACXvC,KAAM,WAER0B,EAAKgP,MAAQ,EANShP,EAJ1B,OAAAC,OAAAmP,EAAA,EAAAnP,CAAA6O,EAAAC,GAAA9O,OAAAoP,EAAA,EAAApP,CAAA6O,EAAA,EAAAjM,IAAA,wBAAAlC,MAAA,SAYwBe,EAAgB4N,GACpC,IAAMC,EAAWpP,KAAKJ,MAAMuG,KACpBA,EAASnG,KAAKJ,MAAduG,KACRvF,QAAQC,IAAI,YAAauO,IAAajJ,GACtC,IAAM3B,EAAI,OAAG2B,QAAH,IAAGA,OAAH,EAAGA,EAAMkJ,UACnB,cAAIlJ,QAAJ,IAAIA,KAAMmJ,WAAW,SACnB1O,QAAQC,IAAI,iBAAkB2D,IAEvB,IAEP5D,QAAQC,IAAI,0BAA2B2D,IAGlC,KAzBX,CAAA9B,IAAA,oBAAAlC,MAAA,WA+BI,IAAM+O,EAAQjJ,KAAKkJ,MAEbC,EAAWnJ,KAAKkJ,MAAQD,EAC9B3O,QAAQC,IAAI,YAAa0O,EAAOE,KAlCpC,CAAA/M,IAAA,qBAAAlC,MAAA,WAsCII,QAAQC,IAAI,YAAab,KAAKJ,SAtClC,CAAA8C,IAAA,gBAAAlC,MAAA,SAsDgBU,GAEZ,OACEwO,EAAAC,EAAAC,cAAA,OAAKzN,UAAWC,KAAO5C,MAAvB,MAAAmD,OACSzB,MA1Df,CAAAwB,IAAA,mBAAAlC,MAAA,SAmEmBU,GAEf,OAAOwO,EAAAC,EAAAC,cAAA,kBAAAjN,OAAazB,MArExB,CAAAwB,IAAA,SAAAlC,MAAA,WAwEW,IACC2F,EAASnG,KAAKJ,MAAduG,KAEAvC,IAAa,OAAJuC,QAAI,IAAJA,OAAA,EAAAA,EAAMkJ,YAAa,IAA5BzL,KAER,OADAhD,QAAQC,IAAI,gBAAiB+C,GACb,eAATA,EACH5D,KAAK6P,iBAAkB1J,EAAajF,IACpClB,KAAK8P,cAAe3J,EAAajF,QA/EzCyN,EAAA,CAA6BF,aAAhBE,GAEJlH,qBAFIkH,GAGJnR,aAgFTmR,GAAQlH,cAAgB,WACxBkH,GAAQnR,MAAQ,0CCvFHuS,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAApQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+P,GAAA,QAAAG,EAAAC,UAAA5N,OAAA6N,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAzQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,MAAAiQ,EAAAnQ,OAAAI,EAAA,EAAAJ,CAAAiQ,IAAA5P,KAAAoQ,MAAAN,EAAA,CAAAjQ,MAAA2C,OAAAyN,MAIUI,UAJV,EAAA3Q,EAKU4Q,WALV,EAAA5Q,EAMU6Q,iBANV,EAAA7Q,EAkBE8Q,OAAS,SAACC,GAAc,IAAAC,EACChR,EAAK6Q,YAApBI,EADcD,EACdC,KAAMC,EADQF,EACRE,KACNrO,EAAQkO,EAARlO,IACR,GAAY,MAARA,EAAa,KAAAsO,EACT5E,EAAS2E,EAAKE,gBACd1Q,EAASwQ,EAAKG,gBACdC,EAAS,OAAG/E,QAAH,IAAGA,OAAH,EAAGA,EAAQgF,WACpBC,EAAS,OAAG9Q,QAAH,IAAGA,OAAH,EAAGA,EAAQ6Q,WAC1BxQ,QAAQC,IAAI,sCAAuCuL,EAAQ7L,GAC3D,IAAM+Q,EAAQP,EAAKO,QAInBA,EAAMC,UAAU,CACdC,EAAGL,EAAUK,EAAI,GACjBC,EAAGN,EAAUM,EAAI,KAEnBH,EAAMI,UAAU,CACdF,EAAGH,EAAUG,EAAI,GACjBC,EAAGJ,EAAUI,EAAI,KAEnB7Q,QAAQC,IAAI,gBAAiBkQ,GAC7BnQ,QAAQC,IAAI,cAAeyQ,GAE3B,QAAAN,EAAAnR,EAAKR,aAAL,IAAA2R,KAAYW,QAAQL,QAef,GAAY,MAAR5O,EAAa,KACdrC,EAAMR,EAAK6Q,YAAXrQ,EACR,GAAIyQ,EAAKc,SAAU,KAAAC,EAAAC,EAAAC,EACXC,EAAa,QAAAH,EAAGhS,EAAKR,aAAR,IAAAwS,OAAA,EAAGA,EAAYI,iBAAiBnB,GAC7CoB,EAAa,QAAAJ,EAAGjS,EAAKR,aAAR,IAAAyS,OAAA,EAAGA,EAAYK,iBAAiBrB,GAC3CsB,EAAqB/R,EAArB+R,QAASC,EAAYhS,EAAZgS,QACXC,EAAMzS,EAAKR,MAAMkT,cAAcH,EAASC,GAC1CL,GACFA,EAAcQ,QAAQ,SAACzB,GACrBA,EAAKQ,UAAUe,KAGfJ,GACFA,EAAcM,QAAQ,SAACzB,GACrBA,EAAKW,UAAUY,KASnB,QAAAP,EAAAlS,EAAKR,aAAL,IAAA0S,KAAYU,YAAY,CAAC3B,SACpB,GAAIA,EAAK4B,SAAU,KAAAC,EACxB,QAAAA,EAAA9S,EAAKR,aAAL,IAAAsT,KAAYC,WAAW9B,MAlF/BjR,EA+HUgT,YAAc,WACpBhT,EAAK4Q,MAAQqC,OAAOlI,WAAW,WAC7B/K,EAAKkT,iBACLlT,EAAKmT,mBAAkB,IACtB,MAnIPnT,EAAA,OAAAC,OAAAmP,EAAA,EAAAnP,CAAAiQ,EAAAC,GAAAlQ,OAAAoP,EAAA,EAAApP,CAAAiQ,EAAA,EAAArN,IAAA,SAAAlC,MAAA,WAeI,OANKR,KAAKwQ,OACRxQ,KAAKwQ,KAAOyC,KAAUrD,cAAc,OAAO,GAC3C5P,KAAKwQ,KAAKzI,MAAMqJ,SAAW,WAC3BpR,KAAKrC,UAAUuV,YAAYlT,KAAKwQ,OAG3BxQ,OAfX,CAAA0C,IAAA,aAAAlC,MAAA,WAwFI,OACEkP,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAM/E,QAASpO,KAAK2Q,QAClBjB,EAAAC,EAAAC,cAACuD,GAAA,EAAK7J,KAAN,CAAW5G,IAAI,KAAf,gBACAgN,EAAAC,EAAAC,cAACuD,GAAA,EAAK7J,KAAN,CAAW5G,IAAI,KAAf,gBACAgN,EAAAC,EAAAC,cAACuD,GAAA,EAAK7J,KAAN,CAAW5G,IAAI,KAAf,QA5FR,CAAAA,IAAA,oBAAAlC,MAAA,SAiG4B4S,GACxBC,KAASC,uBAAuBtT,KAAKwQ,MACrC+C,SAASC,oBAAoB,YAAaxT,KAAK6S,aAE3CO,IACFC,KAASI,OACP/D,EAAAC,EAAAC,cAAC8D,GAAA,EAAD,CACEN,SAAS,EACTO,QAAS,CAAC,eACVC,QAAS5T,KAAK6T,cACdnE,EAAAC,EAAAC,cAAA,oBAEF5P,KAAKwQ,MAEP+C,SAASO,iBAAiB,YAAa9T,KAAK6S,gBA/GlD,CAAAnQ,IAAA,iBAAAlC,MAAA,SAmHyBH,GAAgB,IAAA0T,EAC/BhM,GAAQ,QAAAgM,EAAA/T,KAAKwQ,YAAL,IAAAuD,OAAA,EAAAA,EAAWhM,QAAU,GACnC,GAAI1H,EAAG,CACL,IAAMiS,EAAMtS,KAAKX,MAAMkT,cAAclS,EAAE+R,QAAS/R,EAAEgS,SAClDtK,EAAMiM,KAAN,GAAArR,OAAgB2P,EAAId,EAApB,MACAzJ,EAAMkM,IAAN,GAAAtR,OAAe2P,EAAIb,EAAnB,WAEA1J,EAAMiM,KAAO,UACbjM,EAAMkM,IAAM,YA3HlB,CAAAvR,IAAA,gBAAAlC,MAAA,SAsIwBoQ,GAAW,IACvBvQ,EAAMuQ,EAANvQ,EAERL,KAAK0Q,YAAcE,EACf5Q,KAAKyQ,QACPyD,aAAalU,KAAKyQ,OAClBzQ,KAAKyQ,MAAQ,GAGfzQ,KAAK+S,eAAe1S,GACpBL,KAAKgT,mBAAkB,KAhJ3B,CAAAtQ,IAAA,iBAAAlC,MAAA,WAsJI,OADAR,KAAKmU,SAASC,GAAG,mBAAoBpU,KAAKqU,cAAerU,MAClDF,OAAAmO,GAAA,EAAAnO,QAAAI,EAAA,EAAAJ,CAAAiQ,EAAAuE,WAAA,iBAAAtU,MAAAG,KAAAH,QAtJX,CAAA0C,IAAA,WAAAlC,MAAA,WA0JIR,KAAKmU,SAASI,IAAI,mBAAoBvU,KAAKqU,cAAerU,UA1J9D+P,EAAA,CAAqCkD,KAAUuB,UA8J/CzE,GAAgB5Q,OAAO,CACrBsV,QAAS,MACTC,cAAc,8BC7JHC,GAAb,SAAA/F,GAIE,SAAA+F,EAAY/U,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2U,IACtB9U,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6U,GAAAxU,KAAAH,KAAMJ,KAJRiP,WAGwB,EAAAhP,EAkCxBiP,aAAe,WAAM,IACX3I,EAAStG,EAAKD,MAAduG,KACRvF,QAAQC,IAAI,eAAgBsF,GAExB,OAAJA,QAAI,IAAJA,KAAM4I,QAAQ,CAAE5Q,KAAI,cAAAwE,OAAgB9C,EAAKgP,YAtCnBhP,EAyCxBmP,aAAe,WACbnP,EAAKsB,SAAS,CACZhD,KAAM,OAzCRyC,QAAQC,IAAI,eACZhB,EAAKa,MAAQ,CACXvC,KAAM,WAER0B,EAAKgP,MAAQ,EANShP,EAJ1B,OAAAC,OAAAmP,EAAA,EAAAnP,CAAA6U,EAAA/F,GAAA9O,OAAAoP,EAAA,EAAApP,CAAA6U,EAAA,EAAAjS,IAAA,wBAAAlC,MAAA,SAYwBe,EAAgB4N,GACpC,IAAMC,EAAWpP,KAAKJ,MAAMuG,KACpBA,EAASnG,KAAKJ,MAAduG,KAER,OADAvF,QAAQC,IAAI,YAAauO,IAAajJ,KACtC,OAAIA,QAAJ,IAAIA,MAAMmJ,WAAW,WAGnB1O,QAAQC,IAAI,uBAGP,KAtBX,CAAA6B,IAAA,oBAAAlC,MAAA,WA4BI,IAAM+O,EAAQjJ,KAAKkJ,MAEbC,EAAWnJ,KAAKkJ,MAAQD,EAC9B3O,QAAQC,IAAI,YAAa0O,EAAOE,KA/BpC,CAAA/M,IAAA,qBAAAlC,MAAA,WAmCII,QAAQC,IAAI,YAAab,KAAKJ,SAnClC,CAAA8C,IAAA,gBAAAlC,MAAA,WAmDkB,IAAAoU,EAAAC,EACd,OACEnF,EAAAC,EAAAC,cAAA,OAAKzN,UAAWC,KAAO5C,MACrBkQ,EAAAC,EAAAC,cAAA,OAAKxB,QAASpO,KAAK8O,cAAnB,eACAY,EAAAC,EAAAC,cAAA,OAAKxB,QAASpO,KAAKgP,cAAnB,eAFF,YAAArM,OAGe3C,KAAKU,MAAMvC,KAH1B,KAAAwE,OAAA,QAAAiS,EAGkC5U,KAAKJ,MAAMuG,YAH7C,IAAAyO,OAAA,UAAAC,EAGkCD,EAAiBpQ,YAHnD,IAAAqQ,OAAA,EAGkCA,EAAuB1W,MAHzD,eArDN,CAAAuE,IAAA,mBAAAlC,MAAA,WA+DI,OAAOkP,EAAAC,EAAAC,cAAA,2BA/DX,CAAAlN,IAAA,SAAAlC,MAAA,WAkEW,IACC2F,EAASnG,KAAKJ,MAAduG,KACA2O,IAAa,OAAJ3O,QAAI,IAAJA,OAAA,EAAAA,EAAMkJ,YAAa,IAA5ByF,KAER,OADAlU,QAAQC,IAAI,gBAAiBiU,GACb,eAATA,EACH9U,KAAK6P,mBACL7P,KAAK8P,oBAxEb6E,EAAA,CAAiClG,aAApBkG,GAEJlN,qBAFIkN,GAGJnX,aAyETmX,GAAYlN,cAAgB,eAC5BkN,GAAYnX,MAAQ,WC9EpB,SAAAuX,GAAA,SAAAC,IAAA,OAAAlV,OAAAC,EAAA,EAAAD,CAAAE,KAAAgV,GAAAlV,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkV,GAAAzE,MAAAvQ,KAAAmQ,YAAA,OAAArQ,OAAAmP,EAAA,EAAAnP,CAAAkV,EAAAD,GAAAjV,OAAAoP,EAAA,EAAApP,CAAAkV,EAAA,EAAAtS,IAAA,kBAAAlC,MAAA,WAEI,MAAO,WAFX,CAAAkC,IAAA,aAAAlC,MAAA,SAKaoQ,GACT,OAAO,IANX,CAAAlO,IAAA,aAAAlC,MAAA,SASaoQ,GAET,OAD6B,CAAC,WAAY,gBACjBpC,SAASoC,OAXtCoE,EAAA,CAA2BC,MAkBrB9V,OAAO,CACX+V,MAAO,IACPC,OAAQ,GACRjW,UAAWwQ,EAAAC,EAAAC,cAAA,sBAIN,IAAMwF,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAnF,EAAApQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoV,GAAA,QAAAlF,EAAAC,UAAA5N,OAAAqO,EAAA,IAAAP,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAM,EAAAN,GAAAH,UAAAG,GAAA,OAAAzQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,MAAAiQ,EAAAnQ,OAAAI,EAAA,EAAAJ,CAAAsV,IAAAjV,KAAAoQ,MAAAN,EAAA,CAAAjQ,MAAA2C,OAAAiO,MACEkE,KAAe,UADjBjV,EAAA,OAAAC,OAAAmP,EAAA,EAAAnP,CAAAsV,EAAAC,GAAAvV,OAAAoP,EAAA,EAAApP,CAAAsV,EAAA,EAAA1S,IAAA,UAAAlC,MAAA,SAEUsU,GACN9U,KAAK8U,KAAOA,IAHhB,CAAApS,IAAA,kBAAAlC,MAAA,WAMI,MAAO,aANX,CAAAkC,IAAA,aAAAlC,MAAA,SASaoQ,GACT,OAAO,IAVX,CAAAlO,IAAA,aAAAlC,MAAA,SAaaoQ,GAET,OAD6B,CAAC,WAAY,gBACjBpC,SAASoC,OAftCwE,EAAA,CAAiCH,MAuBjCG,GAAYjW,OAAO,CACjB+V,MAAO,IACPC,OAAQ,GACRjW,UAAWwQ,EAAAC,EAAAC,cAAC0F,GAAD,QAIN,IAAMC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAzV,OAAAC,EAAA,EAAAD,CAAAE,KAAAuV,GAAAzV,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyV,GAAAhF,MAAAvQ,KAAAmQ,YAAA,OAAArQ,OAAAmP,EAAA,EAAAnP,CAAAyV,EAAAC,GAAA1V,OAAAoP,EAAA,EAAApP,CAAAyV,EAAA,EAAA7S,IAAA,kBAAAlC,MAAA,WAEI,MAAO,aAFX,CAAAkC,IAAA,aAAAlC,MAAA,SAKaoQ,GACT,OAAO,IANX,CAAAlO,IAAA,aAAAlC,MAAA,SASaoQ,GAET,OAD6B,CAAC,YACLpC,SAASoC,OAXtC2E,EAAA,CAAiCN,MAmBjCM,GAAYpW,OAAO,CACjB+V,MAAO,IACPC,OAAQ,GAERM,WAAY,CAACC,KAAOC,0BACpBC,MAAO,CACLC,OAAQ,CACNC,GAAI,CACF1E,SAAU,CAAEjT,KAAM,OAClB4X,MAAO,CACLC,GAAI,CACFd,MAAO,GACPC,OAAQ,GACR3D,GAAI,EACJC,GAAI,EACJwE,OAAQ,SAGZC,OAAQ,GAEVC,IAAK,CACH/E,SAAU,CAAEjT,KAAM,UAClB4X,MAAO,CACLC,GAAI,CACFd,MAAO,GACPC,OAAQ,GACR3D,GAAI,EACJC,GAAI,EACJwE,OAAQ,SAGZC,OAAQ,IAGZE,MAAO,CACL,CAAEC,MAAO,KAAMnV,GAAI,OACnB,CAAEmV,MAAO,KAAMnV,GAAI,OACnB,CAAEmV,MAAO,MAAOnV,GAAI,QACpB,CAAEmV,MAAO,MAAOnV,GAAI,YAKnB,IAAMoV,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxW,OAAAC,EAAA,EAAAD,CAAAE,KAAAsW,GAAAxW,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwW,GAAA/F,MAAAvQ,KAAAmQ,YAAA,OAAArQ,OAAAmP,EAAA,EAAAnP,CAAAwW,EAAAC,GAAAzW,OAAAoP,EAAA,EAAApP,CAAAwW,EAAA,EAAA5T,IAAA,kBAAAlC,MAAA,WAEI,MAAO,iBAFX,CAAAkC,IAAA,aAAAlC,MAAA,SAKaoQ,GACT,OAAO,IANX,CAAAlO,IAAA,aAAAlC,MAAA,SASaoQ,GAET,OAD6B,CAAC,gBACLpC,SAASoC,OAXtC0F,EAAA,CAAqCrB,MAmBrCqB,GAAgBnX,OAAO,CACrB+V,MAAO,IACPC,OAAQ,GACRjW,UAAWwQ,EAAAC,EAAAC,cAAC4G,GAAD,MACXf,WAAY,CAACC,KAAOC,0BACpBC,MAAO,CACLC,OAAQ,CACNC,GAAI,CACF1E,SAAU,CAAEjT,KAAM,OAClB4X,MAAO,CACLC,GAAI,CACFd,MAAO,GACPC,OAAQ,GACR3D,GAAI,EACJC,GAAI,EACJwE,OAAQ,SAGZC,OAAQ,GAEVC,IAAK,CACH/E,SAAU,CAAEjT,KAAM,UAClB4X,MAAO,CACLC,GAAI,CACFd,MAAO,GACPC,OAAQ,GACR3D,GAAI,EACJC,GAAI,EACJwE,OAAQ,SAGZC,OAAQ,IAGZE,MAAO,CACL,CAAEC,MAAO,KAAMnV,GAAI,OACnB,CAAEmV,MAAO,MAAOnV,GAAI,YCnL1BuV,KAAMC,aAAa,WAAYtB,IAAa,GAC5CqB,KAAMC,aAAa,WAAYnB,IAAa,GAC5CkB,KAAMC,aAAa,eAAgBJ,IAAiB,GAIpDG,KAAME,iBAAiB,cAAe5G,IAAiB,GACvD0G,KAAMG,iBAAiB,cAAe7G,IAAiB,GCiCvD,IAAM8G,GAAW,CACfC,MAAO,CACL,CACE5V,GAAI,QACJsQ,EAAG,GACHC,EAAG,GACHyD,MAAO,GACPC,OAAQ,GACRxM,MAAO,SAkDT,CACEzH,GAAI,QACJsQ,EAAG,IACHC,EAAG,IACHyD,MAAO,GACPC,OAAQ,GACRxM,MAAO,SAUT,CACEzH,GAAI,SACJsQ,EAAG,IACHC,EAAG,IACHyD,MAAO,GACPC,OAAQ,GACRxM,MAAO,SACPnE,KAAM,CACJrG,KAAM,SACN4Y,IAAK,IACLC,KAAM,CACJC,KAAM,YAqBdC,MAAO,CACL,CACE9K,OAAQ,CACN0E,KAAM,QACNqG,KAAM,SAER5W,OAAQ,CACNuQ,KAAM,SACNqG,KAAM,OAER3S,KAAM,CACJuS,IAAK,EACLC,KAAM,CACJ7Y,KAAM,YAIZ,CACEiO,OAAQ,CACN0E,KAAM,QACNqG,KAAM,SAER5W,OAAQ,CACNuQ,KAAM,QACNqG,KAAM,UAirBCC,8MAhlBbzZ,UAAmC,OACnC0B,eAEAgY,aAAe,SAAC1Z,GACdkC,EAAKlC,UAAYA,KAInB2E,SAAW,WAAM,IACPiD,EAAe1F,EAAKD,MAApB2F,WACR3E,QAAQC,IAAI,cAEZ0E,EAAW,CAAEpH,KAAM,QAmerBmZ,aAAe,WAAM,IAAAtG,EAAAa,EAAAC,EACbyF,EAAO,QAAAvG,EAAGnR,EAAKR,aAAR,IAAA2R,OAAA,EAAGA,EAAYwG,SACtBC,EAAK,QAAA5F,EAAGhS,EAAKR,aAAR,IAAAwS,OAAA,EAAGA,EAAY4F,MACpBC,EAAI,QAAA5F,EAAGjS,EAAKR,aAAR,IAAAyS,OAAA,EAAGA,EAAY4F,KACzB9W,QAAQC,IAAI,eAAgB0W,EAASE,EAAOC,MAG9CC,aAAe,WAAM,IAAA5F,EACb6F,EAAQ,QAAA7F,EAAGlS,EAAKR,aAAR,IAAA0S,OAAA,EAAGA,EAAY8F,WACrB,OAARD,QAAQ,IAARA,KAAUpF,QAAQ,SAACrM,GACjBA,EAAK4I,QAAQ,CACXnL,KAAM,oBAiCZkU,SAAW,WAAM,IAAAnF,EAAAoF,EAAAC,EAETC,GAAoB,QAAAtF,EAAA9S,EAAKR,aAAL,IAAAsT,OAAA,EAAAA,EAAYuF,iBAAmB,GACnDC,GAAY,QAAAJ,EAAAlY,EAAKR,aAAL,IAAA0Y,OAAA,EAAAA,EAAYK,iBAAkB,GAC5CC,EAAeJ,EAInBrX,QAAQC,IAAI,gBAAiBsX,EAAU5V,QAIvC,QAAAyV,EAAAnY,EAAKR,aAAL,IAAA2Y,KAAYM,YAAY,WAGtB,IAFA,IAAIC,EAAQ,EAELF,EAAa9V,OAAS,GAAG,CAC9B3B,QAAQC,IAAI,iBAAkBwX,GAC9B,IAAMG,EAASH,EAAarN,OAC1B,SAACyN,EAAatS,EAAW1D,GAAkB,IAAAiW,EACzCvS,EAAKiL,SACH,EAfY,IAeRmH,EACJ,EAfa,GAeT9V,GAEN,IAAM+V,EAAM,QAAAE,EAAG7Y,EAAKR,aAAR,IAAAqZ,OAAA,EAAGA,EAAYC,aAAaxS,EAAa,CACnDyS,UAAU,IAGZ,OADAH,EAAMA,EAAI9V,OAAO6V,IAGnB,IAEFD,GAAS,EACTF,EAAeG,yFAviBD,IAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAgBlB1Z,KAAKX,MAAQ,IAAIoX,KAAM,CACrB9Y,UAAWqC,KAAKrC,UAChBgc,MAAM,EACNC,QAAS,CACPC,SAAS,EACTC,UAAW,CAAC,QAEdC,UAAW,CACTF,SAAS,GAEXG,UAAW,CACTH,SAAS,EAETI,YAAY,EACZC,QAAQ,EACRC,SAAS,EACTC,sBAAsB,EACtBC,sBAAsB,GAExBC,SAAU,CACRT,SAAS,EACTU,OAAO,GAETC,SAAU,CACRX,SAAS,EACTY,aAAa,EACbC,WAAW,GAIbC,aAAc,CAEZC,gBA1CkC,CACpCzc,KAAM,SACNyS,KAAM,CACJiK,QAAS,EACT9E,MAAO,CACL+E,YAAa,EACbC,OAAQ,cAsCZC,WAAY,CAEVC,MAAM,EACNC,YAAY,EAEZC,WAAW,EACXC,WAAW,EAGXC,WAAW,EAEXC,eAXU,SAWK1K,GAAM,IACXqF,EAAWrF,EAAXqF,OAER,OADArV,QAAQC,IAAI,uBAAwB+P,GACS,OAAtCqF,EAAOsF,aAAa,eAG7BC,WAAY,SAAC5K,GAOX,OADAhQ,QAAQC,IAAI,mBAAoB+P,GACzB,IAAI6K,KAAK,CACd7d,MAAO,CACL,CACEO,KAAM,mBAMdud,mBAjCU,SAiCS9K,GACjBhQ,QAAQC,IAAI,4BAA6B+P,GADb,IAgBpB+K,EAAiC/K,EAAjC+K,WAAYC,EAAqBhL,EAArBgL,WAUpB,MAPa,WAH4BhL,EAAThN,KAI9BhD,QAAQC,IAAI,oBAAqB+a,GAEjChb,QAAQC,IAAI,oBAAqB8a,IAI5B,GAaTE,aAxEU,SAwEGjL,GAAW,IAQdG,EAAeH,EAAfG,KAAMnN,EAASgN,EAAThN,KACRkY,EAAY/K,EAAKgL,YACjBC,EAAYjL,EAAKkL,YAEjB7P,EAAS2E,EAAKE,gBACd1Q,EAASwQ,EAAKG,gBACpB,GAAa,WAATtN,GACF,IAAKwI,EACH,OAAO,OAEJ,GAAa,WAATxI,IACJrD,EACH,OAAO,EApBW,IAwBhB2b,EADY3b,EAAVkX,MACetF,iBAAiB5R,GASxC,OARAK,QAAQC,IACN,oBACAqb,EACAJ,EACAE,EACApL,IAGK,IAGXuL,YAAa,GACbC,eA/IqB,SA+INxL,GACb,IAAMyL,EAAYzL,EAAK0L,iBACjB3e,EAAY0e,GAAaA,EAAUE,UACrC5e,GACF6e,KAAS/I,OAELvR,EAAA,cAACua,GAAA,EAAD,CAASjf,MAAM,QACb0E,EAAA,qBAAKC,UAAWC,KAAO7C,UAG3B5B,MAMR,QAAAkb,EAAA7Y,KAAKX,aAAL,IAAAwZ,KAAYzE,GAAG,eAAgB,SAAUxD,GACvChQ,QAAQC,IAAI,oBAAqB+P,KAEnC,QAAAkI,EAAA9Y,KAAKX,aAAL,IAAAyZ,KAAY1E,GAAG,eAAgB,SAAUxD,GACvChQ,QAAQC,IAAI,oBAAqB+P,KAEnC,QAAAmI,EAAA/Y,KAAKX,aAAL,IAAA0Z,KAAY3E,GAAG,eAAgB,SAAUxD,GACvChQ,QAAQC,IAAI,oBAAqB+P,KAInC,QAAAoI,EAAAhZ,KAAKX,aAAL,IAAA2Z,KAAY5E,GAAG,gBAAiB,SAACxD,GAC/BhQ,QAAQC,IAAI,qBAAsB+P,KAEpC,QAAAqI,EAAAjZ,KAAKX,aAAL,IAAA4Z,KAAY7E,GAAG,gBAAiB,SAACxD,GAC/BhQ,QAAQC,IAAI,qBAAsB+P,KAEpC,QAAAsI,EAAAlZ,KAAKX,aAAL,IAAA6Z,KAAY9E,GAAG,gBAAiB,SAACxD,GAAS,IAChCG,EAASH,EAATG,KACAxQ,EAAmBwQ,EAAnBxQ,OAAQ6L,EAAW2E,EAAX3E,OAChBxL,QAAQC,IAAI,qBAAsBN,EAAQ6L,KAI5C,QAAA+M,EAAAnZ,KAAKX,aAAL,IAAA8Z,KAAY/E,GAAG,oBAAqB,SAACxD,GAQnChQ,QAAQC,IAAI,2BAA4B+P,GARI,IASpCtR,EAAasR,EAAbtR,SACFwR,EAAOxR,EAAS,GACtB,UAAIwR,QAAJ,IAAIA,KAAMc,SAAU,CAClB,IAAMN,EAAQR,EAAKQ,QACnB1Q,QAAQC,IAAI,aAAciQ,EAAK4L,MAAOpL,EAAMoL,MAAO5L,EAAMQ,GAE3D,UAAIR,QAAJ,IAAIA,KAAM4B,SAAU,CAClB,IAAMpB,EAAQR,EAAKQ,QACnB1Q,QAAQC,IACN,gBACAiQ,EAAK6L,kBACL7L,EAAK8L,mBAEPhc,QAAQC,IACN,iBACAyQ,EAAMqL,kBACNrL,EAAMsL,mBAER9L,EAAKsD,GAAG,cAAe,SAACxD,GACtBhQ,QAAQC,IAAI,cAAe+P,KAE7BE,EAAK/B,QAAQ,CACXxL,QAAS,CACPpF,KAAM,OAGVyM,WAAW,WACTkG,EAAK/B,QAAQ,CACXxL,QAAS,CACPpF,KAAM,aAGT,KAzCuC,IAAAwP,EA2ChBrO,EAAS,IAAe,GAA5CiB,EA3CoCoN,EA2CpCpN,OAAQ6L,EA3C4BuB,EA2C5BvB,OAChBxL,QAAQC,IAAI,cAAeN,EAAQ6L,KAIrC,QAAAgN,EAAApZ,KAAKX,aAAL,IAAA+Z,KAAYhF,GAAG,aAAc,SAACxD,GAC5BhQ,QAAQC,IAAI,iBAAkB+P,KAIhC,QAAAyI,EAAArZ,KAAKX,aAAL,IAAAga,KAAYjF,GAAG,eAAgB,SAACxD,GAC9BhQ,QAAQC,IAAI,qBAAsB+P,KAIpC,QAAA0I,EAAAtZ,KAAKX,aAAL,IAAAia,KAAYlF,GAAG,iBAAkB,SAACxD,GAAS,IACjCG,EAASH,EAATG,KACAxQ,EAAmBwQ,EAAnBxQ,OAAQ6L,EAAW2E,EAAX3E,OAChBxL,QAAQC,IAAI,sBAAuBN,EAAQ6L,KAI7C,QAAAmN,EAAAvZ,KAAKX,aAAL,IAAAka,KAAYnF,GAAG,kBAAmB,SAAAyI,GAAcA,EAAX/L,KAC9BgM,SAAS,CACZ,CACE3e,KAAM,mBAKZ,QAAAqb,EAAAxZ,KAAKX,aAAL,IAAAma,KAAYpF,GAAG,kBAAmB,SAAA2I,GAAcA,EAAXjM,KAC9BkM,gBAGP,QAAAvD,EAAAzZ,KAAKX,aAAL,IAAAoa,KAAYrF,GAAG,kBAAmB,SAAA6I,GAAcA,EAAXnM,KAC9BgM,SAAS,CACZ,CACE3e,KAAM,oBAER,CACEA,KAAM,mBACNyS,KAAM,CACJmF,MAAO,CACLmH,KAAM,SAIZ,CACE/e,KAAM,mBAKZ,QAAAub,EAAA1Z,KAAKX,aAAL,IAAAqa,KAAYtF,GAAG,kBAAmB,SAAA+I,GAAcA,EAAXrM,KAC9BkM,gBAxSW,IAsWVlW,EAAS9G,KAAKJ,MAAdkH,KACR8D,WAAW,WACT,IAAMgL,EAAQ,CACZ,CACE1U,GAAI,MACJ6U,MAAO,CACLqH,OAAQ,CACNC,EAAG,EACHpH,QAAQ,EACR8E,OAAQ,UACRD,YAAa,EACboC,KAAM,UAIZ,CACEhc,GAAI,QACJ6U,MAAO,CACLqH,OAAQ,CACNC,EAAG,EACHpH,QAAQ,EACR8E,OAAQ,UACRD,YAAa,EACboC,KAAM,WAMRpG,EAAQD,GAASC,MAAMtU,IAAI,SAAC2D,GAAD,OAAArG,OAAA4E,EAAA,EAAA5E,CAAA,GAC5BqG,EAD4B,CAG/ByP,YAEIsB,EAAQL,GAASK,MAAM1U,IAAI,SAACuO,GAAD,OAAAjR,OAAA4E,EAAA,EAAA5E,CAAA,GAC5BiR,EAD4B,CAE/B2L,MAAO,WAGT5V,EAAK,CACH5D,SAAU4T,EACV1T,SAAU8T,EACV7T,QAAS,GACTE,QAAS,MAEV,mDAIH3C,QAAQC,IAAI,0DAGKyc,EAAgB9b,GAAgB,IAAAG,EACG3B,KAAKJ,MAAjDsD,EADyCvB,EACzCuB,SAAUE,EAD+BzB,EAC/ByB,SAAUI,EADqB7B,EACrB6B,WAAYH,EADS1B,EACT0B,QAClCka,EAAeD,EAAUpa,SACzBsa,EAAeF,EAAUla,SAC/B,IACG3B,UAAUC,GAAGwB,EAAUqa,KACvB9b,UAAUC,GAAG0B,EAAUoa,GACxB,CACA5c,QAAQC,IAAI,aACZ,IAAM4c,EAAWva,EAAS7B,OAC1B,GAAmB,mBAAfmC,EAAiC,KAAAka,EAAAC,EACnC/c,QAAQC,IAAI,mDAAiBwC,GAC7B,IAAM8H,EAAG,OAAG9H,QAAH,IAAGA,OAAH,EAAGA,EAAShC,OACbH,EAA6BiK,EAA7BjK,GAAIuG,EAAyB0D,EAAzB1D,cACNtB,EAAO,CACXjF,KACAyH,MAHmCwC,EAAV3N,MAIzBgU,EAAG,GACHC,EAAG,GAGHiL,MAAOjV,EACPvI,UAAWgD,EAAA,cAACoT,GAAD,OAEb,QAAAoI,EAAA1d,KAAKX,aAAL,IAAAqe,KAAYE,QAAQzX,GACpB,QAAAwX,EAAA3d,KAAKX,aAAL,IAAAse,KAAYhM,QAAQ,CAClBpR,OAAQ,CAAEiR,EAAG,GAAIC,EAAG,IACpBrF,OAAQ,CAAEoF,EAAG,GAAIC,EAAG,WAEjB,GAAmB,mBAAfjO,EACT5C,QAAQC,IAAI,sCACP,KAAAgd,EACCC,EAAaL,EAASjb,IAAI,SAACub,GAAc,IACrCtW,EAAkBsW,EAAlBtW,cACR,OAAIA,EACK,CACLvG,GAAI6c,EAAK7c,GACTiU,OAAQ,GACRD,MAAO,GACP1D,EAAG,GACHC,EAAG,GACH9I,MAAOlB,GAIJ3H,OAAA4E,EAAA,EAAA5E,CAAA,GACFie,EADL,CAEErB,MAAO,eAIX,QAAAmB,EAAA7d,KAAKX,aAAL,IAAAwe,KAAYG,SAAS,CACnBlH,MAAOgH,EACP5G,MAAK,OAAE9T,QAAF,IAAEA,OAAF,EAAEA,EAAU/B,4CA4BhB4W,GAKP,IAL0B,IAAAgG,EAAAje,KACtBqY,EAAeJ,GAAa,GAC1BiG,EAAQ,GACVC,EAAI,EACJC,EAAY,EACT/F,EAAa9V,QAAU,GAAG,CAC/B2b,EAAMC,GAAK9F,EAAa9V,OACxB4b,IACA,IAAME,EAAWhG,EAAarN,OAAO,SAACyN,EAAavN,GAAe,IAAAoT,EAE1D9F,GACJ,QAAA8F,EAAAL,EAAK5e,aAAL,IAAAif,OAAA,EAAAA,EAAY3F,aAAazN,EAAa,CACpC0N,UAAU,MACN,GAMR,OAJAwF,EAAYA,EAAY5F,EAAOjW,OAAS6b,EAAY5F,EAAOjW,OAE3DkW,EAAMA,EAAI9V,OAAO6V,IAGhB,IAEHH,EAAegG,EAGjB,MAAO,CAACH,EAAOE,oCAyCf,OADAxd,QAAQC,IAAI,sBAAuBb,KAAKJ,OAEtCsC,EAAA,qBAAKC,UAAWC,KAAOzE,WACrBuE,EAAA,qBAAKC,UAAWC,KAAO7D,SACrB2D,EAAA,wBAAQkM,QAASpO,KAAKsC,UAAtB,YACAJ,EAAA,wBAAQkM,QAASpO,KAAKsX,cAAtB,4BACApV,EAAA,wBAAQkM,QAASpO,KAAK2X,cAAtB,4BACAzV,EAAA,wBAAQkM,QAASpO,KAAK8X,UAAtB,6BAEF5V,EAAA,qBAAKC,UAAWC,KAAO/C,MAAOwH,IAAK7G,KAAKqX,eACxCnV,EAAA,qBAAKC,UAAWC,KAAOjD,QAAvB,wBA3kBkB0D,uCC3PpB0b,GAAgB,CAAC,oBAAqB,oBAuEtCC,GAAoC,CACxC,CACEtd,GAAIyN,GAAQnR,MACZW,KAAMwQ,GAAQnR,MACdoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAekH,GAAQlH,cACvBtI,OAAQ,KAGZ,CACE+B,GAAIyT,GAAYnX,MAChBW,KAAMwW,GAAYnX,MAClBoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAekN,GAAYlN,cAC3BtI,OAAQ,KAGZ,CACE+B,GAAIqH,EAAM/K,MACVW,KAAMoK,EAAM/K,MACZoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAec,EAAMd,cACrBtI,OAAQ,KAGZ,CACE+B,GAAIsG,EAAWhK,MACfW,KAAMqJ,EAAWhK,MACjBoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAeD,EAAWC,cAC1BtI,OAAQ,KAGZ,CACE+B,GAAIwH,EAASlL,MACbW,KAAMuK,EAASlL,MACfoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAeiB,EAASjB,cACxBtI,OAAQ,KAGZ,CACE+B,GAAI6K,EAAYvO,MAChBW,KAAM4N,EAAYvO,MAClBoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAesE,EAAYtE,cAC3BtI,OAAQ,KAGZ,CACE+B,GAAI+K,GAAUzO,MACdW,KAAM8N,GAAUzO,MAChBoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAewE,GAAUxE,cACzBtI,OAAQ,KAGZ,CACE+B,GAAI+L,GAASzP,MACbW,KAAM8O,GAASzP,MACfoG,KAAM2a,GAAc,GACpB/Z,KAAM,CACJiD,cAAewF,GAASxF,cACxBtI,OAAQ,MAKRsf,eACJ,SAAAA,EAAY7e,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAye,IACtB5e,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2e,GAAAte,KAAAH,KAAMJ,KACDc,MAAQ,CACXge,YAAajd,UAAU0B,KAAK,KAHRtD,mFAMJ,IAAAoe,EAAAje,KAClB4K,WAAW,WACTqT,EAAK9c,SAAS,SAACK,GACb,MAAO,CACLkd,YAAajd,UAAU0B,KAAKqb,QAG/B,sCAEI,IAAAG,EAAAC,EACgB5e,KAAKJ,MAApBif,MACFjb,GAAO,QAAA+a,QAFN,IAAAC,EACS,GADTA,GAEYE,cAAN,IAAAH,OAAA,EAAAA,EAAc/a,OAAQ,KAF5Bmb,EAGsB/e,KAAKU,MAA1Bge,mBAHD,IAAAK,EAGe,GAHfA,EAKP,OACE7c,EAAA,cAAC8c,EAAA,EAAD,CAAaC,QAASC,KACpBhd,EAAA,qBAAKC,UAAWC,KAAO1C,UACrBwC,EAAA,qBAAKC,UAAWC,KAAO7E,SACrB2E,EAAA,cAACid,EAAD,CAAS/d,SAAUsd,EAAa7c,WAAYD,KAE9CM,EAAA,qBAAKC,UAAWC,KAAOxD,SACrBsD,EAAA,cAACkd,EAAD,CACEzZ,OAAQ,CAAC4Y,GAAc,IACvB1f,UAAoB,QAAT+E,EAAiByb,GAAejI,eA9BrCvU,aAuCL4b","file":"static/js/10.4539c14d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Stencil_sidebar__6-3NF\",\"title\":\"Stencil_title__1rEvH\",\"gtitle\":\"Stencil_gtitle__3We5B\",\"search\":\"Stencil_search__1JJxM\",\"container\":\"Stencil_container__1PAXR\",\"tools\":\"Stencil_tools__3Sb1B\",\"tool\":\"Stencil_tool__2aukW\",\"noresult\":\"Stencil_noresult__jxg_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droptarget\":\"DropTarget_droptarget__3BpH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragsource\":\"DragSource_dragsource__3Up37\",\"default\":\"DragSource_default__37TDy\",\"icon\":\"DragSource_icon__azWm1\",\"name\":\"DragSource_name__3iYLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__3KzEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1YTmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmsworkbench\":\"CmsWorkbench_cmsworkbench__1oE2_\",\"toolbar\":\"CmsWorkbench_toolbar__2loCb\",\"active\":\"CmsWorkbench_active__J61_m\",\"toollist\":\"CmsWorkbench_toollist__3X4S3\",\"business\":\"CmsWorkbench_business__8Gubz\",\"save\":\"CmsWorkbench_save__okfdQ\",\"content\":\"CmsWorkbench_content__3fzNt\",\"workbench\":\"CmsWorkbench_workbench__3-YoO\",\"pc\":\"CmsWorkbench_pc__2rUXF\",\"phone\":\"CmsWorkbench_phone__mqcmh\",\"unit\":\"CmsWorkbench_unit__1kQU3\",\"delete\":\"CmsWorkbench_delete__2IF-e\",\"component\":\"CmsWorkbench_component__1_zDn\",\"config\":\"CmsWorkbench_config__3KTNu\",\"preview\":\"CmsWorkbench_preview__3Ofc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"X6Workbench_container__2W2GH\",\"toolbar\":\"X6Workbench_toolbar__38IAD\",\"graph\":\"X6Workbench_graph___Ojbu\",\"selected\":\"X6Workbench_selected__efbet\",\"myport\":\"X6Workbench_myport__AQypD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WfhRect_root__3qnWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WfhTriangle_root__q5VVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"x6_container__1aBM4\",\"mine\":\"x6_mine__3RLXB\",\"dndframe\":\"x6_dndframe__380uv\",\"sidebar\":\"x6_sidebar__3KL-I\",\"content\":\"x6_content__YNsLB\"};","import * as React from 'react';\nimport Immutable from 'immutable';\nimport styles from './index.module.scss';\n\nexport interface IMetaData {\n  id: React.ReactText; // 该拖拽数据的应用内唯一标识，搜索\n  name?: React.ReactText; // 拖拽数据friendly name，搜索展示\n  type?: string | symbol; // item的Type类型，对应容器的type\n  thumbnail?: string; // 工具缩略图，展示\n  toolComponent?: React.FC | React.ComponentClass; // 工具自定义展示\n  group?: string; // 用于分组\n  data?: {\n    // 节点附带的业务数据\n    componentType: React.ReactText; // 组件类型\n    config: { [name: string]: any }; // 组件对应数据项\n    [property: string]: any;\n  };\n}\ninterface IStencilProps {\n  toolList: Immutable.List<IMetaData>;\n  dragSource: React.ComponentClass | React.FC<any>;\n  bSearch?: boolean; // 是否启用搜索功能\n  title?: string; // 工具栏标题\n  notFoundText?: string; // 未搜索到展示文案\n}\n/*\n待做：\n  还需要增加对异步数据的处理\n*/\nclass Stencil extends React.Component<IStencilProps, any> {\n  static defaultProps = {\n    toolList: [] as any,\n    bSearch: true\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    const { toolList } = nextProps;\n    const { prevToolList } = prevState;\n    if (!Immutable.is(prevToolList, toolList)) {\n      return {\n        toolList: toolList.toJS(),\n        allToolList: toolList.toJS(),\n        prevToolList: toolList\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props: IStencilProps) {\n    super(props);\n    this.state = {\n      toolList: this.props.toolList.toJS(),\n      allToolList: this.props.toolList.toJS(),\n      prevToolList: this.props.toolList\n    };\n  }\n\n  onSearch = (e: any) => {\n    const searched = e.target.value;\n    const { allToolList } = this.state;\n    let newToolList = allToolList;\n    console.log('search===>', newToolList);\n    if (searched) {\n      newToolList = allToolList.filter(\n        (tool: any) =>\n          tool.name?.indexOf(searched) > -1 || tool.id?.indexOf(searched) > -1\n      );\n    }\n\n    this.setState({\n      toolList: newToolList\n    });\n  };\n\n  render() {\n    const {\n      dragSource: DragSource,\n      bSearch,\n      title = '工具集',\n      notFoundText = '没有找到对应的模板'\n    } = this.props;\n    const { toolList } = this.state;\n\n    return (\n      <div className={styles.sidebar}>\n        {title ? <div className={styles.title}>{title}</div> : null}\n        {bSearch ? (\n          <div className={styles.search}>\n            <input placeholder=\"请输入搜索内容\" onChange={this.onSearch} />\n          </div>\n        ) : null}\n        {toolList.length > 0 ? (\n          <div className={styles.container}>\n            <div className={styles.gtitle}>stencils</div>\n            <div className={styles.tools}>\n              {toolList.map((tool: IMetaData, index: number) => {\n                return (\n                  <div className={styles.tool} key={`${tool.id}-${index}`}>\n                    <DragSource key={`${tool.id}-${index}`} {...tool} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className={styles.noresult}>{notFoundText}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Stencil;\n","import * as React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styles from './index.module.scss';\nimport { v1 as uuid } from 'uuid';\nimport Immutable from 'immutable';\nimport * as t from '../types';\nenum ITEM_TYPE {\n  X6_DROP_TARGET = 'X6_DROP_TARGET'\n}\n\n// 定义数据来源类型\nenum DATA_SOURCE_TYPE {\n  DRAG_NODE_DATA = 'DRAG_NODE_DATA', // 拖拽节点数据,\n  // DRAG_EDGE_DATA = 'DRAG_EDGE_DATA', // 拖拽边数据，暂无\n  COPY_EDGE_DATA = 'COPY_NODE_DATA', // 拷贝边数据\n  API_DATA = 'API_DATA', // 接口产生的批量数据,\n  OTHER_DATA = 'OTHER_DATA'\n}\n\ninterface IDropTargetProps {\n  accept: string[]; // 可以接收的ITEM\n  workbench?: React.ComponentClass<any, any> | React.FC<any> | any;\n}\n\ninterface IInitialState {\n  dataList: Immutable.List<t.IComponent>;\n  edgeList: Immutable.List<any>;\n  current: Immutable.Map<string, any>;\n  configs: Immutable.Map<string, any>;\n  dataSource: DATA_SOURCE_TYPE;\n}\n\nconst initialState: IInitialState = {\n  dataList: Immutable.List([]),\n  edgeList: Immutable.List([]),\n  current: Immutable.Map({}),\n  configs: Immutable.Map({}),\n  dataSource: DATA_SOURCE_TYPE.DRAG_NODE_DATA\n};\n\nfunction reducers(state: any, action: any) {\n  const { type, payload } = action;\n  switch (type) {\n    case 'init': {\n      const {\n        dataList = [],\n        edgeList = [],\n        current = {},\n        configs = {}\n      } = payload;\n\n      return {\n        dataList: Immutable.List.isList(dataList)\n          ? dataList\n          : Immutable.List(dataList),\n        edgeList: Immutable.List.isList(edgeList)\n          ? edgeList\n          : Immutable.List(edgeList),\n        current: Immutable.Map.isMap(current)\n          ? current\n          : Immutable.Map(current),\n        configs: Immutable.Map.isMap(configs)\n          ? configs\n          : Immutable.Map(configs),\n        dataSource: DATA_SOURCE_TYPE.API_DATA\n      };\n    }\n    case 'drop': {\n      const { dataList, edgeList, configs } = state;\n      return {\n        dataList: dataList.push(payload),\n        edgeList,\n        current: Immutable.Map(payload),\n        configs,\n        dataSource: DATA_SOURCE_TYPE.DRAG_NODE_DATA\n      };\n    }\n    case 'deleteData': {\n      const { current, configs, dataList } = state;\n      const { id: currId } = current;\n      const newDataList = dataList.filter((data: any) => data.id !== currId);\n      delete configs[currId];\n      const newCurrent = newDataList[0];\n\n      return {\n        ...state,\n        dataList: newDataList,\n        current: newCurrent,\n        configs: {\n          ...configs\n        }\n      };\n    }\n    case 'edge': {\n      return state;\n    }\n    case 'deleteEdge': {\n      return state;\n    }\n    case 'current': {\n      return {\n        ...state,\n        current: Immutable.Map(payload)\n      };\n    }\n    case 'configs': {\n      const { configs } = state;\n      const { id, config } = payload;\n      const prevConfig = configs[id] || {};\n      return {\n        ...state,\n        configs: {\n          ...configs,\n          [id]: {\n            ...prevConfig,\n            ...config\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction DropTarget(props: IDropTargetProps) {\n  const [{ dataList, edgeList, current, configs, dataSource }, dispatch] =\n    React.useReducer(reducers, initialState);\n  const initData = React.useCallback((payload) => {\n    dispatch({\n      type: 'init',\n      payload\n    });\n  }, []);\n  // const setData = React.useCallback((payload) => {\n  //   dispatch({\n  //     type: 'drop',\n  //     payload\n  //   });\n  // }, []);\n  const deleteData = React.useCallback(() => {\n    dispatch({\n      type: 'deleteData'\n    });\n  }, []);\n  const setEdge = React.useCallback((payload) => {\n    dispatch({\n      type: 'edge',\n      payload\n    });\n  }, []);\n  const deleteEdge = React.useCallback((payload) => {\n    dispatch({\n      type: 'deleteEdge',\n      payload\n    });\n  }, []);\n\n  const setCurrent = React.useCallback((payload) => {\n    dispatch({\n      type: 'current',\n      payload\n    });\n  }, []);\n  const setConfigs = React.useCallback((payload) => {\n    dispatch({\n      type: 'configs',\n      payload\n    });\n  }, []);\n  console.log('dropTarget=====configs====>', configs);\n\n  const { workbench: Workbench, accept = [ITEM_TYPE.X6_DROP_TARGET] } = props;\n  const [collectedProps, drop] = useDrop(() => {\n    return {\n      accept,\n      drop: (item: t.IAnyObj, monitor: any) => {\n        const id = uuid({\n          node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n          clockseq: 0x1234,\n          msecs: new Date().getTime(),\n          nsecs: 5678\n        });\n        dispatch({\n          type: 'drop',\n          payload: {\n            id,\n            ...item\n          }\n        });\n        return {};\n      },\n      collect: (monitor) => {\n        return {\n          // dataSource: DATA_SOURCE_TYPE.DRAG_DATA\n          demo: 'xxxx'\n        };\n      }\n    };\n  });\n\n  return (\n    <div ref={drop} className={styles.droptarget}>\n      <Workbench\n        init={initData}\n        dataList={dataList}\n        dataSource={dataSource}\n        // setData={setData}\n        deleteData={deleteData}\n        edgeList={edgeList}\n        setEdge={setEdge}\n        deleteEdge={deleteEdge}\n        current={current}\n        setCurrent={setCurrent}\n        configs={configs}\n        setConfigs={setConfigs}\n        {...collectedProps}\n      />\n    </div>\n  );\n}\n\nexport default DropTarget;\n","import * as React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styles from './index.module.scss';\nenum ITEM_TYPE {\n  X6_DROP_TARGET = 'X6_DROP_TARGET'\n}\n\ninterface IBusinessData {\n  componentType: string; // 对应组件类型\n  config: { [name: string]: any };\n  [property: string]: any;\n}\ninterface IDragSourceProps {\n  type?: ITEM_TYPE;\n  name: React.ReactText;\n  toolComponent?: React.ReactChild; // 工具展示成自定义组件形式\n  className?: string;\n  style?: { [property: string]: any };\n  data?: IBusinessData; // 传递给工作台的数据\n}\n\nfunction DefaultStencil(props: any) {\n  return (\n    <div className={styles.default}>\n      <div className={styles.icon} />\n      <div className={styles.name}>{props.name}</div>\n    </div>\n  );\n}\n\nfunction DragSource(props: IDragSourceProps) {\n  const {\n    type = ITEM_TYPE.X6_DROP_TARGET,\n    name,\n    toolComponent, // 当前组件使用\n    data = {} // 要传递的数据\n  } = props;\n  const [, drag] = useDrag(() => {\n    console.log('useDrag-----data=======>', data);\n\n    return {\n      type,\n      item: {\n        // 被传递的数据\n        ...data\n      },\n      end: () => {},\n      collect: (monitor) => {\n        return {\n          demo: 'demo'\n        };\n      }\n    };\n  });\n  let element: any = <DefaultStencil name={name} />;\n  if (toolComponent) {\n    element = toolComponent;\n  }\n  return (\n    <div className={styles.dragsource} ref={drag}>\n      {element}\n    </div>\n  );\n}\n\nexport default DragSource;\n","import * as React from 'react';\nimport styles from './index.module.scss';\nimport * as t from '../types';\n\ninterface IBackground extends t.IComponent {\n  color?: string;\n  image?: string;\n}\n\nexport function Background(props: IBackground) {\n  const { componentType } = props;\n  if (componentType !== Background.componentType) {\n    return null;\n  }\n\n  const bgStyle = {\n    backgroundColor: props.color,\n    backgroundImage: props.image\n  };\n  return <div className={styles.background} style={bgStyle}></div>;\n}\n\nBackground.thumbnail = '背景色';\nBackground.componentType = 'background';\nBackground.title = '背景色';\n\nexport function BackgroundConfig(props: t.IConfig) {\n  const { color, setConfig } = props;\n  const [bgColor, setBgColor] = React.useState(color || '');\n  // const [, setBgImage] = React.useState(image);\n\n  function onChange(e: any) {\n    setConfig('color', e.target.value);\n    setBgColor(e.target.value);\n  }\n\n  return (\n    <div>\n      <span>Background</span>\n      <input\n        value={bgColor}\n        onChange={React.useCallback(onChange, [])}\n        placeholder=\"请输入六位颜色值\"\n      />\n    </div>\n  );\n}\n\nBackgroundConfig.componentType = 'background';\n","import * as React from 'react';\nimport styles from './index.module.scss';\n\ninterface IAlert {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function Alert(props: IAlert) {\n  const { text } = props;\n  return <div className={styles.alert}>{text}</div>;\n}\n\nAlert.thumbnail = '警告信息';\nAlert.componentType = 'alert';\nAlert.title = '警告信息';\n\nexport function AlertConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== Alert.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>Alert</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nAlertConfig.componentType = 'alert';\n","import * as React from 'react';\nimport { Card, Form, Input, Select, InputNumber } from 'antd';\n\ninterface IInput {\n  id: React.ReactText;\n  componentType: string;\n  label: string;\n  param: string;\n  holder?: string;\n  required?: any;\n  length?: number;\n}\n\nexport function WfhInput(props: IInput) {\n  console.log('WfhInput====>', props);\n  const {\n    label,\n    param,\n    required = {},\n    length = Number.MAX_SAFE_INTEGER,\n    holder = undefined\n  } = props;\n  return (\n    <Form.Item\n      label={label}\n      name={param ? param : 'name'}\n      rules={[\n        {\n          required: required.value === '是',\n          message: `${label}是必填字段`\n        }\n      ]}>\n      <Input maxLength={length} placeholder={holder} />\n    </Form.Item>\n  );\n}\n\nWfhInput.thumbnail = '单行文本';\nWfhInput.componentType = 'wfhinput';\nWfhInput.title = '单行文本';\n\nconst YES_OR_NO = [\n  {\n    label: '是',\n    value: '是'\n  },\n  {\n    label: '否',\n    value: '否'\n  }\n];\n\nconst CONFIG_LABELS = {\n  title: 'WfhInput组件属性',\n  base: '基础属性',\n  label: '标题',\n  labelHolder: '请输入标题',\n  param: '对应入参',\n  paramHolder: '请选择对应入参',\n  holder: '占位提示',\n  holderHolder: '请输入占位提示',\n  spec: '校验属性',\n  required: '必填',\n  requiredHolder: '请选择是否必填',\n  maxlength: '最大长度',\n  maxlengthHolder: '请输入最大长度'\n};\n\n/*\n    Config必须实现内容：\n    1、将当前form实例透传给父组件，用于校验\n    2、使用受控组件，做实时预览\n  */\nfunction Config(props: any, ref: any) {\n  const [form] = Form.useForm();\n  React.useImperativeHandle(ref, () => ({\n    form: form\n  }));\n  const [paramList, setParam] = React.useState([] as any);\n  React.useEffect(() => {\n    setTimeout(() => {\n      const paramList: any[] = [\n        {\n          label: 'uid',\n          value: 'uid',\n          other: '1'\n        },\n        {\n          label: 'name',\n          value: 'name',\n          other: '2'\n        },\n        {\n          label: 'age',\n          value: 'age',\n          other: '3'\n        }\n      ];\n      setParam(paramList);\n    }, 1000);\n  }, []);\n  const { config, setConfig, componentType } = props;\n  if (componentType !== WfhInput.componentType) {\n    return null;\n  }\n  const fields = Object.keys(config).reduce((prev: any[], curr) => {\n    const tmp = {\n      name: [curr],\n      value: config[curr]\n    };\n\n    prev.push(tmp);\n\n    return prev;\n  }, []);\n\n  function onValuesChange(changedValue: any, allVAlues: any) {\n    const key = Object.keys(changedValue)[0];\n    setConfig(key, changedValue[key]);\n  }\n  return (\n    <Form\n      fields={fields}\n      form={form}\n      onValuesChange={onValuesChange}\n      labelCol={{ span: 6 }}>\n      <Card title={CONFIG_LABELS.title}>\n        <h3>{CONFIG_LABELS.base}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.label}\n          name=\"label\"\n          rules={[{ required: true, message: CONFIG_LABELS.labelHolder }]}>\n          <Input maxLength={10} placeholder={CONFIG_LABELS.labelHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.param}\n          name=\"param\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.paramHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.paramHolder}>\n            {paramList.map((param: any) => (\n              <Select.Option key={param.value} value={param.value}>\n                {param.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.holder} name=\"holder\">\n          <Input maxLength={20} placeholder={CONFIG_LABELS.holderHolder} />\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item label={CONFIG_LABELS.required} name=\"required\">\n          <Select labelInValue placeholder={CONFIG_LABELS.requiredHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.maxlength} name=\"length\">\n          <InputNumber min={0} placeholder={CONFIG_LABELS.maxlengthHolder} />\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n}\n\nexport const WfhInputConfig = React.forwardRef(Config);\n","import * as React from 'react';\n// import styles from './index.module.scss';\n\ninterface IInputNum {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhInputNum(props: IInputNum) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhInputNum.thumbnail = '数值输入';\nWfhInputNum.componentType = 'wfhinputnum';\nWfhInputNum.title = '数值输入';\n\nexport function WfhInputNumConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== WfhInputNum.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>WfhInputNum</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nWfhInputNumConfig.componentType = 'input';\n","import * as React from 'react';\nimport { Card, Form, Input, Select } from 'antd';\n\ninterface ISelect {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhSelect(props: ISelect) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhSelect.thumbnail = '下拉框';\nWfhSelect.componentType = 'wfhselect';\nWfhSelect.title = '下拉框';\n\nconst YES_OR_NO = [\n  {\n    label: '是',\n    value: '是'\n  },\n  {\n    label: '否',\n    value: '否'\n  }\n];\n\nconst CONFIG_LABELS = {\n  title: 'WfhSelect组件属性',\n  base: '基础属性', //基础属性域\n  label: '标题',\n  labelHolder: '请输入标题',\n  param: '对应入参',\n  paramHolder: '请选择对应入参',\n  holder: '占位提示',\n  holderHolder: '请输入占位提示',\n  search: '搜索',\n  searchHolder: '请配置是否支持搜索',\n  spec: '校验属性', //校验属性域\n  required: '是否必填',\n  requiredHolder: '请选择是否必填',\n  option: '选项属性', //选项属性域\n  source: '数据源',\n  sourceHolder: '请输入数据源',\n  select: '选项字段',\n  selectHolder: '请配置选项字段',\n  inparam: '入参字段',\n  inparamHolder: '请配置入参字段',\n  type: '选项类型',\n  typeHolder: '请配置选项类型',\n  remote: '远程数据源',\n  remoteHolder: '请配置远程数据源',\n  multiple: '是否多选',\n  multipleHolder: '请配置是否支持多选'\n};\nexport function Config(props: any, ref: any) {\n  const [form] = Form.useForm();\n  const { setConfig, componentType } = props;\n  React.useImperativeHandle(ref, () => ({\n    form\n  }));\n  const onValuesChange = React.useCallback(\n    (changedValue: any, allValues: any) => {\n      const key = Object.keys(changedValue)[0];\n      setConfig(key, changedValue[key]);\n    },\n    [setConfig]\n  );\n  const [paramList, setParam] = React.useState([] as any);\n  React.useEffect(() => {\n    setTimeout(() => {\n      const paramList: any[] = [\n        {\n          label: 'uid',\n          value: 'uid',\n          other: '1'\n        },\n        {\n          label: 'name',\n          value: 'name',\n          other: '2'\n        },\n        {\n          label: 'age',\n          value: 'age',\n          other: '3'\n        }\n      ];\n      setParam(paramList);\n    }, 1000);\n  }, []);\n\n  if (componentType !== WfhSelect.componentType) {\n    return null;\n  }\n\n  return (\n    <Form onValuesChange={onValuesChange} labelCol={{ span: 6 }}>\n      <Card title={CONFIG_LABELS.title}>\n        <h3>{CONFIG_LABELS.base}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.label}\n          name=\"label\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.multipleHolder\n            }\n          ]}>\n          <Input maxLength={10} placeholder={CONFIG_LABELS.labelHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.param}\n          name=\"param\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.multipleHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.paramHolder}>\n            {paramList.map((param: any) => (\n              <Select.Option key={param.value} value={param.value}>\n                {param.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.holder} name=\"holder\">\n          <Input maxLength={20} placeholder={CONFIG_LABELS.holderHolder} />\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.search}>\n          <Select\n            labelInValue\n            placeholder={CONFIG_LABELS.searchHolder}></Select>\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.source}\n          name=\"source\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.sourceHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.sourceHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.select}\n          name=\"select\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.selectHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.selectHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.inparam}\n          name=\"inparam\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.inparamHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.inparamHolder} />\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.multiple} name=\"multipe\">\n          <Select labelInValue placeholder={CONFIG_LABELS.multipleHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.required}\n          name=\"required\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.requiredHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.requiredHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n}\n\nexport const WfhSelectConfig = React.forwardRef(Config);\n","import * as React from 'react';\n// import styles from './index.module.scss';\n\ninterface ITable {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhTable(props: ITable) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhTable.thumbnail = '表格';\nWfhTable.componentType = 'wfhtable';\nWfhTable.title = '表格';\n\nexport function WfhTableConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== WfhTable.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>WfhTable</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nWfhTableConfig.componentType = 'input';\n","import * as React from 'react';\nimport { Background, BackgroundConfig } from '../Background';\nimport { Alert, AlertConfig } from '../Alert';\nimport { WfhInput, WfhInputConfig } from '../WfhInput';\nimport { WfhInputNum, WfhInputNumConfig } from '../WfhInputNum';\nimport { WfhSelect, WfhSelectConfig } from '../WfhSelect';\nimport { WfhTable, WfhTableConfig } from '../WfhTable';\nimport styles from './index.module.scss';\n\nimport * as t from '../types';\n// 不需要渲染实体的组件\nconst WITHOUT_RENDER_COMPONENTTYPE_LIST = ['background'];\n\ninterface ICmsWorkbench extends t.IWorkbench {}\n\nconst MOCK_MAP = new Map<string, React.ComponentClass | React.FC<any>>([\n  [Background.componentType, Background],\n  [Alert.componentType, Alert],\n  [WfhInput.componentType, WfhInput],\n  [WfhInputNum.componentType, WfhInputNum],\n  [WfhSelect.componentType, WfhSelect],\n  [WfhTable.componentType, WfhTable]\n]);\n\nconst MOCK_MAP_CONRIG = new Map<string, React.ComponentClass | React.FC<any>>([\n  [Background.componentType, BackgroundConfig],\n  [Alert.componentType, AlertConfig],\n  [WfhInput.componentType, WfhInputConfig],\n  [WfhInputNum.componentType, WfhInputNumConfig],\n  [WfhSelect.componentType, WfhSelectConfig],\n  [WfhTable.componentType, WfhTableConfig]\n]);\n\nfunction CmsWorkbench(props: ICmsWorkbench) {\n  const { dataList, deleteData, current, setCurrent, configs, setConfigs } =\n    props;\n  const {\n    id: currId,\n    componentType: currComponentType,\n    displayName: currDisplayName\n  } = current.toJS();\n\n  console.log('cmsworkbench====>', props);\n\n  const [{ bPreview, bPhone }, dispatch] = React.useReducer(\n    (state: any, { type = '', payload = false }) => {\n      switch (type) {\n        case 'preview': {\n          return {\n            ...state,\n            bPreview: payload\n          };\n        }\n        case 'phone': {\n          return {\n            ...state,\n            bPhone: payload\n          };\n        }\n        default:\n          return state;\n      }\n    },\n    {\n      bPreview: false,\n      bPhone: false\n    }\n  );\n\n  let Config: any = MOCK_MAP_CONRIG.get(currComponentType);\n  const currConfig: any = React.useRef(null);\n  const config = configs.toJS()[currId] || {};\n  const bgStyle: any = {};\n  if (config.color) {\n    bgStyle.backgroundColor = config.color;\n  }\n  if (config.image) {\n    bgStyle.backgroundImage = config.image;\n  }\n\n  function setConfig(name: string, value: any) {\n    setConfigs({\n      id: currId,\n      config: {\n        [name]: value\n      }\n    });\n  }\n\n  function onDelete() {\n    deleteData();\n  }\n\n  function onPreview() {\n    dispatch({\n      type: 'preview',\n      payload: true\n    });\n  }\n\n  function onPhone() {\n    dispatch({\n      type: 'phone',\n      payload: !bPhone\n    });\n  }\n\n  function onSave() {\n    if (currConfig) {\n      currConfig.current?.form.validateFields();\n      console.log('workbench-config====>', config);\n    }\n  }\n\n  return (\n    <div className={styles.cmsworkbench}>\n      <div className={styles.toolbar}>\n        <div className={styles.toollist}>\n          <div onClick={onPhone} className={bPhone ? styles.active : ''}>\n            手机\n          </div>\n          <div onClick={onPreview}>预览</div>\n        </div>\n        <div className={styles.business}>\n          <div className={styles.save} onClick={onSave}>\n            保存\n          </div>\n        </div>\n      </div>\n      <div className={styles.content}>\n        <div className={styles.workbench} style={bgStyle}>\n          <div className={bPhone ? styles.phone : styles.pc}>\n            {dataList.toJS().map((component: any, index: number) => {\n              const { componentType = '', id } = component;\n              if (WITHOUT_RENDER_COMPONENTTYPE_LIST.includes(componentType)) {\n                return null;\n              } else {\n                const Component = MOCK_MAP.get(componentType);\n                const savedConfig = configs[id];\n                return Component ? (\n                  <div\n                    className={styles.unit}\n                    key={`${component.componentType}-${index}`}\n                    onClick={() => setCurrent(component)}>\n                    {currId === id ? (\n                      <div className={styles.delete} onClick={onDelete}>\n                        删除\n                      </div>\n                    ) : null}\n                    <div className={styles.component}>\n                      <Component {...savedConfig} />\n                    </div>\n                  </div>\n                ) : null;\n              }\n            })}\n          </div>\n        </div>\n        <div className={styles.config}>\n          {Config ? (\n            <Config\n              key={currId}\n              ref={currConfig}\n              componentType={currComponentType}\n              displayName={currDisplayName}\n              config={config}\n              {...config}\n              setConfig={setConfig}\n            />\n          ) : null}\n        </div>\n      </div>\n      {bPreview ? <div className={styles.preview}>preview</div> : null}\n    </div>\n  );\n}\n\nexport default CmsWorkbench;\n","import React, { Component } from 'react';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport styles from './index.module.scss';\n\n/*\n  X6部分操作会引起画布的重绘；使用的React组件也会被重绘，可以通过SCU优化\n  React在画布重绘的过程中，可以保持自己的状态；\n  React可以通过节点的data提升状态，相当于传递props.node.data；也可以维护自己的state\n  X6的setData会做数据比较，没有变更不重绘\n*/\n\ninterface ICustomProps {\n  node?: ReactShape;\n}\nexport class WfhRect extends Component<ICustomProps, any> {\n  count: number;\n  static componentType: string; // 组件类型\n  static title: string;\n  constructor(props: any) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      name: 'default'\n    };\n    this.count = 0;\n  }\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    const prevNode = this.props.node;\n    const { node } = this.props;\n    console.log('SCU=====>', prevNode === node);\n    const data = node?.getData();\n    if (node?.hasChanged('data')) {\n      console.log('hasChange====>', data);\n\n      return true;\n    } else {\n      console.log('data didnot change====>', data);\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    // const { node } = this.props;\n    // const pl = JSON.parse(JSON.stringify(node));\n    const begin = Date.now();\n    // console.log('didMount', JSON.stringify(this.props.node));\n    const duration = Date.now() - begin;\n    console.log('begin===>', begin, duration);\n  }\n\n  compoenntDidUpdate() {\n    console.log('didUpdate', this.props);\n  }\n\n  onChangeData = () => {\n    const { node } = this.props;\n    console.log('node=======>', node);\n    // graph会做数据比较，没有更新数据，就不会重绘\n    node?.setData({ name: `changeData-${this.count++}` });\n  };\n\n  onChangeName = () => {\n    this.setState({\n      name: 666\n    });\n  };\n\n  renderClassic(id: string) {\n    // 经典视图\n    return (\n      <div className={styles.root}>\n        {`id:${id}`}\n        {/* <div onClick={this.onChangeData}>change data</div>\n        <div onClick={this.onChangeName}>change name</div>\n        {`MyShape-${this.state.name}-${this.props.node?.data?.name}`}\n        {`MyShape-`} */}\n      </div>\n    );\n  }\n\n  renderSimplified(id: string) {\n    // 精简视图\n    return <div>{`id: ${id}`}</div>;\n  }\n\n  render() {\n    const { node } = this.props;\n\n    const { type } = node?.getData() || {};\n    console.log('mode========>', type);\n    return type === 'simplified'\n      ? this.renderSimplified((node as any).id)\n      : this.renderClassic((node as any).id);\n  }\n}\n\nWfhRect.componentType = 'wfh-rect';\nWfhRect.title = 'rect';\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Dropdown, Menu } from 'antd';\nimport { ToolsView, EdgeView } from '@antv/x6';\nimport { Edge } from '@antv/x6';\n\ninterface ContextMenuToolOptions extends ToolsView.ToolItem.Options {\n  //   menu: React.ReactElement;\n  //   graph: Graph;\n}\n\nexport class ContextMenuTool extends ToolsView.ToolItem<\n  EdgeView,\n  ContextMenuToolOptions\n> {\n  private knob: HTMLDivElement | undefined;\n  private timer: number | undefined;\n  private contextMenu: any;\n\n  render() {\n    if (!this.knob) {\n      this.knob = ToolsView.createElement('div', false) as HTMLDivElement;\n      this.knob.style.position = 'absolute';\n      this.container.appendChild(this.knob);\n    }\n\n    return this;\n  }\n\n  onMenu = (args: any) => {\n    const { cell, edge } = this.contextMenu;\n    const { key } = args;\n    if (key === '1') {\n      const source = edge.getSourceNode();\n      const target = edge.getTargetNode();\n      const sourcePos = source?.position();\n      const targetPos = target?.position();\n      console.log('copy edge source and target=======>', source, target);\n      const clone = edge.clone();\n      // clone.disconnect({\n      //   silent: true\n      // });\n      clone.setSource({\n        x: sourcePos.x + 50,\n        y: sourcePos.y + 50\n      });\n      clone.setTarget({\n        x: targetPos.x + 50,\n        y: targetPos.y + 50\n      });\n      console.log('origin======>', edge);\n      console.log('clone=====>', clone);\n\n      this.graph?.addEdge(clone);\n\n      //   获取边的起始节点\n      // this.graph?.addEdge({\n      //   target: { x: 80, y: 50 },\n      //   source: { x: 160, y: 50 },\n      //   tools: [\n      //     {\n      //       name: 'contextmenu',\n      //       args: {\n      //         graph: this.graph\n      //       }\n      //     }\n      //   ]\n      // });\n    } else if (key === '2') {\n      const { e } = this.contextMenu;\n      if (cell.isNode()) {\n        const outgoingEdges = this.graph?.getOutgoingEdges(cell);\n        const incomingEdges = this.graph?.getIncomingEdges(cell);\n        const { clientX, clientY } = e;\n        const pos = this.graph.clientToGraph(clientX, clientY);\n        if (outgoingEdges) {\n          outgoingEdges.forEach((edge: Edge) => {\n            edge.setSource(pos);\n          });\n        }\n        if (incomingEdges) {\n          incomingEdges.forEach((edge: Edge) => {\n            edge.setTarget(pos);\n          });\n        }\n        /*\n          X6删除接口，默认删除节点，会删除关联的边。可以配置disconnectEdges，\n          会把关联边的target和source重置为(0,0)，且tools无法操作，目前没有找到有效方案。\n          但是可以提前切除边和节点的关系，然后删除节点\n        */\n        // this.graph?.removeNode(cell);\n        this.graph?.removeCells([cell]);\n      } else if (cell.isEdge()) {\n        this.graph?.removeEdge(cell);\n      }\n    }\n  };\n\n  renderMenu() {\n    return (\n      <Menu onClick={this.onMenu}>\n        <Menu.Item key=\"1\">复制</Menu.Item>\n        <Menu.Item key=\"2\">删除</Menu.Item>\n        <Menu.Item key=\"3\">3</Menu.Item>\n      </Menu>\n    );\n  }\n\n  private toggleContextMenu(visible: boolean) {\n    ReactDom.unmountComponentAtNode(this.knob as HTMLDivElement);\n    document.removeEventListener('mousedown', this.onMouseDown);\n\n    if (visible) {\n      ReactDom.render(\n        <Dropdown\n          visible={true}\n          trigger={['contextMenu']}\n          overlay={this.renderMenu()}>\n          <span>123</span>\n        </Dropdown>,\n        this.knob as HTMLDivElement\n      );\n      document.addEventListener('mousedown', this.onMouseDown);\n    }\n  }\n\n  private updatePosition(e?: MouseEvent) {\n    const style = this.knob?.style || ({} as any);\n    if (e) {\n      const pos = this.graph.clientToGraph(e.clientX, e.clientY);\n      style.left = `${pos.x}px`;\n      style.top = `${pos.y}px`;\n    } else {\n      style.left = '-1000px';\n      style.top = '-1000px';\n    }\n  }\n\n  private onMouseDown = () => {\n    this.timer = window.setTimeout(() => {\n      this.updatePosition();\n      this.toggleContextMenu(false);\n    }, 200);\n  };\n\n  private onContextMenu(args: any) {\n    const { e } = args;\n    // 拿到当前节点信息\n    this.contextMenu = args;\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = 0;\n    }\n\n    this.updatePosition(e);\n    this.toggleContextMenu(true);\n  }\n\n  delegateEvents() {\n    //   注册监听事件\n    this.cellView.on('cell:contextmenu', this.onContextMenu, this);\n    return super.delegateEvents();\n  }\n\n  protected onRemove() {\n    this.cellView.off('cell:contextmenu', this.onContextMenu, this);\n  }\n}\n\nContextMenuTool.config({\n  tagName: 'div',\n  isSVGElement: false\n});\n","import React, { Component } from 'react';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport styles from './index.module.scss';\n\n/*\n  X6部分操作会引起画布的重绘；使用的React组件也会被重绘，可以通过SCU优化\n  React在画布重绘的过程中，可以保持自己的状态；\n  React可以通过节点的data提升状态，相当于传递props.node.data；也可以维护自己的state\n  X6的setData会做数据比较，没有变更不重绘\n*/\n\ninterface ICustomProps {\n  node?: ReactShape;\n}\nexport class WfhTriangle extends Component<ICustomProps, any> {\n  count: number;\n  static componentType: string;\n  static title: string;\n  constructor(props: any) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      name: 'default'\n    };\n    this.count = 0;\n  }\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    const prevNode = this.props.node;\n    const { node } = this.props;\n    console.log('SCU=====>', prevNode === node);\n    if (node?.hasChanged('data')) {\n      return true;\n    } else {\n      console.log('data didnot change');\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    // const { node } = this.props;\n    // const pl = JSON.parse(JSON.stringify(node));\n    const begin = Date.now();\n    // console.log('didMount', JSON.stringify(this.props.node));\n    const duration = Date.now() - begin;\n    console.log('begin===>', begin, duration);\n  }\n\n  compoenntDidUpdate() {\n    console.log('didUpdate', this.props);\n  }\n\n  onChangeData = () => {\n    const { node } = this.props;\n    console.log('node=======>', node);\n    // graph会做数据比较，没有更新数据，就不会重绘\n    node?.setData({ name: `changeData-${this.count++}` });\n  };\n\n  onChangeName = () => {\n    this.setState({\n      name: 666\n    });\n  };\n\n  renderClassic() {\n    return (\n      <div className={styles.root}>\n        <div onClick={this.onChangeData}>change data</div>\n        <div onClick={this.onChangeName}>change name</div>\n        {`Triangle-${this.state.name}-${this.props.node?.data?.name}`}\n        {`Triangle-`}\n      </div>\n    );\n  }\n\n  renderSimplified() {\n    return <div>simplified</div>;\n  }\n\n  render() {\n    const { node } = this.props;\n    const { mode } = node?.getData() || {};\n    console.log('mode========>', mode);\n    return mode === 'simplified'\n      ? this.renderSimplified()\n      : this.renderClassic();\n  }\n}\n\nWfhTriangle.componentType = 'wfh-triangle';\nWfhTriangle.title = 'triangle';\n","import React from 'react';\nimport { Markup } from '@antv/x6';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport { WfhRect } from '../WfhRect';\nimport { WfhTriangle } from '../WfhTriangle';\n\n// 公共的业务接口\ninterface IGraphOperations {\n  getRegisterName(): string;\n  removeNode?(args: any): boolean;\n  canConnect?(args: string): boolean;\n}\n\nexport class WfhDD extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-DD';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect', 'wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\nWfhDD.config({\n  width: 200,\n  height: 80,\n  component: <div>wfhdd</div>\n});\n\n// XXX业务节点\nexport class WfhDemoNode extends ReactShape implements IGraphOperations {\n  mode: string = 'classic';\n  setMode(mode: string) {\n    this.mode = mode;\n  }\n  getRegisterName() {\n    return 'wfh-demo';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect', 'wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhDemoNode.config({\n  width: 200,\n  height: 80,\n  component: <WfhRect />\n});\n\n// 注册rect节点\nexport class WfhRectNode extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-rect';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhRectNode.config({\n  width: 160,\n  height: 30,\n  // component: <WfhRect />,\n  portMarkup: [Markup.getForeignObjectMarkup()],\n  ports: {\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      }\n    },\n    items: [\n      { group: 'in', id: 'in1' },\n      { group: 'in', id: 'in2' },\n      { group: 'out', id: 'out1' },\n      { group: 'out', id: 'out2' }\n    ]\n  }\n});\n// 注册triangle节点\nexport class WfhTriangleNode extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-triangle';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhTriangleNode.config({\n  width: 160,\n  height: 30,\n  component: <WfhTriangle />,\n  portMarkup: [Markup.getForeignObjectMarkup()],\n  ports: {\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      }\n    },\n    items: [\n      { group: 'in', id: 'in1' },\n      { group: 'out', id: 'out2' }\n    ]\n  }\n});\n","import { Graph } from '@antv/x6';\nimport { ContextMenuTool } from './Tools';\n\nimport { WfhDemoNode, WfhRectNode, WfhTriangleNode } from './biz';\n\n// 注册业务节点\nGraph.registerNode('wfh-demo', WfhDemoNode, true);\nGraph.registerNode('wfh-rect', WfhRectNode, true);\nGraph.registerNode('wfh-triangle', WfhTriangleNode, true);\n\n// 注册tools\n// 注册到系统中\nGraph.registerEdgeTool('contextmenu', ContextMenuTool, true);\nGraph.registerNodeTool('contextmenu', ContextMenuTool, true);\n","/*\n节点连线钩子触发顺序：\n  validateMagnet(args)【新边触发】【source】【触发edge:connect】【不触发edge:added】\n    args：\n      e:JQuery.Event\n      cell:\n      magnet:\n      view:\n  createEdge(args)【新边触发】【新建边实例，替换系统默认边】\n    args：\n      sourceCell\n      sourceMagnet\n      source\n  validateConnect(args)【新边触发】【移动边触发】【触发edge:\n    当鼠标放开的时候，不会连接到当前元素，否则会连接到当前元素；但也不会清除已经生成的边\n    args：\n      edge\n      edgeView\n      sourceView\n      targetView\n      sourcePort\n      targetPort\n      sourceMagnet\n      targetMagnet\n      sourceCell（把所有节点都扫描了3遍）\n      targetCell（把所有节点都扫描了3遍）\n      type：【source、target】\n  validateEdge(args)【新边触发】【移动边触发】【节点和边关系已经建立，返回false会触发edge:removed】\n    args：\n      edge\n      type：【source、target】\n      previous：指向当前type上一次的位置，可能是Cell也可能是坐标\n*/\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Graph, Edge } from '@antv/x6';\nimport { Tooltip } from 'antd';\nimport Immutable from 'immutable';\nimport * as t from '../types';\nimport styles from './index.module.scss';\nimport '@antv/x6-react-shape';\nimport { WfhRect } from '../WfhRect';\n// import { WfhDD, WfhDemoNode } from './biz';\nimport './register';\ninterface IX6Workbench extends t.IWorkbench {}\n\nconst MOCKDATA = {\n  nodes: [\n    {\n      id: 'node1',\n      x: 40,\n      y: 40,\n      width: 80,\n      height: 40,\n      label: 'node1'\n    },\n    // {\n    //   id: 'node2',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node2'\n    // },\n    // {\n    //   id: 'node3',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node3'\n    // },\n    // {\n    //   id: 'node4',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node4'\n    // },\n    // {\n    //   id: 'node5',\n    //   x: 40,\n    //   y: 40,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node5'\n    // },\n    // {\n    //   id: 'node6',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node6'\n    // },\n    // {\n    //   id: 'node7',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node7'\n    // },\n    {\n      id: 'node8',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node8'\n    },\n    // {\n    //   id: 'node9',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node9'\n    // },\n    {\n      id: 'node10',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node10',\n      data: {\n        name: 'node10',\n        age: 123,\n        info: {\n          from: 'china'\n        }\n      }\n    }\n    // {\n    //   id: 'node11',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node11'\n    // },\n    // {\n    //   id: 'node12',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node12'\n    // }\n  ],\n  edges: [\n    {\n      source: {\n        cell: 'node1',\n        port: 'right'\n      },\n      target: {\n        cell: 'node10',\n        port: 'top'\n      },\n      data: {\n        age: 1,\n        info: {\n          name: '边'\n        }\n      }\n    },\n    {\n      source: {\n        cell: 'node1',\n        port: 'right'\n      },\n      target: {\n        cell: 'node8',\n        port: 'top'\n      }\n    }\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node3',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node9',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node2',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node4',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node5',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node6',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node7',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node9',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node11',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node9',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node12',\n    //     port: 'top'\n    //   }\n    // }\n  ]\n};\n\nclass X6Workbench extends React.PureComponent<IX6Workbench, any> {\n  container: HTMLDivElement | null = null;\n  graph: Graph | undefined;\n\n  refContainer = (container: HTMLDivElement) => {\n    this.container = container;\n  };\n\n  // 测试Demo\n  onChange = () => {\n    const { setCurrent } = this.props;\n    console.log('setCurrent');\n\n    setCurrent({ name: '' } as any);\n  };\n\n  /*\n    magnet\n    当magnet属性为true，标识该元素可以被链接，既在连线过程中可以当做连线的起点或终点\n  */\n\n  componentDidMount() {\n    // 屏蔽浏览器右键菜单，有兼容性问题《https://segmentfault.com/q/1010000004934881》\n    // document.oncontext = function () {\n    //   return false;\n    // };\n    // 此处请求需要回填的数据\n    const magnetAvailabilityHighlighter = {\n      name: 'stroke',\n      args: {\n        padding: 3,\n        attrs: {\n          strokeWidth: 3,\n          stroke: '#52c41a'\n        }\n      }\n    };\n    this.graph = new Graph({\n      container: this.container as HTMLDivElement,\n      grid: true,\n      panning: {\n        enabled: true,\n        modifiers: ['alt']\n      },\n      clipboard: {\n        enabled: true\n      },\n      selecting: {\n        enabled: true,\n        // className: styles.ss, // 需要改写css类，实现样式覆盖\n        rubberband: true, // 启用框选（橡皮筋）\n        strict: true,\n        movable: true,\n        showNodeSelectionBox: true,\n        showEdgeSelectionBox: true\n      },\n      snapline: {\n        enabled: true,\n        sharp: true\n      },\n      scroller: {\n        enabled: true,\n        pageVisible: false,\n        pageBreak: false\n        // pannable: true, // 类似panning\n        // modifiers: ['alt'], // 此处两项配置等同于外部的panning配置\n      },\n      highlighting: {\n        // 设置高亮配置\n        magnetAvailable: magnetAvailabilityHighlighter\n      },\n      connecting: {\n        // 边的连接设定\n        snap: true,\n        allowBlank: true,\n        // allowMulti: true,\n        allowLoop: false,\n        allowNode: true,\n        // allowEdge: false,\n        // allowPort: true,\n        highlight: true,\n        // 【生成边触发】【connect交互】点击magnet，生成边\n        validateMagnet(args) {\n          const { magnet } = args;\n          console.log('validateMagnet=====>', args);\n          return magnet.getAttribute('port-group') !== 'in';\n        },\n        // 【生成边触发】【connect交互】连接的过程中创建新的边\n        createEdge: (args) => {\n          /*\n          sourceCell\n          sourceMagnet\n          source\n          */\n          console.log('createEdge=====>', args);\n          return new Edge({\n            tools: [\n              {\n                name: 'contextmenu'\n              }\n            ]\n          });\n        },\n        // 【生成边触发】【移动边触发】【connect交互】在移动边的时候判断连接是否有效\n        validateConnection(args: any) {\n          console.log('validateConnection======>', args);\n          /*\n          args:\n            edge\n            edgeView\n            sourceView\n            targetView\n            sourcePort\n            targetPort\n            sourceMagnet\n            targetMagnet\n            sourceCell\n            targetCell\n            type\n          */\n          const { targetCell, sourceCell, type } = args;\n          // const { model } = targetCell;\n          // const tmpEdges = model.getOutgoingEdges(targetCell);\n          if (type === 'source') {\n            console.log('sourceCell======>', sourceCell);\n          } else {\n            console.log('targetCell======>', targetCell);\n          }\n\n          // console.log('validateConnection======>', args, tmpEdges);\n          return true;\n          // const { sourceCell, targetCell, edge } = args;\n          // console.log('validateConnection=========>', edge);\n          // if (targetCell && sourceCell) {\n          //   //  cell.shape可以代替getRegisterName\n          //   if (sourceCell.canConnect(targetCell.getRegisterName())) {\n          //     return true;\n          //   }\n          // }\n\n          // return false;\n        },\n        // 【生成边触发】【移动边触发】【connect交互】当停止拖动边的时候根据 validateEdge 返回值来判断边是否生效，但是节点与边的关系已经生成\n        validateEdge(args: any) {\n          /*\n          args:\n            edge\n            type\n            previous\n          */\n\n          const { edge, type } = args;\n          const tmpSource = edge.getTarget();\n          const tmpTarget = edge.getSource();\n\n          const source = edge.getSourceNode();\n          const target = edge.getTargetNode();\n          if (type === 'source') {\n            if (!source) {\n              return false;\n            }\n          } else if (type === 'target') {\n            if (!target) {\n              return false;\n            }\n          }\n          const { model } = target;\n          const tmpEdges = model.getIncomingEdges(target);\n          console.log(\n            'validateEdge====>',\n            tmpEdges,\n            tmpSource,\n            tmpTarget,\n            args\n          );\n\n          return true;\n        }\n      },\n      interacting: {},\n      onPortRendered(args) {\n        const selectors = args.contentSelectors;\n        const container = selectors && selectors.foContent;\n        if (container) {\n          ReactDOM.render(\n            (\n              <Tooltip title=\"port\">\n                <div className={styles.myport} />\n              </Tooltip>\n            ) as any,\n            container as any\n          );\n        }\n      }\n    });\n    // removeCell和removeCells会触发cell:removed,node:removed,edge:removed\n    this.graph?.on('cell:removed', function (args) {\n      console.log('cell:removed====>', args);\n    });\n    this.graph?.on('node:removed', function (args) {\n      console.log('node:removed====>', args);\n    });\n    this.graph?.on('edge:removed', function (args) {\n      console.log('edge:removed====>', args);\n    });\n    // 点选和框选Selection\n    // cell:selected（args: cell, options）, node:selected（args: cell, node, options）, edge:selected（args: cell, edge, options）\n    this.graph?.on('cell:selected', (args) => {\n      console.log('cell:selected====>', args);\n    });\n    this.graph?.on('node:selected', (args) => {\n      console.log('node:selected====>', args);\n    });\n    this.graph?.on('edge:selected', (args) => {\n      const { edge } = args;\n      const { target, source } = edge;\n      console.log('edge:selected====>', target, source);\n    });\n    // cell: unselected, node:unselected, edge:unselected\n    // 选中节点发生变更增加新选中，删除新选中时触发【删除选中触发一次】【新选中也会触发一次】【框选只选节点；单选才能选边】\n    this.graph?.on('selection:changed', (args) => {\n      /*\n        args:\n          removed: 取消选中的节点\n          added: 新选中的节点\n          seleced: 选中的节点\n          options: {}，设置项\n      */\n      console.log('selection:changed======>', args);\n      const { selected } = args;\n      const cell = selected[0];\n      if (cell?.isNode()) {\n        const clone = cell.clone();\n        console.log('cell=====>', cell.shape, clone.shape, cell, clone);\n      }\n      if (cell?.isEdge()) {\n        const clone = cell.clone();\n        console.log(\n          'cell========>',\n          cell.getTargetCellId(),\n          cell.getSourceCellId()\n        );\n        console.log(\n          'clone========>',\n          clone.getTargetCellId(),\n          clone.getSourceCellId()\n        );\n        cell.on('change:data', (args) => {\n          console.log('args======>', args);\n        });\n        cell.setData({\n          configs: {\n            name: 123\n          }\n        });\n        setTimeout(() => {\n          cell.setData({\n            configs: {\n              name: 'monkey'\n            }\n          });\n        }, 5000);\n      }\n      const { target, source } = (selected[0] as any) || ({} as any);\n      console.log('==========>', target, source);\n    });\n\n    // 添加边时触发【模板添加新边】【复制添加新边】\n    this.graph?.on('edge:added', (args) => {\n      console.log('edge:added===>', args);\n    });\n\n    // 删除边时触发【所有删除操作】\n    this.graph?.on('edge:removed', (args) => {\n      console.log('edge:removed=====>', args);\n    });\n\n    // 连接边时触发【连接链接桩产生新边】【移动已有的边】触发\n    this.graph?.on('edge:connected', (args) => {\n      const { edge } = args;\n      const { target, source } = edge;\n      console.log('edge:connected====>', target, source);\n    });\n\n    // 鼠标进入\n    this.graph?.on('node:mouseenter', ({ cell }) => {\n      cell.addTools([\n        {\n          name: 'contextmenu'\n        }\n      ]);\n    });\n\n    this.graph?.on('node:mouseleave', ({ cell }) => {\n      cell.removeTools();\n    });\n\n    this.graph?.on('edge:mouseenter', ({ cell }) => {\n      cell.addTools([\n        {\n          name: 'source-arrowhead'\n        },\n        {\n          name: 'target-arrowhead',\n          args: {\n            attrs: {\n              fill: 'red'\n            }\n          }\n        },\n        {\n          name: 'contextmenu'\n        }\n      ]);\n    });\n\n    this.graph?.on('edge:mouseleave', ({ cell }) => {\n      cell.removeTools();\n    });\n    // this.graph?.on('cell:selected', (args: any) => {\n    //   console.log('cell selected===>', args);\n    // });\n    // this.graph?.on('edge:selected', (args: any) => {\n    //   console.log('edge selected');\n    // });\n    // this.graph?.on('node:selected', (args: any) => {\n    //   console.log('node selected');\n    // });\n    // this.graph?.on('node:context', (args: any) => {\n    //   console.log('node context====》', args);\n    // });\n    // this.graph?.on('edge:context', (args: any) => {\n    //   console.log('edge context======>', args);\n    // });\n    // this.graph?.on('blank:context', (args: any) => {\n    //   console.log('blank context======>', args);\n    // });\n    // 动态添加/删除链接桩\n    // this.graph?.on('node:mouseenter', ({ cell }) => {\n    //   if (cell.isNode()) {\n    //     cell.addPorts([\n    //       {\n    //         id: 'top',\n    //         args: {\n    //           position: 'top'\n    //         },\n    //         attrs: {\n    //           circle: {\n    //             r: 6,\n    //             magnet: true,\n    //             stroke: '#31d0c6',\n    //             strokeWidth: 2,\n    //             fill: '#fff'\n    //           }\n    //         }\n    //       },\n    //       {\n    //         id: 'bottom',\n    //         // args: {\n    //         //   position: 'bottom'\n    //         // },\n    //         attrs: {\n    //           circle: {\n    //             r: 6,\n    //             magnet: true,\n    //             stroke: '#31d0c6',\n    //             strokeWidth: 2,\n    //             fill: '#fff'\n    //           }\n    //         }\n    //       }\n    //     ]);\n    //   }\n    // });\n    // this.graph?.on('node:mouseleave', ({ cell }) => {\n    //   if (cell.isNode()) {\n    //     cell.removePorts();\n    //   }\n    // });\n    const { init } = this.props;\n    setTimeout(() => {\n      const ports = [\n        {\n          id: 'top',\n          attrs: {\n            circle: {\n              r: 6,\n              magnet: true,\n              stroke: '#31d0c6',\n              strokeWidth: 2,\n              fill: '#fff'\n            }\n          }\n        },\n        {\n          id: 'right',\n          attrs: {\n            circle: {\n              r: 6,\n              magnet: true,\n              stroke: '#31d0c6',\n              strokeWidth: 2,\n              fill: '#fff'\n            }\n          }\n        }\n      ];\n\n      const nodes = MOCKDATA.nodes.map((node) => ({\n        ...node,\n        // tools,\n        ports\n      }));\n      const edges = MOCKDATA.edges.map((edge) => ({\n        ...edge,\n        shape: 'edge'\n      }));\n\n      init({\n        dataList: nodes,\n        edgeList: edges,\n        current: {},\n        configs: {}\n      });\n    }, 1000);\n  }\n\n  componentWillUpdate() {\n    console.log('will-update');\n  }\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    const { dataList, edgeList, dataSource, current } = this.props;\n    const prevDataList = prevProps.dataList;\n    const prevEdgeList = prevProps.edgeList;\n    if (\n      !Immutable.is(dataList, prevDataList) ||\n      !Immutable.is(edgeList, prevEdgeList)\n    ) {\n      console.log('didUpdate');\n      const elemList = dataList.toJS();\n      if (dataSource === 'DRAG_NODE_DATA') {\n        console.log('拖拽产生的数据=====>', current);\n        const tmp = current?.toJS();\n        const { id, componentType, title } = tmp;\n        const node = {\n          id,\n          label: title,\n          x: 20,\n          y: 80,\n          // width: 80, // 节点有默认的大小，此处可以不设置\n          // height: 40,\n          shape: componentType,\n          component: <WfhRect />\n        };\n        this.graph?.addNode(node);\n        this.graph?.addEdge({\n          target: { x: 10, y: 50 },\n          source: { x: 70, y: 50 }\n        });\n      } else if (dataSource === 'COPY_EDGE_DATA') {\n        console.log('边拷贝数据');\n      } else {\n        const targetList = elemList.map((elem: any) => {\n          const { componentType } = elem;\n          if (componentType) {\n            return {\n              id: elem.id,\n              height: 40,\n              width: 80,\n              x: 80,\n              y: 80,\n              label: componentType\n            };\n          }\n\n          return {\n            ...elem,\n            shape: 'wfh-demo'\n          };\n        });\n\n        this.graph?.fromJSON({\n          nodes: targetList,\n          edges: edgeList?.toJS()\n        });\n        /*\n          继承Cell节点，不注册可以直接实例化使用\n          注册的作用就是：依赖注入\n        */\n        // this.graph?.addNode(new WfhDD());\n        // this.graph?.addNode(new WfhDemoNode());\n      }\n    }\n  }\n\n  onGetAllData = () => {\n    const allData = this.graph?.toJSON();\n    const model = this.graph?.model;\n    const view = this.graph?.view;\n    console.log('allData====>', allData, model, view);\n  };\n\n  onSwitchMode = () => {\n    const allNodes = this.graph?.getNodes();\n    allNodes?.forEach((node) => {\n      node.setData({\n        type: 'simplified'\n      });\n    });\n  };\n\n  computer(rootNodes: Node[]) {\n    let currentNodes = rootNodes || [];\n    const array = [];\n    let i = 0;\n    let maxDegree = 0;\n    while (currentNodes.length >= 1) {\n      array[i] = currentNodes.length;\n      i++;\n      const children = currentNodes.reduce((sum: Node[], curr: Node) => {\n        // 合并子节点\n        const result =\n          this.graph?.getNeighbors(curr as any, {\n            outgoing: true\n          }) || [];\n        // 计算最大度\n        maxDegree = maxDegree > result.length ? maxDegree : result.length;\n        // 合并\n        sum = sum.concat(result as any);\n\n        return sum;\n      }, []);\n\n      currentNodes = children;\n    }\n\n    return [array, maxDegree];\n  }\n\n  onLayout = () => {\n    // const allNodes = this.graph?.getNodes();\n    const rootNodes: Node[] = this.graph?.getRootNodes() || ([] as any);\n    const leafNodes = this.graph?.getLeafNodes() || [];\n    let currentNodes = rootNodes;\n    const ELEMENT_WIDTH = 110 + 20;\n    const ELEMENT_HEIGHT = 44 + 4;\n\n    console.log('leaf========>', leafNodes.length);\n    // const [array = [], maxDegree] = this.computer(rootNodes as any);\n    // const deep = (array as []).length;\n    // console.log('computer=========>', array, maxDegree);\n    this.graph?.batchUpdate(() => {\n      let level = 0;\n      /*eslint no-loop-func: \"off\"*/\n      while (currentNodes.length > 0) {\n        console.log('6666666======>', currentNodes);\n        const result = currentNodes.reduce(\n          (sum: Node[], node: any, index: number) => {\n            node.position(\n              0 + level * ELEMENT_WIDTH,\n              0 + index * ELEMENT_HEIGHT\n            );\n            const result = this.graph?.getNeighbors(node as any, {\n              outgoing: true\n            });\n            sum = sum.concat(result as any);\n            return sum;\n          },\n          []\n        );\n        level += 1;\n        currentNodes = result;\n      }\n    });\n  };\n  render() {\n    console.log('x6------render====>', this.props);\n    return (\n      <div className={styles.container}>\n        <div className={styles.toolbar}>\n          <button onClick={this.onChange}>dispatch</button>\n          <button onClick={this.onGetAllData}>获取数据</button>\n          <button onClick={this.onSwitchMode}>改变模式</button>\n          <button onClick={this.onLayout}>自动布局</button>\n        </div>\n        <div className={styles.graph} ref={this.refContainer} />\n        <div className={styles.config}>抽屉</div>\n      </div>\n    );\n  }\n}\n\nexport default X6Workbench;\n","import * as React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Stencil from './components/Stencil';\nimport DropTarget from './components/DropTarget';\nimport DragSource from './components/DragSource';\nimport CMSWorkbench from './components/CmsWorkbench';\nimport X6Workbench from './components/X6Workbench';\nimport { Alert } from './components/Alert';\nimport { Background } from './components/Background';\nimport { WfhInput } from './components/WfhInput';\nimport { WfhInputNum } from './components/WfhInputNum';\nimport { WfhSelect } from './components/WfhSelect';\nimport { WfhTable } from './components/WfhTable';\nimport { WfhRect } from './components/WfhRect';\nimport { WfhTriangle } from './components/WfhTriangle';\nimport Immutable from 'immutable';\nimport styles from './index.module.scss';\n\ninterface IProps {}\n\nconst DND_ITEM_LIST = ['CMS_DND_ITEM_TYPE', 'X6_DND_ITEM_TYPE'];\n/*\n  DragSource的Props\n*/\n\ninterface IAnyObj {\n  [name: string]: any;\n}\n\n// 组件接口\ninterface IComponent {\n  componentType: React.ReactText; // 组件类型\n  config: IAnyObj; // 组件对应数据项\n  [name: string]: any;\n}\ninterface IDragSourceProps {\n  id: React.ReactText;\n  name?: React.ReactText;\n  type: string | symbol;\n  thumbnail?: string;\n  toolComponent?: React.ComponentClass | React.FC;\n  data: IComponent;\n}\n\n/*\n  CMS数据：\n    警告信息\n    背景色\n    单行文本\n    数值输入\n    下拉框\n    表格\n    \n  x6数据：\n    触发\n      触发对象\n        客群\n      触发方式\n        定时触发\n        立即触发\n        行为触发\n        系统触发\n    流程控制\n      等待\n      条件\n      随机网关\n      并行网关\n      事件网关\n      执行子流程\n      对照组\n      结束\n      中间事件\n    策略\n      调用规则\n      调用模型\n    动作\n      通知渠道\n        风险统一调额调价V2\n        推送\n        短信\n        微信\n        人工外呼\n        邮件\n        AI外呼发送\n        AI外呼取消\n    数据产品\n      采集外部资信\n      变量整理\n\n\n*/\nconst MOCK_TOO_LIST: IDragSourceProps[] = [\n  {\n    id: WfhRect.title, // 用于搜索\n    name: WfhRect.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhRect.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhTriangle.title, // 用于搜索\n    name: WfhTriangle.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhTriangle.componentType,\n      config: {}\n    }\n  },\n  {\n    id: Alert.title, // 用于搜索\n    name: Alert.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: Alert.componentType,\n      config: {}\n    }\n  },\n  {\n    id: Background.title,\n    name: Background.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: Background.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhInput.title,\n    name: WfhInput.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhInput.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhInputNum.title,\n    name: WfhInputNum.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhInputNum.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhSelect.title,\n    name: WfhSelect.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhSelect.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhTable.title,\n    name: WfhTable.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhTable.componentType,\n      config: {}\n    }\n  }\n];\n\nclass Frame extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      stencilList: Immutable.List([])\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState((prevState: any) => {\n        return {\n          stencilList: Immutable.List(MOCK_TOO_LIST)\n        };\n      });\n    }, 1000);\n  }\n  render() {\n    const { match = {} } = this.props;\n    const type = match.params?.type || 'x6';\n    const { stencilList = [] } = this.state;\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className={styles.dndframe}>\n          <div className={styles.sidebar}>\n            <Stencil toolList={stencilList} dragSource={DragSource} />\n          </div>\n          <div className={styles.content}>\n            <DropTarget\n              accept={[DND_ITEM_LIST[0]]}\n              workbench={type === 'cms' ? CMSWorkbench : X6Workbench}\n            />\n          </div>\n        </div>\n      </DndProvider>\n    );\n  }\n}\n\nexport default Frame;\n"],"sourceRoot":""}