{"version":3,"sources":["pages/react/components/List/index.tsx","pages/react/components/MyFn/index.tsx","pages/react/index.tsx"],"names":["List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","old","console","log","nextProps","nextState","count","JSON","stringify","react","React","MyFn","ref","_React$useState","_React$useState2","slicedToArray","name","setName","inputRef","focus","current","value","onChange","e","target","MyName","_React$Component","getData","state","setState","inherits","createClass","key","Demo","children","concat","index","State","context","id","fnRef","nameRef","onCount1","onCount2","onChangeList","list","splice","onChangeList2","onChangeList3","onChangeZodiac","list2","onChangeZodiac2","onChangeZodiac3","onDoubleState","total","onDoubleState2","total2","onChangeDemo4","demo1","demo2","demo3","demo4","onFn","title","page","_this2","setTimeout","prevProps","prevState","snapshot","onClick","MyFn_MyName","map","elem","List_List","item"],"mappings":"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","file":"static/js/32.663c5c73.chunk.js","sourcesContent":["import * as React from 'react'\n\ninterface IProps {\n    count: number\n    key: any\n}\ninterface IState {}\nexport default class List extends React.Component<IProps, IState> {\n    old: any\n    constructor(props: IProps) {\n        super(props)\n        console.log('List-Component-constructor===>', this.props)\n    }\n    componentWillReceiveProps(nextProps: any) {\n        console.log(\"List-Component-willReceiveProps===>\", nextProps)\n    }\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        if (nextProps.count === this.props.count) {\n            console.log(\"List-Component-shouldComponentUpdate-没有update===>\", this.props)\n            return false\n        }\n        return true\n    }\n    componentWillUnmount() {\n        console.log('List-Component-willunmount===>', this.props)\n    }\n    render() {\n        console.log('List-Component-render===>', this.props)\n        if (this.old) {\n            console.log(\"List-Component-render==old=>\", this.old)\n        }\n        else {\n            this.old = JSON.stringify(this.props)\n        }\n        return <div>\n            {\n                this.props.count\n            }\n        </div>\n    }\n}","import * as React from 'react';\n\nfunction Fn(props: any, ref: any) {\n  const [name, setName] = React.useState('MyFn');\n  const inputRef: any = React.createRef();\n  //   模拟class 接口，暴露当前组件状态给父组件\n  React.useImperativeHandle(ref, () => ({\n    name,\n    focus: () => {\n      inputRef.current.focus();\n    }\n  }));\n\n  function onChange(e: any) {\n    setName(e.target.value);\n  }\n\n  return (\n    <div>\n      <input\n        ref={inputRef}\n        value={name}\n        onChange={React.useCallback(onChange, [])}\n      />\n    </div>\n  );\n}\n\nexport const MyFn = React.forwardRef(Fn);\n\nexport class MyName extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      name: 'MyName'\n    };\n  }\n  getData = () => {\n    return this.state.name;\n  };\n  onChange = (e: any) => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n  render() {\n    return (\n      <div>\n        <input value={this.state.name} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","/**\n * setState(updater, callback)\n * 1、updater可以是对象，也可以是function(state, props) => state\n * 2、如果updater是null或者返回null，组件不会rerender\n * 3、updater函数中的state是对组件state的引用，props是对组件props的引用，但是返回该引用同样会触发rerender\n *\n * 结论：除非setState设置null，否者只要调用setState一定会引起组件的rerender\n * forceUpdate(callback)\n * forceUpdate会跳过调用组件的shouldComponentUpdate函数，但是子组件会正常调用SCU；\n * 其余生命周期函数都会被调用\n *  */\n/**\n * 测试key的作用\n * 1、数据[1,2,3] 以index为key，        渲染出列表：新建Li1,新建Li2,新建Li3\n * 1-1、修改数据为[4,1,2,3]以index为key，渲染出列表：更新Li1为Li4，更新Li2为Li1，更新Li3为Li2，新建Li3\n * 1-2、修改数据为[1,2,4,3]以index为key，渲染出列表：不变Li1，不变Li2，更新Li3为Li4，新建Li3\n * 1-3、修改数据为[1,2,3,4]以index为key, 渲染处列表：不变Li1，不变Li2，不变Li3，新建Li4\n *\n * 2、数据[{id: 'monkey1',name:'monkey'},{id: 'cat2',name:'cat'}]，以id为key\t\t\t\t\t\t\t\t\t渲染：新建monkey，新建cat\n * 2-1、修改数据[{id: 'mouse3',name:'mouse'},{id: 'monkey1',name:'monkey'},{id: 'cat2',name:'cat'}]\t渲染：新建mouse, 不变monkey，不变cat\n * 2-2、修改数据[{id: 'monkey1',name:'monkey'},{id: 'mouse3',name:'mouse3'},{id: 'cat2',name:'cat'}]\t渲染：不变monkey，新建mouse, 不变cat\n * 2-3、修改数据[{id: 'monkey1',name:'monkey'},{id: 'cat2',name:'cat'},{id: 'mouse3',name:'mouse'}]\t渲染：不变monkey，不变cat，新建mouse\n */\n/**\n * setState是异步的，连续的setState可能造成bug\n * 可以将updater更改为function，规避bug\n *\n * 连续的setState\n * 返回对象，操作会被合并，做batch更新，造成第一次加1和第二次加1合并，只操作了一次加1\n *\n */\nimport * as React from 'react';\nimport List from './components/List';\nimport { MyFn, MyName } from './components/MyFn';\ninterface IProps {}\ninterface IState {\n  count: { [key: string]: any };\n  list: any[];\n  list2: any[];\n  total: number;\n  total2: number;\n  demo1: { [property: string]: any };\n}\n\nfunction Demo(props: any) {\n  console.log('Demo-render=====>', props.name);\n\n  return (\n    <div>\n      {props.children}\n      <span>{`demo${props.index}`}</span>\n      <span>{props.name}</span>\n    </div>\n  );\n}\n\nclass State extends React.Component<IProps, IState> {\n  target: any = { id: 'mouse3', name: 'mouse' };\n  fnRef: any = null;\n  nameRef: any = null;\n  constructor(props: IProps, context: any) {\n    super(props);\n    this.fnRef = React.createRef();\n    this.nameRef = React.createRef();\n    this.state = {\n      demo1: {\n        index: 1,\n        name: 'demo1',\n        demo2: {\n          index: 2,\n          name: 'demo2',\n          demo3: {\n            index: 3,\n            name: 'demo3',\n            demo4: {\n              index: 4,\n              name: 'demo4'\n            }\n          }\n        }\n      },\n      count: {\n        title: 'monkey',\n        page: 0\n      },\n      list: [1, 2, 3],\n      list2: [\n        { id: 'monkey1', name: 'monkey' },\n        { id: 'cat2', name: 'cat' }\n      ],\n      total: 1,\n      total2: 1\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        total: 3\n      });\n    }, 3000);\n  }\n  getSnapshotBeforeUpdate(nextProps: any, nextState: any) {\n    console.log('getSnapshot======>', nextState);\n    return '123';\n  }\n  componentDidUpdate(prevProps: any, prevState: any, snapshot: any) {\n    console.log('didUpdate=====snapshot=======>', snapshot);\n  }\n  onCount1 = () => {\n    console.log('demo1=button====>', this.state.count);\n    this.setState(null);\n  };\n  onCount2 = () => {\n    console.log('count2=button====>', this.state.count);\n    this.setState((state: IState, props: IProps) => {\n      console.log('this.state === state===>', this.state === state);\n      console.log('this.props === ptops===>', this.props === props);\n      return state;\n    });\n  };\n  onChangeList = () => {\n    const { list } = this.state;\n    list.splice(0, 0, 4);\n    this.setState({\n      list\n    });\n  };\n  onChangeList2 = () => {\n    const { list } = this.state;\n    list.splice(2, 0, 4);\n    this.setState({\n      list\n    });\n  };\n  onChangeList3 = () => {\n    const { list } = this.state;\n    list.splice(3, 0, 4);\n    this.setState({\n      list\n    });\n  };\n\n  onChangeZodiac = () => {\n    const { list2 } = this.state;\n    list2.splice(0, 0, this.target);\n    this.setState({\n      list2\n    });\n  };\n  onChangeZodiac2 = () => {\n    const { list2 } = this.state;\n    list2.splice(1, 0, this.target);\n    this.setState({\n      list2\n    });\n  };\n  onChangeZodiac3 = () => {\n    const { list2 } = this.state;\n    list2.splice(2, 0, this.target);\n    this.setState({\n      list2\n    });\n  };\n  onDoubleState = () => {\n    this.setState({\n      total: this.state.total + 1\n    });\n    this.setState({\n      total: this.state.total + 1\n    });\n  };\n\n  onDoubleState2 = () => {\n    this.setState((state, props) => {\n      return {\n        total2: state.total2 + 1\n      };\n    });\n    this.setState((state, props) => {\n      return {\n        total2: state.total2 + 1\n      };\n    });\n  };\n\n  onChangeDemo4 = () => {\n    const { demo1 } = this.state;\n    const { demo2 } = demo1;\n    const { demo3 } = demo2;\n    const { demo4 } = demo3;\n    demo4.name = 'change';\n    this.setState({\n      demo1\n    });\n  };\n\n  onFn = () => {\n    if (this.fnRef && this.fnRef.current) {\n      console.log('fnRef======>', this.fnRef.current.name);\n      this.fnRef.current.focus();\n    }\n    if (this.nameRef && this.nameRef.current) {\n      // 可以不用提供数据接口，直接把state都能给拿到\n      console.log('nameRef======>', this.nameRef.current.getData());\n      console.log('nameRef======>', this.nameRef.current.state);\n    }\n  };\n\n  render() {\n    console.log('states-render=====>', this.state);\n    const { demo1 } = this.state;\n    const { demo2 } = demo1;\n    const { demo3 } = demo2;\n    const { demo4 } = demo3;\n\n    return (\n      <div>\n        <div>\n          <button onClick={this.onFn}>获取数据</button>\n          <MyFn ref={this.fnRef} />\n          <MyName ref={this.nameRef} />\n        </div>\n        <div>\n          <button onClick={this.onChangeDemo4}>设置demo4</button>\n          <Demo index={demo4.index} name={demo4.name}>\n            <Demo index={demo2.index} name={demo2.name}>\n              <Demo index={demo3.index} name={demo3.name}>\n                <Demo index={demo4.index} name={demo4.name}></Demo>\n              </Demo>\n            </Demo>\n          </Demo>\n        </div>\n        <div>\n          <button onClick={this.onDoubleState}>\n            连续setState，打印total=2\n          </button>\n          <span>{this.state.total}</span>\n        </div>\n        <div>\n          <button onClick={this.onDoubleState2}>\n            连续setState，打印total2=3\n          </button>\n          <span>{this.state.total2}</span>\n        </div>\n        <div>\n          <button onClick={this.onCount1}>Demo1</button>\n          <span>setState设置null，不会引起组件的rerender</span>\n        </div>\n        <div>\n          <button onClick={this.onCount2}>Demo2</button>\n          <span>\n            setState直接返回对组件的state的引用依然会引起组件的rerender\n          </span>\n        </div>\n        <span>{this.state.count.page}</span>\n        <div>\n          <h1>以index索引为key，测试react渲染优化</h1>\n          <button onClick={this.onChangeList}>4123</button>\n          <button onClick={this.onChangeList2}>1243</button>\n          <button onClick={this.onChangeList3}>1234</button>\n          {this.state.list.map((elem, index) => {\n            return <List key={index} count={elem} />;\n          })}\n        </div>\n        <div>\n          <h1>以数据项的id为key，测试react渲染优化</h1>\n          <button onClick={this.onChangeZodiac}>mouse,monkey,cat</button>\n          <button onClick={this.onChangeZodiac2}>monkey,mouse,cat</button>\n          <button onClick={this.onChangeZodiac3}>monkey,cat,mouse</button>\n          {this.state.list2.map((item: any, index: number) => {\n            return <List key={item.id} count={item.name} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default State;\n"],"sourceRoot":""}