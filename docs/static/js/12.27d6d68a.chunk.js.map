{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Text/index.tsx","components/Text/index.module.scss","pages/blog/index.module.scss","pages/blog/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","_objectWithoutProperties","_objectWithoutPropertiesLoose_js__WEBPACK_IMPORTED_MODULE_0__","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","SingleLineText","props","React","className","concat","styles","single","children","Text","numberOfLines","_props$style","style","rest","_excluded","final","Number","assign","_objectSpread","WebkitLineClamp","module","exports","text","limited-text","blog","group","cell","Blog","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","state","time","_createClass","value","window","devicePixelRatio","setState","height"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,IACe,SAAAG,EAAAE,EAAAC,GACf,SAAAD,EAAA,SACA,IACAE,EAAAC,EADAC,EAAeC,OAAAN,EAAA,EAAAM,CAA4BL,EAAAC,GAE3C,GAAAI,OAAAC,sBAAA,CACA,IAAAC,EAAAF,OAAAC,sBAAAN,GACA,IAAAG,EAAA,EAAeA,EAAAI,EAAAC,OAA6BL,IAC5CD,EAAAK,EAAAJ,GACAF,EAAAQ,QAAAP,IAAA,GACAG,OAAAK,UAAAC,qBAAAC,KAAAZ,EAAAE,KACAE,EAAAF,GAAAF,EAAAE,IAGA,OAAAE,qKCUO,SAASS,EAAeC,GAC3B,OACIC,gBAAA,QAAMC,UAAS,GAAAC,OAAKC,IAAOC,OAAM,KAAAF,OAAIH,EAAME,YAEnCF,EAAMM,UAkCPC,IAtBf,SAAcP,GACV,IACIQ,EAKAR,EALAQ,cACAN,EAIAF,EAJAE,UACAI,EAGAN,EAHAM,SAAQG,EAGRT,EAFAU,aAAK,IAAAD,EAAG,GAAEA,EACPE,EAAI3B,YACPgB,EAAKY,GACHC,EAAQC,OAAON,GAAiB,EAChCJ,IAAO,gBACPA,IAAa,KACnB,OACIH,gBAAA,OAAAV,OAAAwB,OAAA,CAAMb,UAAS,GAAAC,OAAKU,EAAK,KAAAV,OAAID,GAAa,IACtCQ,MAAKM,YAAA,CAAIC,gBAAiBjB,EAAMQ,eAAkBE,IAC9CC,GAEAL,yBCvDhBY,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,eAAA,2BAAAhB,OAAA,2CCAlBa,EAAAC,QAAA,CAAkBG,KAAA,mBAAAC,MAAA,oBAAAC,KAAA,qKCKGC,EAAI,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACrB,SAAAA,EAAYzB,GAAY,IAAA8B,EAIlB,OAJkBC,YAAAC,KAAAP,IACpBK,EAAAF,EAAA9B,KAAAkC,KAAMhC,IACDiC,MAAQ,CACTC,KAAM,GACRJ,EAsDN,OArDCK,YAAAV,EAAA,EAAArC,IAAA,oBAAAgD,MACD,WACI,IAAIF,EAAOG,OAAOC,iBACbJ,IACDA,EAAO,GAEXF,KAAKO,SAAS,CACVL,WAEP,CAAA9C,IAAA,SAAAgD,MACD,WACI,OACInC,gBAAA,OAAKC,UAAWE,IAAOkB,MAEnBrB,gBAAA,OAAKC,UAAWE,IAAOmB,OACnBtB,gBAAA,YAAM,oDACNA,gBAAA,OAAKC,UAAWE,IAAOoB,MAEnBvB,gBAACM,IAAI,CAACC,cAAe,GAAG,qVAI5BP,gBAAA,OAAKC,UAAWE,IAAOoB,MACnBvB,gBAACM,IAAI,CAACC,cAAe,EAAGE,MAAO,CAAE8B,OAAQ,SAAU,4XAIvDvC,gBAAA,OAAKC,UAAWE,IAAOoB,MACnBvB,gBAACF,IAAc,KAAC,2VAyBpC0B,EA3DqB,CAASxB","file":"static/js/12.27d6d68a.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","/*\n    CSS global：inherit、initial、unset\n    hyphens：[none, manual, auto](草案阶段)，连字符\n    word-break：[normal, break-all, keep-all，break-word(被弃用，作用同word-wrap,但仍然有效)]，1、断行处是否应该出现在一个词中\n        normal：Non-CJK文本在word中间不断行且换行，CJK文本断行\n        keep-all：Non-CJK文本在word中间不断行且换行，CJK文本不断行\n        break-all：Non-CJK文本在word中间断行且不换行，CJK文本断行\n\n        word-break：Non-CJK文本中的word中间断行且换行，CJK文本断行\n    word-wrap（overflow-wrap，别名是word-wrap）：[normal, anywhere, break-word]，1、控制长度超过一行的单词是否被拆分换行\n        normal（anywhere）：Non-CJK文本在word中间不断行且不换行（同keep-all）\n        break-word：Non-CJK文本在word中间断行且换行（同word-break）\n    white-space：[normal, nowrap, pre, pre-wrap, pre-line]，1、控制空白字符的展示；2、控制换行(主要用于CJK？)\n    text-overflow：[clip, ellipsis]\n*/\nimport * as React from 'react';\nimport styles from './index.module.scss';\n\n// 这个组件是个伪省略，指定高度时，在安卓手机上会露出很少的折行文本的顶部，单行建议使用SingleLineText\n\ninterface ISingleLineProps {\n    className?: string\n    children?: any\n}\nexport function SingleLineText(props: ISingleLineProps) {\n    return (\n        <span className={`${styles.single} ${props.className}`}>\n            {\n                props.children\n            }\n        </span>\n    )\n}\n\ninterface IProps {\n    numberOfLines?: number;\n    className?: string;\n    children?: React.ReactChild;\n    style?: any\n}\nfunction Text(props: IProps) {\n    const {\n        numberOfLines,\n        className,\n        children,\n        style = {},\n        ...rest\n    } = props;\n    const final = Number(numberOfLines) > 0\n        ? styles['limited-text']\n        : styles['text'];\n    return (\n        <span className={`${final} ${className || ''}`}\n            style={{ WebkitLineClamp: props.numberOfLines, ...style }}\n            {...rest}>\n            {\n                children\n            }\n        </span>\n    )\n}\n\nexport default Text;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__2LHWp\",\"limited-text\":\"Text_limited-text__EjOY1\",\"single\":\"Text_single__2tpgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blog\":\"blog_blog__QVypI\",\"group\":\"blog_group__2HPcP\",\"cell\":\"blog_cell__2f-Kg\"};","import * as React from 'react';\nimport styles from \"./index.module.scss\"\nimport Text, { SingleLineText } from \"Components/Text\"\ninterface IState {\n    time: number;\n}\nexport default class Blog extends React.Component<any, IState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            time: 1\n        };\n    }\n    componentDidMount() {\n        let time = window.devicePixelRatio;\n        if (!time) {\n            time = 1;\n        }\n        this.setState({\n            time\n        });\n    }\n    render() {\n        return (\n            <div className={styles.blog}>\n\n                <div className={styles.group}>\n                    <span>测试Text和SingleLineText组件</span>\n                    <div className={styles.cell}>\n\n                        <Text numberOfLines={2}>\n                            我们是共产主义接班人。明月几时有，把酒问青天。不知天上宫阙，今夕是何年。我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n                        </Text>\n                    </div>\n                    <div className={styles.cell}>\n                        <Text numberOfLines={2} style={{ height: \"50px\" }}>\n                            指定高度的bug。我们是共产主义接班人。明月几时有，把酒问青天。不知天上宫阙，今夕是何年。我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n                        </Text>\n                    </div>\n                    <div className={styles.cell}>\n                        <SingleLineText>\n                            我们是共产主义接班人。明月几时有，把酒问青天。不知天上宫阙，今夕是何年。我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n                        </SingleLineText>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    // render() {\n    //     const { time } = this.state;\n    //     return (\n    //         <div style={{ fontSize: `${time * 12}px` }}>\n    //             {/* <h1>\n    //                 {\n    //                     `字体根据设备像素比大小变化:${time}`\n    //                 }\n    //             </h1>\n    //             <span>\n    //                 我们是共产主义接班人。明月几时有，把酒问青天。不知天上宫阙，今夕是何年。我欲乘风归去，又恐琼楼玉宇，高处不胜寒。\n    //             </span>\n    //             <span>\n    //                 hello, world! this is a wonderful world.\n    //             </span> */}\n    //         </div>\n    //     )\n    // }\n}"],"sourceRoot":""}