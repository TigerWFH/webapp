{"version":3,"sources":["pages/x6/components/Stencil/index.module.scss","pages/x6/components/DropTarget/index.module.scss","pages/x6/components/DragSource/index.module.scss","pages/x6/components/Background/index.module.scss","pages/x6/components/Alert/index.module.scss","pages/x6/components/CmsWorkbench/index.module.scss","pages/x6/components/X6Workbench/index.module.scss","pages/x6/components/WfhRect/index.module.scss","pages/x6/components/WfhTriangle/index.module.scss","pages/x6/index.module.scss","pages/x6/components/Stencil/index.tsx","pages/x6/components/DropTarget/index.tsx","pages/x6/components/DragSource/index.tsx","pages/x6/components/Background/index.tsx","pages/x6/components/Alert/index.tsx","pages/x6/components/WfhInput/index.tsx","pages/x6/components/WfhInputNum/index.tsx","pages/x6/components/WfhSelect/index.tsx","pages/x6/components/WfhTable/index.tsx","pages/x6/components/CmsWorkbench/index.tsx","pages/x6/components/WfhRect/index.tsx","pages/x6/components/X6Workbench/Tools.tsx","pages/x6/components/WfhTriangle/index.tsx","pages/x6/components/X6Workbench/biz.tsx","pages/x6/components/X6Workbench/register.tsx","pages/x6/components/X6Workbench/index.tsx","pages/x6/frame.tsx"],"names":["module","exports","sidebar","title","gtitle","search","container","tools","tool","noresult","droptarget","dragsource","default","icon","name","background","alert","cmsworkbench","toolbar","active","toollist","business","save","content","workbench","pc","phone","unit","delete","component","config","preview","graph","selected","myport","root","mine","dndframe","Stencil","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","onSearch","e","searched","target","value","allToolList","state","newToolList","console","log","filter","_tool$name","_tool$id","indexOf","id","setState","toolList","toJS","prevToolList","_createClass","key","_this$props","DragSource","dragSource","bSearch","_this$props$title","_this$props$notFoundT","notFoundText","React","className","styles","placeholder","onChange","length","map","index","concat","Object","assign","nextProps","prevState","Immutable","is","defaultProps","ITEM_TYPE","DATA_SOURCE_TYPE","initialState","dataList","List","edgeList","current","Map","configs","dataSource","DRAG_NODE_DATA","reducers","action","type","payload","_payload$dataList","_payload$edgeList","_payload$current","_payload$configs","isList","isMap","API_DATA","push","currId","newDataList","data","newCurrent","_objectSpread","prevConfig","_defineProperty","DropTarget","_React$useReducer","_React$useReducer2","_slicedToArray","_React$useReducer2$","dispatch","initData","deleteData","setEdge","deleteEdge","setCurrent","setConfigs","Workbench","_props$accept","accept","X6_DROP_TARGET","_useDrop","useDrop","drop","item","monitor","uuid","node","clockseq","msecs","Date","getTime","nsecs","collect","demo","_useDrop2","collectedProps","ref","init","DefaultStencil","_props$type","toolComponent","_props$data","_useDrag","useDrag","end","drag","element","Background","componentType","bgStyle","backgroundColor","color","backgroundImage","image","style","BackgroundConfig","setConfig","_React$useState","_React$useState2","bgColor","setBgColor","thumbnail","Alert","text","AlertConfig","WfhInput","label","param","_props$required","required","_props$length","Number","MAX_SAFE_INTEGER","_props$holder","holder","undefined","Form","Item","rules","message","Input","maxLength","YES_OR_NO","CONFIG_LABELS","base","labelHolder","paramHolder","holderHolder","spec","requiredHolder","maxlength","maxlengthHolder","Config","_Form$useForm","useForm","form","paramList","setParam","setTimeout","other","fields","keys","reduce","prev","curr","tmp","onValuesChange","changedValue","allVAlues","labelCol","span","Card","Select","labelInValue","Option","InputNumber","min","WfhInputConfig","WfhInputNum","WfhInputNumConfig","WfhSelect","searchHolder","option","source","sourceHolder","select","selectHolder","inparam","inparamHolder","typeHolder","remote","remoteHolder","multiple","multipleHolder","allValues","WfhSelectConfig","WfhTable","WfhTableConfig","WITHOUT_RENDER_COMPONENTTYPE_LIST","MOCK_MAP","MOCK_MAP_CONRIG","CmsWorkbench","_current$toJS","currComponentType","currDisplayName","displayName","_ref","_ref$type","_ref$payload","bPreview","bPhone","get","currConfig","onDelete","onClick","_currConfig$current","validateFields","_component$componentT","includes","Component","savedConfig","WfhRect","_Component","count","onChangeData","setData","onChangeName","nextState","prevNode","getData","hasChanged","begin","now","duration","createElement","renderSimplified","renderClassic","ContextMenuTool","_ToolsView$ToolItem","_len","arguments","_args","Array","_key","apply","knob","timer","contextMenu","onMenu","args","_this$contextMenu","cell","edge","_this$graph","getSourceNode","getTargetNode","sourcePos","position","targetPos","clone","setSource","x","y","setTarget","addEdge","isNode","_this$graph2","_this$graph3","_this$graph4","outgoingEdges","getOutgoingEdges","incomingEdges","getIncomingEdges","clientX","clientY","pos","clientToGraph","forEach","removeCells","isEdge","_this$graph5","removeEdge","onMouseDown","window","updatePosition","toggleContextMenu","ToolsView","appendChild","Menu","visible","ReactDom","unmountComponentAtNode","document","removeEventListener","render","Dropdown","trigger","overlay","renderMenu","addEventListener","_this$knob","left","top","clearTimeout","cellView","on","onContextMenu","_get","_getPrototypeOf","prototype","off","ToolItem","tagName","isSVGElement","WfhTriangle","_this$props$node","_this$props$node$data","mode","_ReactShape","WfhDD","ReactShape","width","height","WfhDemoNode","_ReactShape2","_super2","WfhRectNode","_ReactShape3","_super3","portMarkup","Markup","getForeignObjectMarkup","ports","groups","in","attrs","fo","magnet","zIndex","out","items","group","WfhTriangleNode","_ReactShape4","_super4","Graph","registerNode","registerEdgeTool","registerNodeTool","MOCKDATA","nodes","age","info","from","edges","port","X6Workbench","_React$PureComponent","refContainer","onGetAllData","allData","toJSON","model","view","onSwitchMode","allNodes","getNodes","onLayout","_this$graph6","_this$graph7","rootNodes","getRootNodes","leafNodes","getLeafNodes","currentNodes","batchUpdate","level","result","sum","_this$graph8","getNeighbors","outgoing","_this$graph9","_this$graph10","_this$graph11","_this$graph12","_this$graph13","_this$graph14","_this$graph15","_this$graph16","_this$graph17","_this$graph18","_this$graph19","_this$graph20","_this$graph21","_this$graph22","grid","panning","enabled","modifiers","highlighting","magnetAvailable","padding","strokeWidth","stroke","connecting","snap","allowBlank","allowLoop","allowNode","highlight","validateMagnet","getAttribute","createEdge","Edge","validateConnection","targetCell","sourceCell","validateEdge","tmpSource","getTarget","tmpTarget","getSource","tmpEdges","interacting","onPortRendered","selectors","contentSelectors","foContent","ReactDOM","Tooltip","use","Clipboard","Selection","rubberband","strict","movable","showNodeSelectionBox","showEdgeSelectionBox","Snapline","shape","getTargetCellId","getSourceCellId","_ref2","addTools","_ref3","removeTools","_ref4","fill","_ref5","circle","r","prevProps","prevDataList","prevEdgeList","elemList","_this$graph23","_this$graph24","addNode","_this$graph25","targetList","elem","fromJSON","_this2","array","i","maxDegree","children","_this2$graph","DND_ITEM_LIST","MOCK_TOO_LIST","Frame","stencilList","_match$params","_this$props$match","match","params","_this$state$stencilLi","DndProvider","backend","HTML5Backend","CMSWorkbench"],"mappings":"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","file":"static/js/8.20636690.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Stencil_sidebar__6-3NF\",\"title\":\"Stencil_title__1rEvH\",\"gtitle\":\"Stencil_gtitle__3We5B\",\"search\":\"Stencil_search__1JJxM\",\"container\":\"Stencil_container__1PAXR\",\"tools\":\"Stencil_tools__3Sb1B\",\"tool\":\"Stencil_tool__2aukW\",\"noresult\":\"Stencil_noresult__jxg_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droptarget\":\"DropTarget_droptarget__3BpH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragsource\":\"DragSource_dragsource__3Up37\",\"default\":\"DragSource_default__37TDy\",\"icon\":\"DragSource_icon__azWm1\",\"name\":\"DragSource_name__3iYLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__3KzEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1YTmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmsworkbench\":\"CmsWorkbench_cmsworkbench__1oE2_\",\"toolbar\":\"CmsWorkbench_toolbar__2loCb\",\"active\":\"CmsWorkbench_active__J61_m\",\"toollist\":\"CmsWorkbench_toollist__3X4S3\",\"business\":\"CmsWorkbench_business__8Gubz\",\"save\":\"CmsWorkbench_save__okfdQ\",\"content\":\"CmsWorkbench_content__3fzNt\",\"workbench\":\"CmsWorkbench_workbench__3-YoO\",\"pc\":\"CmsWorkbench_pc__2rUXF\",\"phone\":\"CmsWorkbench_phone__mqcmh\",\"unit\":\"CmsWorkbench_unit__1kQU3\",\"delete\":\"CmsWorkbench_delete__2IF-e\",\"component\":\"CmsWorkbench_component__1_zDn\",\"config\":\"CmsWorkbench_config__3KTNu\",\"preview\":\"CmsWorkbench_preview__3Ofc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"X6Workbench_container__2W2GH\",\"toolbar\":\"X6Workbench_toolbar__38IAD\",\"graph\":\"X6Workbench_graph___Ojbu\",\"selected\":\"X6Workbench_selected__efbet\",\"myport\":\"X6Workbench_myport__AQypD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WfhRect_root__3qnWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"WfhTriangle_root__q5VVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"x6_container__1aBM4\",\"mine\":\"x6_mine__3RLXB\",\"dndframe\":\"x6_dndframe__380uv\",\"sidebar\":\"x6_sidebar__3KL-I\",\"content\":\"x6_content__YNsLB\"};","import * as React from 'react';\nimport Immutable from 'immutable';\nimport styles from './index.module.scss';\n\nexport interface IMetaData {\n  id: React.ReactText; // 该拖拽数据的应用内唯一标识，搜索\n  name?: React.ReactText; // 拖拽数据friendly name，搜索展示\n  type?: string | symbol; // item的Type类型，对应容器的type\n  thumbnail?: string; // 工具缩略图，展示\n  toolComponent?: React.FC | React.ComponentClass; // 工具自定义展示\n  group?: string; // 用于分组\n  data?: {\n    // 节点附带的业务数据\n    componentType: React.ReactText; // 组件类型\n    config: { [name: string]: any }; // 组件对应数据项\n    [property: string]: any;\n  };\n}\ninterface IStencilProps {\n  toolList: Immutable.List<IMetaData>;\n  dragSource: React.ComponentClass | React.FC<any>;\n  bSearch?: boolean; // 是否启用搜索功能\n  title?: string; // 工具栏标题\n  notFoundText?: string; // 未搜索到展示文案\n}\n/*\n待做：\n  还需要增加对异步数据的处理\n*/\nclass Stencil extends React.Component<IStencilProps, any> {\n  static defaultProps = {\n    toolList: [] as any,\n    bSearch: true\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    const { toolList } = nextProps;\n    const { prevToolList } = prevState;\n    if (!Immutable.is(prevToolList, toolList)) {\n      return {\n        toolList: toolList.toJS(),\n        allToolList: toolList.toJS(),\n        prevToolList: toolList\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props: IStencilProps) {\n    super(props);\n    this.state = {\n      toolList: this.props.toolList.toJS(),\n      allToolList: this.props.toolList.toJS(),\n      prevToolList: this.props.toolList\n    };\n  }\n\n  onSearch = (e: any) => {\n    const searched = e.target.value;\n    const { allToolList } = this.state;\n    let newToolList = allToolList;\n    console.log('search===>', newToolList);\n    if (searched) {\n      newToolList = allToolList.filter(\n        (tool: any) =>\n          tool.name?.indexOf(searched) > -1 || tool.id?.indexOf(searched) > -1\n      );\n    }\n\n    this.setState({\n      toolList: newToolList\n    });\n  };\n\n  render() {\n    const {\n      dragSource: DragSource,\n      bSearch,\n      title = '工具集',\n      notFoundText = '没有找到对应的模板'\n    } = this.props;\n    const { toolList } = this.state;\n\n    return (\n      <div className={styles.sidebar}>\n        {title ? <div className={styles.title}>{title}</div> : null}\n        {bSearch ? (\n          <div className={styles.search}>\n            <input placeholder=\"请输入搜索内容\" onChange={this.onSearch} />\n          </div>\n        ) : null}\n        {toolList.length > 0 ? (\n          <div className={styles.container}>\n            <div className={styles.gtitle}>stencils</div>\n            <div className={styles.tools}>\n              {toolList.map((tool: IMetaData, index: number) => {\n                return (\n                  <div className={styles.tool} key={`${tool.id}-${index}`}>\n                    <DragSource key={`${tool.id}-${index}`} {...tool} />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className={styles.noresult}>{notFoundText}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Stencil;\n","import * as React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styles from './index.module.scss';\nimport { v1 as uuid } from 'uuid';\nimport Immutable from 'immutable';\nimport * as t from '../types';\nenum ITEM_TYPE {\n  X6_DROP_TARGET = 'X6_DROP_TARGET'\n}\n\n// 定义数据来源类型\nenum DATA_SOURCE_TYPE {\n  DRAG_NODE_DATA = 'DRAG_NODE_DATA', // 拖拽节点数据,\n  // DRAG_EDGE_DATA = 'DRAG_EDGE_DATA', // 拖拽边数据，暂无\n  COPY_EDGE_DATA = 'COPY_NODE_DATA', // 拷贝边数据\n  API_DATA = 'API_DATA', // 接口产生的批量数据,\n  OTHER_DATA = 'OTHER_DATA'\n}\n\ninterface IDropTargetProps {\n  accept: string[]; // 可以接收的ITEM\n  workbench?: React.ComponentClass<any, any> | React.FC<any> | any;\n}\n\ninterface IInitialState {\n  dataList: Immutable.List<t.IComponent>;\n  edgeList: Immutable.List<any>;\n  current: Immutable.Map<string, any>;\n  configs: Immutable.Map<string, any>;\n  dataSource: DATA_SOURCE_TYPE;\n}\n\nconst initialState: IInitialState = {\n  dataList: Immutable.List([]),\n  edgeList: Immutable.List([]),\n  current: Immutable.Map({}),\n  configs: Immutable.Map({}),\n  dataSource: DATA_SOURCE_TYPE.DRAG_NODE_DATA\n};\n\nfunction reducers(state: any, action: any) {\n  const { type, payload } = action;\n  switch (type) {\n    case 'init': {\n      const {\n        dataList = [],\n        edgeList = [],\n        current = {},\n        configs = {}\n      } = payload;\n\n      return {\n        dataList: Immutable.List.isList(dataList)\n          ? dataList\n          : Immutable.List(dataList),\n        edgeList: Immutable.List.isList(edgeList)\n          ? edgeList\n          : Immutable.List(edgeList),\n        current: Immutable.Map.isMap(current)\n          ? current\n          : Immutable.Map(current),\n        configs: Immutable.Map.isMap(configs)\n          ? configs\n          : Immutable.Map(configs),\n        dataSource: DATA_SOURCE_TYPE.API_DATA\n      };\n    }\n    case 'drop': {\n      const { dataList, edgeList, configs } = state;\n      return {\n        dataList: dataList.push(payload),\n        edgeList,\n        current: Immutable.Map(payload),\n        configs,\n        dataSource: DATA_SOURCE_TYPE.DRAG_NODE_DATA\n      };\n    }\n    case 'deleteData': {\n      const { current, configs, dataList } = state;\n      const { id: currId } = current;\n      const newDataList = dataList.filter((data: any) => data.id !== currId);\n      delete configs[currId];\n      const newCurrent = newDataList[0];\n\n      return {\n        ...state,\n        dataList: newDataList,\n        current: newCurrent,\n        configs: {\n          ...configs\n        }\n      };\n    }\n    case 'edge': {\n      return state;\n    }\n    case 'deleteEdge': {\n      return state;\n    }\n    case 'current': {\n      return {\n        ...state,\n        current: Immutable.Map(payload)\n      };\n    }\n    case 'configs': {\n      const { configs } = state;\n      const { id, config } = payload;\n      const prevConfig = configs[id] || {};\n      return {\n        ...state,\n        configs: {\n          ...configs,\n          [id]: {\n            ...prevConfig,\n            ...config\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction DropTarget(props: IDropTargetProps) {\n  const [{ dataList, edgeList, current, configs, dataSource }, dispatch] =\n    React.useReducer(reducers, initialState);\n  const initData = React.useCallback((payload: any) => {\n    dispatch({\n      type: 'init',\n      payload\n    });\n  }, []);\n  // const setData = React.useCallback((payload) => {\n  //   dispatch({\n  //     type: 'drop',\n  //     payload\n  //   });\n  // }, []);\n  const deleteData = React.useCallback(() => {\n    dispatch({\n      type: 'deleteData'\n    });\n  }, []);\n  const setEdge = React.useCallback((payload: any) => {\n    dispatch({\n      type: 'edge',\n      payload\n    });\n  }, []);\n  const deleteEdge = React.useCallback((payload: any) => {\n    dispatch({\n      type: 'deleteEdge',\n      payload\n    });\n  }, []);\n\n  const setCurrent = React.useCallback((payload: any) => {\n    dispatch({\n      type: 'current',\n      payload\n    });\n  }, []);\n  const setConfigs = React.useCallback((payload: any) => {\n    dispatch({\n      type: 'configs',\n      payload\n    });\n  }, []);\n  console.log('dropTarget=====configs====>', configs);\n\n  const { workbench: Workbench, accept = [ITEM_TYPE.X6_DROP_TARGET] } = props;\n  const [collectedProps, drop] = useDrop(() => {\n    return {\n      accept,\n      drop: (item: any, monitor: any) => {\n        const id = uuid({\n          node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n          clockseq: 0x1234,\n          msecs: new Date().getTime(),\n          nsecs: 5678\n        });\n        dispatch({\n          type: 'drop',\n          payload: {\n            id,\n            ...item\n          }\n        });\n        return {};\n      },\n      collect: (monitor) => {\n        return {\n          // dataSource: DATA_SOURCE_TYPE.DRAG_DATA\n          demo: 'xxxx'\n        };\n      }\n    };\n  });\n\n  return (\n    <div ref={drop} className={styles.droptarget}>\n      <Workbench\n        init={initData}\n        dataList={dataList}\n        dataSource={dataSource}\n        // setData={setData}\n        deleteData={deleteData}\n        edgeList={edgeList}\n        setEdge={setEdge}\n        deleteEdge={deleteEdge}\n        current={current}\n        setCurrent={setCurrent}\n        configs={configs}\n        setConfigs={setConfigs}\n        {...collectedProps}\n      />\n    </div>\n  );\n}\n\nexport default DropTarget;\n","import * as React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styles from './index.module.scss';\nenum ITEM_TYPE {\n  X6_DROP_TARGET = 'X6_DROP_TARGET'\n}\n\ninterface IBusinessData {\n  componentType: string; // 对应组件类型\n  config: { [name: string]: any };\n  [property: string]: any;\n}\ninterface IDragSourceProps {\n  type?: ITEM_TYPE;\n  name: React.ReactText;\n  toolComponent?: React.ReactChild; // 工具展示成自定义组件形式\n  className?: string;\n  style?: { [property: string]: any };\n  data?: IBusinessData; // 传递给工作台的数据\n}\n\nfunction DefaultStencil(props: any) {\n  return (\n    <div className={styles.default}>\n      <div className={styles.icon} />\n      <div className={styles.name}>{props.name}</div>\n    </div>\n  );\n}\n\nfunction DragSource(props: IDragSourceProps) {\n  const {\n    type = ITEM_TYPE.X6_DROP_TARGET,\n    name,\n    toolComponent, // 当前组件使用\n    data = {} // 要传递的数据\n  } = props;\n  const [, drag] = useDrag(() => {\n    console.log('useDrag-----data=======>', data);\n\n    return {\n      type,\n      item: {\n        // 被传递的数据\n        ...data\n      },\n      end: () => {},\n      collect: (monitor) => {\n        return {\n          demo: 'demo'\n        };\n      }\n    };\n  });\n  let element: any = <DefaultStencil name={name} />;\n  if (toolComponent) {\n    element = toolComponent;\n  }\n  return (\n    <div className={styles.dragsource} ref={drag}>\n      {element}\n    </div>\n  );\n}\n\nexport default DragSource;\n","import * as React from 'react';\nimport styles from './index.module.scss';\nimport * as t from '../types';\n\ninterface IBackground extends t.IComponent {\n  color?: string;\n  image?: string;\n}\n\nexport function Background(props: IBackground) {\n  const { componentType } = props;\n  if (componentType !== Background.componentType) {\n    return null;\n  }\n\n  const bgStyle = {\n    backgroundColor: props.color,\n    backgroundImage: props.image\n  };\n  return <div className={styles.background} style={bgStyle}></div>;\n}\n\nBackground.thumbnail = '背景色';\nBackground.componentType = 'background';\nBackground.title = '背景色';\n\nexport function BackgroundConfig(props: t.IConfig) {\n  const { color, setConfig } = props;\n  const [bgColor, setBgColor] = React.useState(color || '');\n  // const [, setBgImage] = React.useState(image);\n\n  function onChange(e: any) {\n    setConfig('color', e.target.value);\n    setBgColor(e.target.value);\n  }\n\n  return (\n    <div>\n      <span>Background</span>\n      <input\n        value={bgColor}\n        onChange={React.useCallback(onChange, [])}\n        placeholder=\"请输入六位颜色值\"\n      />\n    </div>\n  );\n}\n\nBackgroundConfig.componentType = 'background';\n","import * as React from 'react';\nimport styles from './index.module.scss';\n\ninterface IAlert {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function Alert(props: IAlert) {\n  const { text } = props;\n  return <div className={styles.alert}>{text}</div>;\n}\n\nAlert.thumbnail = '警告信息';\nAlert.componentType = 'alert';\nAlert.title = '警告信息';\n\nexport function AlertConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== Alert.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>Alert</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nAlertConfig.componentType = 'alert';\n","import * as React from 'react';\nimport { Card, Form, Input, Select, InputNumber } from 'antd';\n\ninterface IInput {\n  id: React.ReactText;\n  componentType: string;\n  label: string;\n  param: string;\n  holder?: string;\n  required?: any;\n  length?: number;\n}\n\nexport function WfhInput(props: IInput) {\n  console.log('WfhInput====>', props);\n  const {\n    label,\n    param,\n    required = {},\n    length = Number.MAX_SAFE_INTEGER,\n    holder = undefined\n  } = props;\n  return (\n    <Form.Item\n      label={label}\n      name={param ? param : 'name'}\n      rules={[\n        {\n          required: required.value === '是',\n          message: `${label}是必填字段`\n        }\n      ]}>\n      <Input maxLength={length} placeholder={holder} />\n    </Form.Item>\n  );\n}\n\nWfhInput.thumbnail = '单行文本';\nWfhInput.componentType = 'wfhinput';\nWfhInput.title = '单行文本';\n\nconst YES_OR_NO = [\n  {\n    label: '是',\n    value: '是'\n  },\n  {\n    label: '否',\n    value: '否'\n  }\n];\n\nconst CONFIG_LABELS = {\n  title: 'WfhInput组件属性',\n  base: '基础属性',\n  label: '标题',\n  labelHolder: '请输入标题',\n  param: '对应入参',\n  paramHolder: '请选择对应入参',\n  holder: '占位提示',\n  holderHolder: '请输入占位提示',\n  spec: '校验属性',\n  required: '必填',\n  requiredHolder: '请选择是否必填',\n  maxlength: '最大长度',\n  maxlengthHolder: '请输入最大长度'\n};\n\n/*\n    Config必须实现内容：\n    1、将当前form实例透传给父组件，用于校验\n    2、使用受控组件，做实时预览\n  */\nfunction Config(props: any, ref: any) {\n  const [form] = Form.useForm();\n  React.useImperativeHandle(ref, () => ({\n    form: form\n  }));\n  const [paramList, setParam] = React.useState([] as any);\n  React.useEffect(() => {\n    setTimeout(() => {\n      const paramList: any[] = [\n        {\n          label: 'uid',\n          value: 'uid',\n          other: '1'\n        },\n        {\n          label: 'name',\n          value: 'name',\n          other: '2'\n        },\n        {\n          label: 'age',\n          value: 'age',\n          other: '3'\n        }\n      ];\n      setParam(paramList);\n    }, 1000);\n  }, []);\n  const { config, setConfig, componentType } = props;\n  if (componentType !== WfhInput.componentType) {\n    return null;\n  }\n  const fields = Object.keys(config).reduce((prev: any[], curr) => {\n    const tmp = {\n      name: [curr],\n      value: config[curr]\n    };\n\n    prev.push(tmp);\n\n    return prev;\n  }, []);\n\n  function onValuesChange(changedValue: any, allVAlues: any) {\n    const key = Object.keys(changedValue)[0];\n    setConfig(key, changedValue[key]);\n  }\n  return (\n    <Form\n      fields={fields}\n      form={form}\n      onValuesChange={onValuesChange}\n      labelCol={{ span: 6 }}>\n      <Card title={CONFIG_LABELS.title}>\n        <h3>{CONFIG_LABELS.base}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.label}\n          name=\"label\"\n          rules={[{ required: true, message: CONFIG_LABELS.labelHolder }]}>\n          <Input maxLength={10} placeholder={CONFIG_LABELS.labelHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.param}\n          name=\"param\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.paramHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.paramHolder}>\n            {paramList.map((param: any) => (\n              <Select.Option key={param.value} value={param.value}>\n                {param.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.holder} name=\"holder\">\n          <Input maxLength={20} placeholder={CONFIG_LABELS.holderHolder} />\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item label={CONFIG_LABELS.required} name=\"required\">\n          <Select labelInValue placeholder={CONFIG_LABELS.requiredHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.maxlength} name=\"length\">\n          <InputNumber min={0} placeholder={CONFIG_LABELS.maxlengthHolder} />\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n}\n\nexport const WfhInputConfig = React.forwardRef(Config);\n","import * as React from 'react';\n// import styles from './index.module.scss';\n\ninterface IInputNum {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhInputNum(props: IInputNum) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhInputNum.thumbnail = '数值输入';\nWfhInputNum.componentType = 'wfhinputnum';\nWfhInputNum.title = '数值输入';\n\nexport function WfhInputNumConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== WfhInputNum.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>WfhInputNum</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nWfhInputNumConfig.componentType = 'input';\n","import * as React from 'react';\nimport { Card, Form, Input, Select } from 'antd';\n\ninterface ISelect {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhSelect(props: ISelect) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhSelect.thumbnail = '下拉框';\nWfhSelect.componentType = 'wfhselect';\nWfhSelect.title = '下拉框';\n\nconst YES_OR_NO = [\n  {\n    label: '是',\n    value: '是'\n  },\n  {\n    label: '否',\n    value: '否'\n  }\n];\n\nconst CONFIG_LABELS = {\n  title: 'WfhSelect组件属性',\n  base: '基础属性', //基础属性域\n  label: '标题',\n  labelHolder: '请输入标题',\n  param: '对应入参',\n  paramHolder: '请选择对应入参',\n  holder: '占位提示',\n  holderHolder: '请输入占位提示',\n  search: '搜索',\n  searchHolder: '请配置是否支持搜索',\n  spec: '校验属性', //校验属性域\n  required: '是否必填',\n  requiredHolder: '请选择是否必填',\n  option: '选项属性', //选项属性域\n  source: '数据源',\n  sourceHolder: '请输入数据源',\n  select: '选项字段',\n  selectHolder: '请配置选项字段',\n  inparam: '入参字段',\n  inparamHolder: '请配置入参字段',\n  type: '选项类型',\n  typeHolder: '请配置选项类型',\n  remote: '远程数据源',\n  remoteHolder: '请配置远程数据源',\n  multiple: '是否多选',\n  multipleHolder: '请配置是否支持多选'\n};\nexport function Config(props: any, ref: any) {\n  const [form] = Form.useForm();\n  const { setConfig, componentType } = props;\n  React.useImperativeHandle(ref, () => ({\n    form\n  }));\n  const onValuesChange = React.useCallback(\n    (changedValue: any, allValues: any) => {\n      const key = Object.keys(changedValue)[0];\n      setConfig(key, changedValue[key]);\n    },\n    [setConfig]\n  );\n  const [paramList, setParam] = React.useState([] as any);\n  React.useEffect(() => {\n    setTimeout(() => {\n      const paramList: any[] = [\n        {\n          label: 'uid',\n          value: 'uid',\n          other: '1'\n        },\n        {\n          label: 'name',\n          value: 'name',\n          other: '2'\n        },\n        {\n          label: 'age',\n          value: 'age',\n          other: '3'\n        }\n      ];\n      setParam(paramList);\n    }, 1000);\n  }, []);\n\n  if (componentType !== WfhSelect.componentType) {\n    return null;\n  }\n\n  return (\n    <Form onValuesChange={onValuesChange} labelCol={{ span: 6 }}>\n      <Card title={CONFIG_LABELS.title}>\n        <h3>{CONFIG_LABELS.base}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.label}\n          name=\"label\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.multipleHolder\n            }\n          ]}>\n          <Input maxLength={10} placeholder={CONFIG_LABELS.labelHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.param}\n          name=\"param\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.multipleHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.paramHolder}>\n            {paramList.map((param: any) => (\n              <Select.Option key={param.value} value={param.value}>\n                {param.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.holder} name=\"holder\">\n          <Input maxLength={20} placeholder={CONFIG_LABELS.holderHolder} />\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.search}>\n          <Select\n            labelInValue\n            placeholder={CONFIG_LABELS.searchHolder}></Select>\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.source}\n          name=\"source\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.sourceHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.sourceHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.select}\n          name=\"select\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.selectHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.selectHolder} />\n        </Form.Item>\n        <Form.Item\n          label={CONFIG_LABELS.inparam}\n          name=\"inparam\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.inparamHolder\n            }\n          ]}>\n          <Input placeholder={CONFIG_LABELS.inparamHolder} />\n        </Form.Item>\n        <Form.Item label={CONFIG_LABELS.multiple} name=\"multipe\">\n          <Select labelInValue placeholder={CONFIG_LABELS.multipleHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <h3>{CONFIG_LABELS.spec}</h3>\n        <Form.Item\n          label={CONFIG_LABELS.required}\n          name=\"required\"\n          rules={[\n            {\n              required: true,\n              message: CONFIG_LABELS.requiredHolder\n            }\n          ]}>\n          <Select labelInValue placeholder={CONFIG_LABELS.requiredHolder}>\n            {YES_OR_NO.map((item) => (\n              <Select.Option key={item.value} value={item.value}>\n                {item.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Card>\n    </Form>\n  );\n}\n\nexport const WfhSelectConfig = React.forwardRef(Config);\n","import * as React from 'react';\n// import styles from './index.module.scss';\n\ninterface ITable {\n  id: React.ReactText;\n  componentType: string;\n  text: string;\n}\n\nexport function WfhTable(props: ITable) {\n  const { text } = props;\n  return <div>{text}</div>;\n}\n\nWfhTable.thumbnail = '表格';\nWfhTable.componentType = 'wfhtable';\nWfhTable.title = '表格';\n\nexport function WfhTableConfig(props: any) {\n  const { text, setConfig, componentType } = props;\n  if (componentType !== WfhTable.componentType) {\n    return null;\n  }\n\n  function onChange(e: any) {\n    setConfig('text', e.target.value);\n  }\n\n  return (\n    <div>\n      <span>WfhTable</span>\n      <input value={text} onChange={onChange} placeholder=\"请输入警告文档\" />\n    </div>\n  );\n}\nWfhTableConfig.componentType = 'input';\n","import * as React from 'react';\nimport { Background, BackgroundConfig } from '../Background';\nimport { Alert, AlertConfig } from '../Alert';\nimport { WfhInput, WfhInputConfig } from '../WfhInput';\nimport { WfhInputNum, WfhInputNumConfig } from '../WfhInputNum';\nimport { WfhSelect, WfhSelectConfig } from '../WfhSelect';\nimport { WfhTable, WfhTableConfig } from '../WfhTable';\nimport styles from './index.module.scss';\n\nimport * as t from '../types';\n// 不需要渲染实体的组件\nconst WITHOUT_RENDER_COMPONENTTYPE_LIST = ['background'];\n\ninterface ICmsWorkbench extends t.IWorkbench {}\n\nconst MOCK_MAP = new Map<string, React.ComponentClass | React.FC<any>>([\n  [Background.componentType, Background],\n  [Alert.componentType, Alert],\n  [WfhInput.componentType, WfhInput],\n  [WfhInputNum.componentType, WfhInputNum],\n  [WfhSelect.componentType, WfhSelect],\n  [WfhTable.componentType, WfhTable]\n]);\n\nconst MOCK_MAP_CONRIG = new Map<string, React.ComponentClass | React.FC<any>>([\n  [Background.componentType, BackgroundConfig],\n  [Alert.componentType, AlertConfig],\n  [WfhInput.componentType, WfhInputConfig],\n  [WfhInputNum.componentType, WfhInputNumConfig],\n  [WfhSelect.componentType, WfhSelectConfig],\n  [WfhTable.componentType, WfhTableConfig]\n]);\n\nfunction CmsWorkbench(props: ICmsWorkbench) {\n  const { dataList, deleteData, current, setCurrent, configs, setConfigs } =\n    props;\n  const {\n    id: currId,\n    componentType: currComponentType,\n    displayName: currDisplayName\n  } = current.toJS();\n\n  console.log('cmsworkbench====>', props);\n\n  const [{ bPreview, bPhone }, dispatch] = React.useReducer(\n    (state: any, { type = '', payload = false }) => {\n      switch (type) {\n        case 'preview': {\n          return {\n            ...state,\n            bPreview: payload\n          };\n        }\n        case 'phone': {\n          return {\n            ...state,\n            bPhone: payload\n          };\n        }\n        default:\n          return state;\n      }\n    },\n    {\n      bPreview: false,\n      bPhone: false\n    }\n  );\n\n  let Config: any = MOCK_MAP_CONRIG.get(currComponentType);\n  const currConfig: any = React.useRef(null);\n  const config = configs.toJS()[currId] || {};\n  const bgStyle: any = {};\n  if (config.color) {\n    bgStyle.backgroundColor = config.color;\n  }\n  if (config.image) {\n    bgStyle.backgroundImage = config.image;\n  }\n\n  function setConfig(name: string, value: any) {\n    setConfigs({\n      id: currId,\n      config: {\n        [name]: value\n      }\n    });\n  }\n\n  function onDelete() {\n    deleteData();\n  }\n\n  function onPreview() {\n    dispatch({\n      type: 'preview',\n      payload: true\n    });\n  }\n\n  function onPhone() {\n    dispatch({\n      type: 'phone',\n      payload: !bPhone\n    });\n  }\n\n  function onSave() {\n    if (currConfig) {\n      currConfig.current?.form.validateFields();\n      console.log('workbench-config====>', config);\n    }\n  }\n\n  return (\n    <div className={styles.cmsworkbench}>\n      <div className={styles.toolbar}>\n        <div className={styles.toollist}>\n          <div onClick={onPhone} className={bPhone ? styles.active : ''}>\n            手机\n          </div>\n          <div onClick={onPreview}>预览</div>\n        </div>\n        <div className={styles.business}>\n          <div className={styles.save} onClick={onSave}>\n            保存\n          </div>\n        </div>\n      </div>\n      <div className={styles.content}>\n        <div className={styles.workbench} style={bgStyle}>\n          <div className={bPhone ? styles.phone : styles.pc}>\n            {dataList.toJS().map((component: any, index: number) => {\n              const { componentType = '', id } = component;\n              if (WITHOUT_RENDER_COMPONENTTYPE_LIST.includes(componentType)) {\n                return null;\n              } else {\n                const Component = MOCK_MAP.get(componentType);\n                const savedConfig = configs[id];\n                return Component ? (\n                  <div\n                    className={styles.unit}\n                    key={`${component.componentType}-${index}`}\n                    onClick={() => setCurrent(component)}>\n                    {currId === id ? (\n                      <div className={styles.delete} onClick={onDelete}>\n                        删除\n                      </div>\n                    ) : null}\n                    <div className={styles.component}>\n                      <Component {...savedConfig} />\n                    </div>\n                  </div>\n                ) : null;\n              }\n            })}\n          </div>\n        </div>\n        <div className={styles.config}>\n          {Config ? (\n            <Config\n              key={currId}\n              ref={currConfig}\n              componentType={currComponentType}\n              displayName={currDisplayName}\n              config={config}\n              {...config}\n              setConfig={setConfig}\n            />\n          ) : null}\n        </div>\n      </div>\n      {bPreview ? <div className={styles.preview}>preview</div> : null}\n    </div>\n  );\n}\n\nexport default CmsWorkbench;\n","import React, { Component } from 'react';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport styles from './index.module.scss';\n\n/*\n  X6部分操作会引起画布的重绘；使用的React组件也会被重绘，可以通过SCU优化\n  React在画布重绘的过程中，可以保持自己的状态；\n  React可以通过节点的data提升状态，相当于传递props.node.data；也可以维护自己的state\n  X6的setData会做数据比较，没有变更不重绘\n*/\n\ninterface ICustomProps {\n  node?: ReactShape;\n}\nexport class WfhRect extends Component<ICustomProps, any> {\n  count: number;\n  static componentType: string; // 组件类型\n  static title: string;\n  constructor(props: any) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      name: 'default'\n    };\n    this.count = 0;\n  }\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    const prevNode = this.props.node;\n    const { node } = this.props;\n    console.log('SCU=====>', prevNode === node);\n    const data = node?.getData();\n    if (node?.hasChanged('data')) {\n      console.log('hasChange====>', data);\n\n      return true;\n    } else {\n      console.log('data didnot change====>', data);\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    // const { node } = this.props;\n    // const pl = JSON.parse(JSON.stringify(node));\n    const begin = Date.now();\n    // console.log('didMount', JSON.stringify(this.props.node));\n    const duration = Date.now() - begin;\n    console.log('begin===>', begin, duration);\n  }\n\n  compoenntDidUpdate() {\n    console.log('didUpdate', this.props);\n  }\n\n  onChangeData = () => {\n    const { node } = this.props;\n    console.log('node=======>', node);\n    // graph会做数据比较，没有更新数据，就不会重绘\n    node?.setData({ name: `changeData-${this.count++}` });\n  };\n\n  onChangeName = () => {\n    this.setState({\n      name: 666\n    });\n  };\n\n  renderClassic(id: string) {\n    // 经典视图\n    return (\n      <div className={styles.root}>\n        {`id:${id}`}\n        {/* <div onClick={this.onChangeData}>change data</div>\n        <div onClick={this.onChangeName}>change name</div>\n        {`MyShape-${this.state.name}-${this.props.node?.data?.name}`}\n        {`MyShape-`} */}\n      </div>\n    );\n  }\n\n  renderSimplified(id: string) {\n    // 精简视图\n    return <div>{`id: ${id}`}</div>;\n  }\n\n  render() {\n    const { node } = this.props;\n\n    const { type } = node?.getData() || {};\n    console.log('mode========>', type);\n    return type === 'simplified'\n      ? this.renderSimplified((node as any).id)\n      : this.renderClassic((node as any).id);\n  }\n}\n\nWfhRect.componentType = 'wfh-rect';\nWfhRect.title = 'rect';\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Dropdown, Menu } from 'antd';\nimport { ToolsView, EdgeView } from '@antv/x6';\nimport { Edge } from '@antv/x6';\n\ninterface ContextMenuToolOptions extends ToolsView.ToolItem.Options {\n  //   menu: React.ReactElement;\n  //   graph: Graph;\n}\n\nexport class ContextMenuTool extends ToolsView.ToolItem<\n  EdgeView,\n  ContextMenuToolOptions\n> {\n  private knob: HTMLDivElement | undefined;\n  private timer: number | undefined;\n  private contextMenu: any;\n\n  render() {\n    if (!this.knob) {\n      this.knob = ToolsView.createElement('div', false) as HTMLDivElement;\n      this.knob.style.position = 'absolute';\n      this.container.appendChild(this.knob);\n    }\n\n    return this;\n  }\n\n  onMenu = (args: any) => {\n    const { cell, edge } = this.contextMenu;\n    const { key } = args;\n    if (key === '1') {\n      const source = edge.getSourceNode();\n      const target = edge.getTargetNode();\n      const sourcePos = source?.position();\n      const targetPos = target?.position();\n      console.log('copy edge source and target=======>', source, target);\n      const clone = edge.clone();\n      // clone.disconnect({\n      //   silent: true\n      // });\n      clone.setSource({\n        x: sourcePos.x + 50,\n        y: sourcePos.y + 50\n      });\n      clone.setTarget({\n        x: targetPos.x + 50,\n        y: targetPos.y + 50\n      });\n      console.log('origin======>', edge);\n      console.log('clone=====>', clone);\n\n      this.graph?.addEdge(clone);\n\n      //   获取边的起始节点\n      // this.graph?.addEdge({\n      //   target: { x: 80, y: 50 },\n      //   source: { x: 160, y: 50 },\n      //   tools: [\n      //     {\n      //       name: 'contextmenu',\n      //       args: {\n      //         graph: this.graph\n      //       }\n      //     }\n      //   ]\n      // });\n    } else if (key === '2') {\n      const { e } = this.contextMenu;\n      if (cell.isNode()) {\n        const outgoingEdges = this.graph?.getOutgoingEdges(cell);\n        const incomingEdges = this.graph?.getIncomingEdges(cell);\n        const { clientX, clientY } = e;\n        const pos = this.graph.clientToGraph(clientX, clientY);\n        if (outgoingEdges) {\n          outgoingEdges.forEach((edge: Edge) => {\n            edge.setSource(pos);\n          });\n        }\n        if (incomingEdges) {\n          incomingEdges.forEach((edge: Edge) => {\n            edge.setTarget(pos);\n          });\n        }\n        /*\n          X6删除接口，默认删除节点，会删除关联的边。可以配置disconnectEdges，\n          会把关联边的target和source重置为(0,0)，且tools无法操作，目前没有找到有效方案。\n          但是可以提前切除边和节点的关系，然后删除节点\n        */\n        // this.graph?.removeNode(cell);\n        this.graph?.removeCells([cell]);\n      } else if (cell.isEdge()) {\n        this.graph?.removeEdge(cell);\n      }\n    }\n  };\n\n  renderMenu() {\n    return (\n      <Menu onClick={this.onMenu}>\n        <Menu.Item key=\"1\">复制</Menu.Item>\n        <Menu.Item key=\"2\">删除</Menu.Item>\n        <Menu.Item key=\"3\">3</Menu.Item>\n      </Menu>\n    );\n  }\n\n  private toggleContextMenu(visible: boolean) {\n    ReactDom.unmountComponentAtNode(this.knob as HTMLDivElement);\n    document.removeEventListener('mousedown', this.onMouseDown);\n\n    if (visible) {\n      ReactDom.render(\n        // @ts-ignore\n        <Dropdown\n          visible={true}\n          trigger={['contextMenu']}\n          overlay={this.renderMenu()}>\n          <span>123</span>\n        </Dropdown>,\n        this.knob as HTMLDivElement\n      );\n      document.addEventListener('mousedown', this.onMouseDown);\n    }\n  }\n\n  private updatePosition(e?: MouseEvent) {\n    const style = this.knob?.style || ({} as any);\n    if (e) {\n      const pos = this.graph.clientToGraph(e.clientX, e.clientY);\n      style.left = `${pos.x}px`;\n      style.top = `${pos.y}px`;\n    } else {\n      style.left = '-1000px';\n      style.top = '-1000px';\n    }\n  }\n\n  private onMouseDown = () => {\n    this.timer = window.setTimeout(() => {\n      this.updatePosition();\n      this.toggleContextMenu(false);\n    }, 200);\n  };\n\n  private onContextMenu(args: any) {\n    const { e } = args;\n    // 拿到当前节点信息\n    this.contextMenu = args;\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = 0;\n    }\n\n    this.updatePosition(e);\n    this.toggleContextMenu(true);\n  }\n\n  delegateEvents() {\n    //   注册监听事件\n    this.cellView.on('cell:contextmenu', this.onContextMenu, this);\n    return super.delegateEvents();\n  }\n\n  protected onRemove() {\n    this.cellView.off('cell:contextmenu', this.onContextMenu, this);\n  }\n}\n\nContextMenuTool.config({\n  tagName: 'div',\n  isSVGElement: false\n});\n","import React, { Component } from 'react';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport styles from './index.module.scss';\n\n/*\n  X6部分操作会引起画布的重绘；使用的React组件也会被重绘，可以通过SCU优化\n  React在画布重绘的过程中，可以保持自己的状态；\n  React可以通过节点的data提升状态，相当于传递props.node.data；也可以维护自己的state\n  X6的setData会做数据比较，没有变更不重绘\n*/\n\ninterface ICustomProps {\n  node?: ReactShape;\n}\nexport class WfhTriangle extends Component<ICustomProps, any> {\n  count: number;\n  static componentType: string;\n  static title: string;\n  constructor(props: any) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      name: 'default'\n    };\n    this.count = 0;\n  }\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    const prevNode = this.props.node;\n    const { node } = this.props;\n    console.log('SCU=====>', prevNode === node);\n    if (node?.hasChanged('data')) {\n      return true;\n    } else {\n      console.log('data didnot change');\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    // const { node } = this.props;\n    // const pl = JSON.parse(JSON.stringify(node));\n    const begin = Date.now();\n    // console.log('didMount', JSON.stringify(this.props.node));\n    const duration = Date.now() - begin;\n    console.log('begin===>', begin, duration);\n  }\n\n  compoenntDidUpdate() {\n    console.log('didUpdate', this.props);\n  }\n\n  onChangeData = () => {\n    const { node } = this.props;\n    console.log('node=======>', node);\n    // graph会做数据比较，没有更新数据，就不会重绘\n    node?.setData({ name: `changeData-${this.count++}` });\n  };\n\n  onChangeName = () => {\n    this.setState({\n      name: 666\n    });\n  };\n\n  renderClassic() {\n    return (\n      <div className={styles.root}>\n        <div onClick={this.onChangeData}>change data</div>\n        <div onClick={this.onChangeName}>change name</div>\n        {`Triangle-${this.state.name}-${this.props.node?.data?.name}`}\n        {`Triangle-`}\n      </div>\n    );\n  }\n\n  renderSimplified() {\n    return <div>simplified</div>;\n  }\n\n  render() {\n    const { node } = this.props;\n    const { mode } = node?.getData() || {};\n    console.log('mode========>', mode);\n    return mode === 'simplified'\n      ? this.renderSimplified()\n      : this.renderClassic();\n  }\n}\n\nWfhTriangle.componentType = 'wfh-triangle';\nWfhTriangle.title = 'triangle';\n","import React from 'react';\nimport { Markup } from '@antv/x6';\nimport { ReactShape } from '@antv/x6-react-shape';\nimport { WfhRect } from '../WfhRect';\nimport { WfhTriangle } from '../WfhTriangle';\n\n// 公共的业务接口\ninterface IGraphOperations {\n  getRegisterName(): string;\n  removeNode?(args: any): boolean;\n  canConnect?(args: string): boolean;\n}\n\nexport class WfhDD extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-DD';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect', 'wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\nWfhDD.config({\n  width: 200,\n  height: 80,\n  component: <div>wfhdd</div>\n});\n\n// XXX业务节点\nexport class WfhDemoNode extends ReactShape implements IGraphOperations {\n  mode: string = 'classic';\n  setMode(mode: string) {\n    this.mode = mode;\n  }\n  getRegisterName() {\n    return 'wfh-demo';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect', 'wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhDemoNode.config({\n  width: 200,\n  height: 80,\n  component: <WfhRect />\n});\n\n// 注册rect节点\nexport class WfhRectNode extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-rect';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-rect'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhRectNode.config({\n  width: 160,\n  height: 30,\n  // component: <WfhRect />,\n  portMarkup: [Markup.getForeignObjectMarkup()],\n  ports: {\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      }\n    },\n    items: [\n      { group: 'in', id: 'in1' },\n      { group: 'in', id: 'in2' },\n      { group: 'out', id: 'out1' },\n      { group: 'out', id: 'out2' }\n    ]\n  }\n});\n// 注册triangle节点\nexport class WfhTriangleNode extends ReactShape implements IGraphOperations {\n  getRegisterName() {\n    return 'wfh-triangle';\n  }\n\n  removeNode(args: any): boolean {\n    return true;\n  }\n\n  canConnect(args: string) {\n    const NOT_CONNECTTION_TYPE = ['wfh-triangle'];\n    if (NOT_CONNECTTION_TYPE.includes(args)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nWfhTriangleNode.config({\n  width: 160,\n  height: 30,\n  component: <WfhTriangle />,\n  portMarkup: [Markup.getForeignObjectMarkup()],\n  ports: {\n    groups: {\n      in: {\n        position: { name: 'top' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      },\n      out: {\n        position: { name: 'bottom' },\n        attrs: {\n          fo: {\n            width: 10,\n            height: 10,\n            x: -5,\n            y: -5,\n            magnet: 'true'\n          }\n        },\n        zIndex: 1\n      }\n    },\n    items: [\n      { group: 'in', id: 'in1' },\n      { group: 'out', id: 'out2' }\n    ]\n  }\n});\n","import { Graph } from '@antv/x6';\nimport { ContextMenuTool } from './Tools';\n\nimport { WfhDemoNode, WfhRectNode, WfhTriangleNode } from './biz';\n\n// 注册业务节点\nGraph.registerNode('wfh-demo', WfhDemoNode, true);\nGraph.registerNode('wfh-rect', WfhRectNode, true);\nGraph.registerNode('wfh-triangle', WfhTriangleNode, true);\n\n// 注册tools\n// 注册到系统中\nGraph.registerEdgeTool('contextmenu', ContextMenuTool, true);\nGraph.registerNodeTool('contextmenu', ContextMenuTool, true);\n","/*\n节点连线钩子触发顺序：\n  validateMagnet(args)【新边触发】【source】【触发edge:connect】【不触发edge:added】\n    args：\n      e:JQuery.Event\n      cell:\n      magnet:\n      view:\n  createEdge(args)【新边触发】【新建边实例，替换系统默认边】\n    args：\n      sourceCell\n      sourceMagnet\n      source\n  validateConnect(args)【新边触发】【移动边触发】【触发edge:\n    当鼠标放开的时候，不会连接到当前元素，否则会连接到当前元素；但也不会清除已经生成的边\n    args：\n      edge\n      edgeView\n      sourceView\n      targetView\n      sourcePort\n      targetPort\n      sourceMagnet\n      targetMagnet\n      sourceCell（把所有节点都扫描了3遍）\n      targetCell（把所有节点都扫描了3遍）\n      type：【source、target】\n  validateEdge(args)【新边触发】【移动边触发】【节点和边关系已经建立，返回false会触发edge:removed】\n    args：\n      edge\n      type：【source、target】\n      previous：指向当前type上一次的位置，可能是Cell也可能是坐标\n*/\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Graph, Edge } from '@antv/x6';\nimport { Clipboard } from '@antv/x6-plugin-clipboard';\nimport { Selection } from '@antv/x6-plugin-selection';\nimport { Snapline } from '@antv/x6-plugin-snapline';\nimport { Tooltip } from 'antd';\nimport Immutable from 'immutable';\nimport * as t from '../types';\nimport styles from './index.module.scss';\nimport '@antv/x6-react-shape';\nimport { WfhRect } from '../WfhRect';\n// import { WfhDD, WfhDemoNode } from './biz';\nimport './register';\ninterface IX6Workbench extends t.IWorkbench {}\n\nconst MOCKDATA = {\n  nodes: [\n    {\n      id: 'node1',\n      x: 40,\n      y: 40,\n      width: 80,\n      height: 40,\n      label: 'node1'\n    },\n    // {\n    //   id: 'node2',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node2'\n    // },\n    // {\n    //   id: 'node3',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node3'\n    // },\n    // {\n    //   id: 'node4',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node4'\n    // },\n    // {\n    //   id: 'node5',\n    //   x: 40,\n    //   y: 40,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node5'\n    // },\n    // {\n    //   id: 'node6',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node6'\n    // },\n    // {\n    //   id: 'node7',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node7'\n    // },\n    {\n      id: 'node8',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node8'\n    },\n    // {\n    //   id: 'node9',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node9'\n    // },\n    {\n      id: 'node10',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node10',\n      data: {\n        name: 'node10',\n        age: 123,\n        info: {\n          from: 'china'\n        }\n      }\n    }\n    // {\n    //   id: 'node11',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node11'\n    // },\n    // {\n    //   id: 'node12',\n    //   x: 160,\n    //   y: 180,\n    //   width: 80,\n    //   height: 40,\n    //   label: 'node12'\n    // }\n  ],\n  edges: [\n    {\n      source: {\n        cell: 'node1',\n        port: 'right'\n      },\n      target: {\n        cell: 'node10',\n        port: 'top'\n      },\n      data: {\n        age: 1,\n        info: {\n          name: '边'\n        }\n      }\n    },\n    {\n      source: {\n        cell: 'node1',\n        port: 'right'\n      },\n      target: {\n        cell: 'node8',\n        port: 'top'\n      }\n    }\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node3',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node9',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node1',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node2',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node4',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node5',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node6',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node2',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node7',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node9',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node11',\n    //     port: 'top'\n    //   }\n    // },\n    // {\n    //   source: {\n    //     cell: 'node9',\n    //     port: 'right'\n    //   },\n    //   target: {\n    //     cell: 'node12',\n    //     port: 'top'\n    //   }\n    // }\n  ]\n};\n\nclass X6Workbench extends React.PureComponent<IX6Workbench, any> {\n  container: HTMLDivElement | null = null;\n  graph: Graph | undefined;\n\n  refContainer = (container: HTMLDivElement) => {\n    this.container = container;\n  };\n\n  // 测试Demo\n  onChange = () => {\n    const { setCurrent } = this.props;\n    console.log('setCurrent');\n\n    setCurrent({ name: '' } as any);\n  };\n\n  /*\n    magnet\n    当magnet属性为true，标识该元素可以被链接，既在连线过程中可以当做连线的起点或终点\n  */\n\n  componentDidMount() {\n    // 屏蔽浏览器右键菜单，有兼容性问题《https://segmentfault.com/q/1010000004934881》\n    // document.oncontext = function () {\n    //   return false;\n    // };\n    // 此处请求需要回填的数据\n    const magnetAvailabilityHighlighter = {\n      name: 'stroke',\n      args: {\n        padding: 3,\n        attrs: {\n          strokeWidth: 3,\n          stroke: '#52c41a'\n        }\n      }\n    };\n    this.graph = new Graph({\n      container: this.container as HTMLDivElement,\n      grid: true,\n      panning: {\n        enabled: true,\n        modifiers: ['alt']\n      },\n      highlighting: {\n        // 设置高亮配置\n        magnetAvailable: magnetAvailabilityHighlighter\n      },\n      connecting: {\n        // 边的连接设定\n        snap: true,\n        allowBlank: true,\n        // allowMulti: true,\n        allowLoop: false,\n        allowNode: true,\n        // allowEdge: false,\n        // allowPort: true,\n        highlight: true,\n        // 【生成边触发】【connect交互】点击magnet，生成边\n        validateMagnet(args) {\n          const { magnet } = args;\n          console.log('validateMagnet=====>', args);\n          return magnet.getAttribute('port-group') !== 'in';\n        },\n        // 【生成边触发】【connect交互】连接的过程中创建新的边\n        createEdge: (args) => {\n          /*\n          sourceCell\n          sourceMagnet\n          source\n          */\n          console.log('createEdge=====>', args);\n          return new Edge({\n            tools: [\n              {\n                name: 'contextmenu'\n              }\n            ]\n          });\n        },\n        // 【生成边触发】【移动边触发】【connect交互】在移动边的时候判断连接是否有效\n        validateConnection(args: any) {\n          console.log('validateConnection======>', args);\n          /*\n          args:\n            edge\n            edgeView\n            sourceView\n            targetView\n            sourcePort\n            targetPort\n            sourceMagnet\n            targetMagnet\n            sourceCell\n            targetCell\n            type\n          */\n          const { targetCell, sourceCell, type } = args;\n          // const { model } = targetCell;\n          // const tmpEdges = model.getOutgoingEdges(targetCell);\n          if (type === 'source') {\n            console.log('sourceCell======>', sourceCell);\n          } else {\n            console.log('targetCell======>', targetCell);\n          }\n\n          // console.log('validateConnection======>', args, tmpEdges);\n          return true;\n          // const { sourceCell, targetCell, edge } = args;\n          // console.log('validateConnection=========>', edge);\n          // if (targetCell && sourceCell) {\n          //   //  cell.shape可以代替getRegisterName\n          //   if (sourceCell.canConnect(targetCell.getRegisterName())) {\n          //     return true;\n          //   }\n          // }\n\n          // return false;\n        },\n        // 【生成边触发】【移动边触发】【connect交互】当停止拖动边的时候根据 validateEdge 返回值来判断边是否生效，但是节点与边的关系已经生成\n        validateEdge(args: any) {\n          /*\n          args:\n            edge\n            type\n            previous\n          */\n\n          const { edge, type } = args;\n          const tmpSource = edge.getTarget();\n          const tmpTarget = edge.getSource();\n\n          const source = edge.getSourceNode();\n          const target = edge.getTargetNode();\n          if (type === 'source') {\n            if (!source) {\n              return false;\n            }\n          } else if (type === 'target') {\n            if (!target) {\n              return false;\n            }\n          }\n          const { model } = target;\n          const tmpEdges = model.getIncomingEdges(target);\n          console.log(\n            'validateEdge====>',\n            tmpEdges,\n            tmpSource,\n            tmpTarget,\n            args\n          );\n\n          return true;\n        }\n      },\n      interacting: {},\n      onPortRendered(args) {\n        const selectors = args.contentSelectors;\n        const container = selectors && selectors.foContent;\n        if (container) {\n          ReactDOM.render(\n            (\n              <Tooltip title=\"port\">\n                <div className={styles.myport} />\n              </Tooltip>\n            ) as any,\n            container as any\n          );\n        }\n      }\n    });\n    this.graph.use(\n      new Clipboard({\n        enabled: true\n      })\n    );\n    this.graph.use(\n      new Selection({\n        enabled: true,\n        // className: styles.ss, // 需要改写css类，实现样式覆盖\n        rubberband: true, // 启用框选（橡皮筋）\n        strict: true,\n        movable: true,\n        showNodeSelectionBox: true,\n        showEdgeSelectionBox: true\n      })\n    );\n    this.graph.use(\n      new Snapline({\n        enabled: true\n      })\n    );\n    // removeCell和removeCells会触发cell:removed,node:removed,edge:removed\n    this.graph?.on('cell:removed', function (args) {\n      console.log('cell:removed====>', args);\n    });\n    this.graph?.on('node:removed', function (args) {\n      console.log('node:removed====>', args);\n    });\n    this.graph?.on('edge:removed', function (args) {\n      console.log('edge:removed====>', args);\n    });\n    // 点选和框选Selection\n    // cell:selected（args: cell, options）, node:selected（args: cell, node, options）, edge:selected（args: cell, edge, options）\n    this.graph?.on('cell:selected', (args) => {\n      console.log('cell:selected====>', args);\n    });\n    this.graph?.on('node:selected', (args) => {\n      console.log('node:selected====>', args);\n    });\n    this.graph?.on('edge:selected', (args) => {\n      const { edge } = args;\n      const { target, source } = edge;\n      console.log('edge:selected====>', target, source);\n    });\n    // cell: unselected, node:unselected, edge:unselected\n    // 选中节点发生变更增加新选中，删除新选中时触发【删除选中触发一次】【新选中也会触发一次】【框选只选节点；单选才能选边】\n    this.graph?.on('selection:changed', (args) => {\n      /*\n        args:\n          removed: 取消选中的节点\n          added: 新选中的节点\n          seleced: 选中的节点\n          options: {}，设置项\n      */\n      console.log('selection:changed======>', args);\n      const { selected } = args;\n      const cell = selected[0];\n      if (cell?.isNode()) {\n        const clone = cell.clone();\n        console.log('cell=====>', cell.shape, clone.shape, cell, clone);\n      }\n      if (cell?.isEdge()) {\n        const clone = cell.clone();\n        console.log(\n          'cell========>',\n          cell.getTargetCellId(),\n          cell.getSourceCellId()\n        );\n        console.log(\n          'clone========>',\n          clone.getTargetCellId(),\n          clone.getSourceCellId()\n        );\n        cell.on('change:data', (args) => {\n          console.log('args======>', args);\n        });\n        cell.setData({\n          configs: {\n            name: 123\n          }\n        });\n        setTimeout(() => {\n          cell.setData({\n            configs: {\n              name: 'monkey'\n            }\n          });\n        }, 5000);\n      }\n      const { target, source } = (selected[0] as any) || ({} as any);\n      console.log('==========>', target, source);\n    });\n\n    // 添加边时触发【模板添加新边】【复制添加新边】\n    this.graph?.on('edge:added', (args) => {\n      console.log('edge:added===>', args);\n    });\n\n    // 删除边时触发【所有删除操作】\n    this.graph?.on('edge:removed', (args) => {\n      console.log('edge:removed=====>', args);\n    });\n\n    // 连接边时触发【连接链接桩产生新边】【移动已有的边】触发\n    this.graph?.on('edge:connected', (args) => {\n      const { edge } = args;\n      const { target, source } = edge;\n      console.log('edge:connected====>', target, source);\n    });\n\n    // 鼠标进入\n    this.graph?.on('node:mouseenter', ({ cell }) => {\n      cell.addTools([\n        {\n          name: 'contextmenu'\n        }\n      ]);\n    });\n\n    this.graph?.on('node:mouseleave', ({ cell }) => {\n      cell.removeTools();\n    });\n\n    this.graph?.on('edge:mouseenter', ({ cell }) => {\n      cell.addTools([\n        {\n          name: 'source-arrowhead'\n        },\n        {\n          name: 'target-arrowhead',\n          args: {\n            attrs: {\n              fill: 'red'\n            }\n          }\n        },\n        {\n          name: 'contextmenu'\n        }\n      ]);\n    });\n\n    this.graph?.on('edge:mouseleave', ({ cell }) => {\n      cell.removeTools();\n    });\n    // this.graph?.on('cell:selected', (args: any) => {\n    //   console.log('cell selected===>', args);\n    // });\n    // this.graph?.on('edge:selected', (args: any) => {\n    //   console.log('edge selected');\n    // });\n    // this.graph?.on('node:selected', (args: any) => {\n    //   console.log('node selected');\n    // });\n    // this.graph?.on('node:context', (args: any) => {\n    //   console.log('node context====》', args);\n    // });\n    // this.graph?.on('edge:context', (args: any) => {\n    //   console.log('edge context======>', args);\n    // });\n    // this.graph?.on('blank:context', (args: any) => {\n    //   console.log('blank context======>', args);\n    // });\n    // 动态添加/删除链接桩\n    // this.graph?.on('node:mouseenter', ({ cell }) => {\n    //   if (cell.isNode()) {\n    //     cell.addPorts([\n    //       {\n    //         id: 'top',\n    //         args: {\n    //           position: 'top'\n    //         },\n    //         attrs: {\n    //           circle: {\n    //             r: 6,\n    //             magnet: true,\n    //             stroke: '#31d0c6',\n    //             strokeWidth: 2,\n    //             fill: '#fff'\n    //           }\n    //         }\n    //       },\n    //       {\n    //         id: 'bottom',\n    //         // args: {\n    //         //   position: 'bottom'\n    //         // },\n    //         attrs: {\n    //           circle: {\n    //             r: 6,\n    //             magnet: true,\n    //             stroke: '#31d0c6',\n    //             strokeWidth: 2,\n    //             fill: '#fff'\n    //           }\n    //         }\n    //       }\n    //     ]);\n    //   }\n    // });\n    // this.graph?.on('node:mouseleave', ({ cell }) => {\n    //   if (cell.isNode()) {\n    //     cell.removePorts();\n    //   }\n    // });\n    const { init } = this.props;\n    setTimeout(() => {\n      const ports = [\n        {\n          id: 'top',\n          attrs: {\n            circle: {\n              r: 6,\n              magnet: true,\n              stroke: '#31d0c6',\n              strokeWidth: 2,\n              fill: '#fff'\n            }\n          }\n        },\n        {\n          id: 'right',\n          attrs: {\n            circle: {\n              r: 6,\n              magnet: true,\n              stroke: '#31d0c6',\n              strokeWidth: 2,\n              fill: '#fff'\n            }\n          }\n        }\n      ];\n\n      const nodes = MOCKDATA.nodes.map((node) => ({\n        ...node,\n        // tools,\n        ports\n      }));\n      const edges = MOCKDATA.edges.map((edge) => ({\n        ...edge,\n        shape: 'edge'\n      }));\n\n      init({\n        dataList: nodes,\n        edgeList: edges,\n        current: {},\n        configs: {}\n      });\n    }, 1000);\n  }\n\n  componentWillUpdate() {\n    console.log('will-update');\n  }\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    const { dataList, edgeList, dataSource, current } = this.props;\n    const prevDataList = prevProps.dataList;\n    const prevEdgeList = prevProps.edgeList;\n    if (\n      !Immutable.is(dataList, prevDataList) ||\n      !Immutable.is(edgeList, prevEdgeList)\n    ) {\n      console.log('didUpdate');\n      const elemList = dataList.toJS();\n      if (dataSource === 'DRAG_NODE_DATA') {\n        console.log('拖拽产生的数据=====>', current);\n        const tmp = current?.toJS();\n        const { id, componentType, title } = tmp;\n        const node = {\n          id,\n          label: title,\n          x: 20,\n          y: 80,\n          // width: 80, // 节点有默认的大小，此处可以不设置\n          // height: 40,\n          shape: componentType,\n          component: <WfhRect />\n        };\n        debugger;\n        this.graph?.addNode(node);\n        debugger;\n        this.graph?.addEdge({\n          target: { x: 10, y: 50 },\n          source: { x: 70, y: 50 }\n        });\n        debugger;\n      } else if (dataSource === 'COPY_EDGE_DATA') {\n        console.log('边拷贝数据');\n      } else {\n        const targetList = elemList.map((elem: any) => {\n          const { componentType } = elem;\n          if (componentType) {\n            return {\n              id: elem.id,\n              height: 40,\n              width: 80,\n              x: 80,\n              y: 80,\n              label: componentType\n            };\n          }\n\n          return {\n            ...elem,\n            shape: 'wfh-demo'\n          };\n        });\n\n        this.graph?.fromJSON({\n          nodes: targetList,\n          edges: edgeList?.toJS() as any\n        });\n        /*\n          继承Cell节点，不注册可以直接实例化使用\n          注册的作用就是：依赖注入\n        */\n        // this.graph?.addNode(new WfhDD());\n        // this.graph?.addNode(new WfhDemoNode());\n      }\n    }\n  }\n\n  onGetAllData = () => {\n    const allData = this.graph?.toJSON();\n    const model = this.graph?.model;\n    const view = this.graph?.view;\n    console.log('allData====>', allData, model, view);\n  };\n\n  onSwitchMode = () => {\n    const allNodes = this.graph?.getNodes();\n    allNodes?.forEach((node) => {\n      node.setData({\n        type: 'simplified'\n      });\n    });\n  };\n\n  computer(rootNodes: Node[]) {\n    let currentNodes = rootNodes || [];\n    const array = [];\n    let i = 0;\n    let maxDegree = 0;\n    while (currentNodes.length >= 1) {\n      array[i] = currentNodes.length;\n      i++;\n      const children = currentNodes.reduce((sum: Node[], curr: Node) => {\n        // 合并子节点\n        const result =\n          this.graph?.getNeighbors(curr as any, {\n            outgoing: true\n          }) || [];\n        // 计算最大度\n        maxDegree = maxDegree > result.length ? maxDegree : result.length;\n        // 合并\n        sum = sum.concat(result as any);\n\n        return sum;\n      }, []);\n\n      currentNodes = children;\n    }\n\n    return [array, maxDegree];\n  }\n\n  onLayout = () => {\n    // const allNodes = this.graph?.getNodes();\n    const rootNodes: Node[] = this.graph?.getRootNodes() || ([] as any);\n    const leafNodes = this.graph?.getLeafNodes() || [];\n    let currentNodes = rootNodes;\n    const ELEMENT_WIDTH = 110 + 20;\n    const ELEMENT_HEIGHT = 44 + 4;\n\n    console.log('leaf========>', leafNodes.length);\n    // const [array = [], maxDegree] = this.computer(rootNodes as any);\n    // const deep = (array as []).length;\n    // console.log('computer=========>', array, maxDegree);\n    this.graph?.batchUpdate(() => {\n      let level = 0;\n      /*eslint no-loop-func: \"off\"*/\n      while (currentNodes.length > 0) {\n        console.log('6666666======>', currentNodes);\n        const result = currentNodes.reduce(\n          (sum: Node[], node: any, index: number) => {\n            node.position(\n              0 + level * ELEMENT_WIDTH,\n              0 + index * ELEMENT_HEIGHT\n            );\n            const result = this.graph?.getNeighbors(node as any, {\n              outgoing: true\n            });\n            sum = sum.concat(result as any);\n            return sum;\n          },\n          []\n        );\n        level += 1;\n        currentNodes = result;\n      }\n    });\n  };\n  render() {\n    console.log('x6------render====>', this.props);\n    return (\n      <div className={styles.container}>\n        <div className={styles.toolbar}>\n          <button onClick={this.onChange}>dispatch</button>\n          <button onClick={this.onGetAllData}>获取数据</button>\n          <button onClick={this.onSwitchMode}>改变模式</button>\n          <button onClick={this.onLayout}>自动布局</button>\n        </div>\n        <div className={styles.graph} ref={this.refContainer} />\n        <div className={styles.config}>抽屉</div>\n      </div>\n    );\n  }\n}\n\nexport default X6Workbench;\n","import * as React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Stencil from './components/Stencil';\nimport DropTarget from './components/DropTarget';\nimport DragSource from './components/DragSource';\nimport CMSWorkbench from './components/CmsWorkbench';\nimport X6Workbench from './components/X6Workbench';\nimport { Alert } from './components/Alert';\nimport { Background } from './components/Background';\nimport { WfhInput } from './components/WfhInput';\nimport { WfhInputNum } from './components/WfhInputNum';\nimport { WfhSelect } from './components/WfhSelect';\nimport { WfhTable } from './components/WfhTable';\nimport { WfhRect } from './components/WfhRect';\nimport { WfhTriangle } from './components/WfhTriangle';\nimport Immutable from 'immutable';\nimport styles from './index.module.scss';\n\nconst DND_ITEM_LIST = ['CMS_DND_ITEM_TYPE', 'X6_DND_ITEM_TYPE'];\n/*\n  DragSource的Props\n*/\n\ninterface IAnyObj {\n  [name: string]: any;\n}\n\n// 组件接口\ninterface IComponent {\n  componentType: React.ReactText; // 组件类型\n  config: IAnyObj; // 组件对应数据项\n  [name: string]: any;\n}\ninterface IDragSourceProps {\n  id: React.ReactText;\n  name?: React.ReactText;\n  type: string | symbol;\n  thumbnail?: string;\n  toolComponent?: React.ComponentClass | React.FC;\n  data: IComponent;\n}\n\n/*\n  CMS数据：\n    警告信息\n    背景色\n    单行文本\n    数值输入\n    下拉框\n    表格\n    \n  x6数据：\n    触发\n      触发对象\n        客群\n      触发方式\n        定时触发\n        立即触发\n        行为触发\n        系统触发\n    流程控制\n      等待\n      条件\n      随机网关\n      并行网关\n      事件网关\n      执行子流程\n      对照组\n      结束\n      中间事件\n    策略\n      调用规则\n      调用模型\n    动作\n      通知渠道\n        风险统一调额调价V2\n        推送\n        短信\n        微信\n        人工外呼\n        邮件\n        AI外呼发送\n        AI外呼取消\n    数据产品\n      采集外部资信\n      变量整理\n\n\n*/\nconst MOCK_TOO_LIST: IDragSourceProps[] = [\n  {\n    id: WfhRect.title, // 用于搜索\n    name: WfhRect.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhRect.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhTriangle.title, // 用于搜索\n    name: WfhTriangle.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhTriangle.componentType,\n      config: {}\n    }\n  },\n  {\n    id: Alert.title, // 用于搜索\n    name: Alert.title, // 用于搜索\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: Alert.componentType,\n      config: {}\n    }\n  },\n  {\n    id: Background.title,\n    name: Background.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: Background.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhInput.title,\n    name: WfhInput.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhInput.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhInputNum.title,\n    name: WfhInputNum.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhInputNum.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhSelect.title,\n    name: WfhSelect.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhSelect.componentType,\n      config: {}\n    }\n  },\n  {\n    id: WfhTable.title,\n    name: WfhTable.title,\n    type: DND_ITEM_LIST[0],\n    data: {\n      componentType: WfhTable.componentType,\n      config: {}\n    }\n  }\n];\n\nclass Frame extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      stencilList: Immutable.List([])\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState((prevState: any) => {\n        return {\n          stencilList: Immutable.List(MOCK_TOO_LIST)\n        };\n      });\n    }, 1000);\n  }\n  render() {\n    const { match = {} } = this.props;\n    const type = match.params?.type || 'x6';\n    const { stencilList = [] } = this.state;\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className={styles.dndframe}>\n          <div className={styles.sidebar}>\n            <Stencil toolList={stencilList} dragSource={DragSource} />\n          </div>\n          <div className={styles.content}>\n            <DropTarget\n              accept={[DND_ITEM_LIST[0]]}\n              workbench={type === 'cms' ? CMSWorkbench : X6Workbench}\n            />\n          </div>\n        </div>\n      </DndProvider>\n    );\n  }\n}\n\nexport default Frame;\n"],"sourceRoot":""}