{"version":3,"sources":["pages/react/index.tsx"],"names":["Name","React","props","name","console","log","Age","Number","info","concat","first","second","NoProps","ReactDemo","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","call","onChangeInfo","newState","_objectSpread","state","setState","age","_createClass","key","value","_this2","_this$state","onClick"],"mappings":"gJA0BMA,EAAOC,OAAW,SAAcC,GACpC,IAAQC,EAASD,EAATC,KAER,OADAC,QAAQC,IAAI,mBACLJ,gBAAA,WAAME,KAGTG,EAAML,OAAW,SAAaC,GAElC,OADAE,QAAQC,IAAI,oBACLJ,gBAAA,WAAK,QAGRM,EAASN,OAAW,SAAaC,GACrC,IAAQM,EAASN,EAATM,KAER,OADAJ,QAAQC,IAAI,qBACLJ,gBAAA,mBAAAQ,OAAcD,EAAKE,MAAK,KAAAD,OAAID,EAAKG,WAGpCC,EAAUX,OAAW,SAAiBC,GAG1C,OAFAE,QAAQC,IAAI,yBAELJ,gBAAA,WAAK,cAGRY,EAAS,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACb,SAAAA,EAAYX,GAAe,IAAAgB,EASvB,OATuBC,YAAAC,KAAAP,IACzBK,EAAAF,EAAAK,KAAAD,KAAMlB,IAWRoB,aAAe,WACb,IAAMC,EAAQC,YAAA,GAAQN,EAAKO,OAC3BF,EAASf,KAAKE,MAAQ,EACtBa,EAASf,KAAKG,OAAS,EACvBO,EAAKQ,SAASH,IAddL,EAAKO,MAAQ,CACXtB,KAAM,UACNwB,IAAK,GACLnB,KAAM,CACJE,MAAO,EACPC,OAAQ,IAEVO,EAsDH,OArDAU,YAAAf,EAAA,EAAAgB,IAAA,SAAAC,MASD,WAAS,IAAAC,EAAAX,KACPY,EAA4BZ,KAAKK,MAAzBtB,EAAI6B,EAAJ7B,KAAMwB,EAAGK,EAAHL,IAAKnB,EAAIwB,EAAJxB,KAEnB,OADAJ,QAAQC,IAAI,mBAAoBe,KAAKK,OAEnCxB,gBAAA,WACEA,gBAAA,UAAQgC,QAAS,kBAAMF,EAAKL,SAAS,CAAEvB,KAAM,SAAUwB,IAAK,OAAO,cAGnE1B,gBAAA,UAAQgC,QAAS,kBAAMF,EAAKL,SAAS,CAAEvB,KAAM,cAAc,eAG3DF,gBAAA,UAAQgC,QAAS,kBAAMF,EAAKL,SAAS,CAAEC,IAAK,OAAO,cACnD1B,gBAAA,UAAQgC,QAASb,KAAKE,cAAc,eACpCrB,gBAAA,WAAME,GACNF,gBAAA,WAAM0B,GACN1B,gBAACD,EAAI,CAACG,KAAMA,IACZF,gBAACK,EAAG,CAACqB,IAAKA,IACV1B,gBAACM,EAAM,CAACC,KAAMA,IACdP,gBAACW,EAAO,WA0BbC,EAhEY,CAASZ,aAkETY","file":"static/js/20.6648e0b7.chunk.js","sourcesContent":["import * as React from 'react';\nimport Tabs, { TabPanel } from 'Components/Tabs';\nimport Hooks from './components/Hooks';\nimport ImperativeHandle from './components/Hooks/useImperativeHandle';\nimport UseState from './components/Hooks/useState';\nimport KeyTest from './components/KeyTest';\nimport SetStateTest from './components/SetStateTest';\n\n/*\n  只要父组件update，子组件无论是否通过props接收了父组件的state，都会被update\n    即使通过x.xx.xx修改深层级数据，只要父组件update且rerender，子组件就会rerender\n  可以通过memo优化，就会通过props的对比，选择性的rerender\n*/\ninterface IProps {\n  name: string;\n  age: number;\n}\ninterface IState {\n  name: string;\n  age: number;\n  info: {\n    first: number;\n    second: number;\n  };\n}\n\nconst Name = React.memo(function Name(props: any) {\n  const { name } = props;\n  console.log('wfh-Name-render');\n  return <div>{name}</div>;\n});\n\nconst Age = React.memo(function Age(props: any) {\n  console.log('wfh-Age---render');\n  return <div>12</div>;\n});\n\nconst Number = React.memo(function Num(props: any) {\n  const { info } = props;\n  console.log('wfh-info---render');\n  return <div>{`Info:${info.first}-${info.second}`}</div>;\n});\n\nconst NoProps = React.memo(function NoProps(props) {\n  console.log('wfh-NoProps----render');\n\n  return <div>no props</div>;\n});\n\nclass ReactDemo extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      name: 'default',\n      age: 12,\n      info: {\n        first: 1,\n        second: 2\n      }\n    };\n  }\n\n  onChangeInfo = () => {\n    const newState = { ...this.state };\n    newState.info.first = 8;\n    newState.info.second = 8;\n    this.setState(newState);\n  };\n\n  render() {\n    const { name, age, info } = this.state;\n    console.log('wfh--render====>', this.state);\n    return (\n      <div>\n        <button onClick={() => this.setState({ name: 'monkey', age: 16 })}>\n          change all\n        </button>\n        <button onClick={() => this.setState({ name: 'monkey1' })}>\n          change name\n        </button>\n        <button onClick={() => this.setState({ age: 18 })}>change age</button>\n        <button onClick={this.onChangeInfo}>change info</button>\n        <div>{name}</div>\n        <div>{age}</div>\n        <Name name={name} />\n        <Age age={age} />\n        <Number info={info} />\n        <NoProps />\n        {/* <Tabs defaultActiveName=\"hooks\">\n          <TabPanel key=\"@@keylist\" name=\"测试react中的key\" title=\"key-test\">\n            <KeyTest />\n          </TabPanel>\n          <TabPanel\n            key=\"@@setstate\"\n            name=\"测试react class的setState\"\n            title=\"setstate\">\n            <SetStateTest />\n          </TabPanel>\n          <TabPanel key=\"@@hooks\" name=\"hooks\" title=\"hooks\">\n            <Hooks name=\"monkey\" count={123} />\n          </TabPanel>\n          <TabPanel\n            key=\"@@imperativehandle\"\n            name=\"imperativehandle\"\n            title=\"useImperativeHandle\">\n            <ImperativeHandle />\n          </TabPanel>\n          <TabPanel key=\"@@useState\" name=\"useState\" title=\"useState\">\n            <UseState />\n          </TabPanel>\n        </Tabs> */}\n      </div>\n    );\n  }\n}\nexport default ReactDemo;\n"],"sourceRoot":""}