{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Text/index.tsx","components/Text/index.module.scss","components/Line/index.tsx","components/Card/index.tsx","components/Card/index.module.scss","components/Line/index.module.scss","pages/hooks/controller/actions.ts","pages/hooks/index.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","__webpack_require__","d","__webpack_exports__","SingleLineText","props","react__WEBPACK_IMPORTED_MODULE_2__","className","concat","styles","single","children","Text","numberOfLines","_props$style","style","rest","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","final","Number","assign","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","WebkitLineClamp","module","exports","text","limited-text","Line","react__WEBPACK_IMPORTED_MODULE_0__","_index_module_scss__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","line","content","Card","title","_props$children","_props$className","card","Boolean","cardline","bindActionCreators","changeName","name","type","t","payload","store","dispatch","connect","state","hooks","console","log","_React$useState","React","_React$useState2","slicedToArray","setName","_React$useState3","count","_React$useState4","setCount","react","onClick","actions"],"mappings":"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","file":"static/js/12.f548a78b.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n    CSS global：inherit、initial、unset\n    hyphens：[none, manual, auto](草案阶段)，连字符\n    word-break：[normal, break-all, keep-all，break-word(被弃用，作用同word-wrap,但仍然有效)]，1、断行处是否应该出现在一个词中\n        normal：Non-CJK文本在word中间不断行且换行，CJK文本断行\n        keep-all：Non-CJK文本在word中间不断行且换行，CJK文本不断行\n        break-all：Non-CJK文本在word中间断行且不换行，CJK文本断行\n\n        word-break：Non-CJK文本中的word中间断行且换行，CJK文本断行\n    word-wrap（overflow-wrap，别名是word-wrap）：[normal, anywhere, break-word]，1、控制长度超过一行的单词是否被拆分换行\n        normal（anywhere）：Non-CJK文本在word中间不断行且不换行（同keep-all）\n        break-word：Non-CJK文本在word中间断行且换行（同word-break）\n    white-space：[normal, nowrap, pre, pre-wrap, pre-line]，1、控制空白字符的展示；2、控制换行(主要用于CJK？)\n    text-overflow：[clip, ellipsis]\n*/\nimport * as React from 'react';\nimport styles from './index.module.scss';\n\n// 这个组件是个伪省略，指定高度时，在安卓手机上会露出很少的折行文本的顶部，单行建议使用SingleLineText\n\ninterface ISingleLineProps {\n    className?: string\n    children?: any\n}\nexport function SingleLineText(props: ISingleLineProps) {\n    return (\n        <span className={`${styles.single} ${props.className}`}>\n            {\n                props.children\n            }\n        </span>\n    )\n}\n\ninterface IProps {\n    numberOfLines?: number;\n    className?: string;\n    children?: React.ReactChild;\n    style?: any\n}\nfunction Text(props: IProps) {\n    const {\n        numberOfLines,\n        className,\n        children,\n        style = {},\n        ...rest\n    } = props;\n    const final = Number(numberOfLines) > 0\n        ? styles['limited-text']\n        : styles['text'];\n    return (\n        <span className={`${final} ${className || ''}`}\n            style={{ WebkitLineClamp: props.numberOfLines, ...style }}\n            {...rest}>\n            {\n                children\n            }\n        </span>\n    )\n}\n\nexport default Text;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__2LHWp\",\"limited-text\":\"Text_limited-text__EjOY1\",\"single\":\"Text_single__2tpgE\"};","/*\n    https://zhuanlan.zhihu.com/p/34908005\n    预备知识：\n        物理像素：屏幕分辨率\n        设备独立像素：点分辨率（CSS的px）\n        设备像素比：设备像素比 = 物理像素 / 设备独立像素\n    实现物理1px细线方案：\n\n    1、图片方案（border-image， background-image）：\n        优点：可以设置单条、多条表框\n        缺点：更换颜色样式麻烦，某些设备会模糊（确定不是图片缩放造成的？？？？？？）\n    2、box-shadow边框阴影模拟方案：\n        优点：代码少，兼容性好\n        缺点：边框有阴影，有色差\n    3、transform（伪元素，正常元素）方案：\n        构建一个伪元素border设为1px，缩放50%\n        优点：可以满足很多场景\n        缺点：transform缩放，线变糊\n        备注：正常元素模拟边框缩放，子元素也会被缩放，字体也会被缩放，很难还原字体，======边框也直接使用伪元素边框模拟，解决子元素缩放问题\n    4、border: 0.5px方案\n        优点：很完美\n        缺点：安卓与低版本IOS不适用,2014年，IOS8和OS X Yosemite支持0.5px边框\n*/ \nimport * as React from 'react';\nimport styles from './index.module.scss';\n\ninterface IProps {\n    className?: string;\n}\n\nexport default function Line(props: IProps) {\n    return (\n        <div className={styles.line}>\n            <span className={`${styles.content} ${props.className || ''}`}/>\n        </div>\n    )\n}","import * as React from \"react\"\nimport styles from \"./index.module.scss\"\n\ninterface IProps {\n    title?: string\n    children?: React.ReactNode\n    className?: string\n}\nfunction Card(props: IProps) {\n    const {\n        title,\n        children = null,\n        className = \"\"\n    } = props\n    return (\n        <div className={`flex flex-column ${styles.card} ${Boolean(className) ? className : \"\"}`}>\n            {\n                Boolean(title) ?\n                    <span className={styles.title}>\n                        {\n                            title\n                        }\n                    </span> : null\n            }\n            {\n                children\n            }\n        </div>\n    )\n}\n\nexport default Card","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3rpIc\",\"cardline\":\"Card_cardline__2UG-y\",\"title\":\"Card_title__1cpd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"Line_line__1VpsB\",\"content\":\"Line_content__Ol3v9\"};","import {\n    bindActionCreators,\n    ActionCreator,\n    AnyAction\n} from \"redux\"\nimport store from \"@/store\"\nimport * as t from \"./types\"\n\nconst changeName: ActionCreator<AnyAction> = (name: string) => {\n    return {\n        type: t.CHANGE_NAME,\n        payload: name\n    }\n}\n\nexport default bindActionCreators({\n    changeName\n}, store.dispatch)\n\n\n","/**\n * 1、性能优化是有成本的，成本大于收益，是ERROR\n * 2、useMemo和useCallback的成本和收益\n * \n * \n * \n * \n * \n * hooks：最透彻的文章：https://blog.csdn.net/qq_29438877/article/details/104809865?utm_medium=distribute.pc_relevant_t0.none-task-blog-searchFromBaidu-1.control&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-searchFromBaidu-1.control\n * Hooks是React16.8自带功能，Hooks就是javascript function\n * 解决的问题：\n * 一、在组件之间很难复用业务逻辑（与renderProps和higher-order-components相比，在sharing stateful logic方面hooks更primitive）\n * \tHooks allow you to reuse stateful logic without changing your component hierarchy. This makes it easy to share Hooks \n * \tamong many components or with the community.对应技术：Building your own hooks\n * 二、组件变得过于复杂Hooks let you split one component into smaller functions based on what pieces are related \n * \t(such as setting up a subscription or fetching data)，对应Using the Effect Hook\n * 三、Classes confuse both people and machines。Hooks let you use more of React’s features without classes\n * \n * Hooks Rules\n * 一、在函数顶层使用Hooks，不要在loops、conditions、or nested functions中使用Hooks\n * 二、只在ReactFunctionComponents中调用Hooks\n * \n * Build Your Own Hooks(类似render props和HOC的功能)\n * \n * import React, { useState, useEffect } from \"react\"\n * \n * // My Custom Hooks：a function’s name starts with ”use” and it calls other Hooks, we say it is a custom Hook\n * function useFriendStatus(friendID) {\n * \tconst [isOnline, setIsOnline] = useState(null)\n * \tfunction handleStatusChange(status) {\n * \t\tsetIsOnline(status.isOnline)\n * \t}\n * \t\n * \tuseEffect(() => {\n * \t\tChatAPI.subscribeToFriendStatus(friendID, handleStatusChange)\n * \t\treturn () => {\n * \t\t\tChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange)\n * \t\t}\n * \t})\n * \n * \treturn isOnline\n * }\n * // Demos using My Custom Hooks\n * \n * function FriendStatus(props) {\n * \tcosnt isOnline = useFriendStatus(props.frined.id)\n * \tif (isOnline === null) {\n * \t\treturn \"Loading\"\n * \t}\n * \treturn isOnline ? \"Online\" : \"Offline\"\n * }\n * \n * function FriendListItem(props) {\n * \tcosnt isOnline = useFriendStatus(props.frined.id)\n * \t\n * \treturn (\n * \t\t<li style={{color: isOnline ? \"green\" : \"black\"}}>\n * \t\t\t{\n * \t\t\t\tprops.friend.name\n * \t\t\t}\n * \t\t</li>\n * \t)\n * }\n * \n * 这里面的state是独立的，hooks共用的是logic而不是state\n * \n * 1、constructor ==> useState()\n * 2、getDerivedStateFromProps ===> \n * 3、shouldComponentUpdate ===> React.memo（类似React.PureComponent），针对组件的渲染是否重复执行\n * 4、render ===> function component\n * 5、componentDidMount、componentDidUpdate、ComponentWillUnmount ===> useEffect()：可以设置依赖 \n * 6、getSnapshotBeforeUpdate, componentDidCatch and getDerivedStateFromError ===> no hooks\n * \n * useState：第一次render，返回初始值；uodate返回当前值\n * useEffect：每次render都会调用useEffect，class则需要在didMount和DidUpdate都做逻辑\n * useContext\n * useReducer\n * useCallback：缓存函数\n * useMemo：缓存值\n * useRef\n * useImperativeHandle\n * useLayoutEffect\n * useDebugValue\n * useMemo和useCallback使用场景：https://blog.csdn.net/baidu_39067385/article/details/111412255\n * React.memo\n * \n * cosnt MyComponent = React.memo(function MyComponent(props) {\n//  * \t\t.......\n * })\n * \n **/\nimport * as React from 'react'\nimport { connect } from \"react-redux\"\nimport Card from \"Components/Card\"\nimport Text from \"Components/Text\"\nimport Line from \"Components/Line\"\nimport actions from \"./controller/actions\"\ninterface IProps { \n\tname: string\n\tcount: number\n}\n\nfunction Hooks(props: IProps) {\n\tconsole.log(\"Hooks===>\", props)\n\t/*\n\t\tuseState(initialValue | fn)：返回当前state和对应更新函数setState\n\t*/ \n\tconst [name, setName] = React.useState(props.name) // useState声明了一个state variable\n\tconst [count, setCount] = React.useState(props.count)\n\t/*\n\t\tuseEffect(fn, [dependencies])：当依赖发生变化，才会执行fn计算;fn会在return之后执行\n\t*/ \n\tReact.useEffect(() => {\n\t\tconsole.log(\"useEffect====>\")\n\t\tsetName(props.name)\n\t}, [props.name])\n\t/*\n\t\tuseMemo(fn, [dependencies])：当依赖发生变化，才会执行fn计算，并返回计算结果；用于优化复杂计算，避免每次render都执行\n\t\tcb是在render期间执行，即在return之前执行\n\t*/ \n\t// const result = React.useMemo(() => {\n\t// \tconsole.log(\"useMemo===>\")\n\t// \treturn 'default'\n\t// }, [name])\n\t/*\n\t\tuseCallback(fn, [dependencies])：返回一个callback；\n\n\t\tuseCallback(fn, deps) 等价 useMemo(() => fn, deps)\n\t*/ \n\t// const [mount, dispatch] = React.useReducer((state: any, action: any) => {\n\t// \tif (action === 'add') {\n\t// \t\treturn state + 1\n\t// \t}\n\t// \treturn state\n\t// }, 0)\n\n\tfunction onChangeCount() {\n\t\tconst result = count + 1\n\t\tsetCount(result)\n\t}\n\tfunction onChangeName() {\n\t\tsetName('monkey666666')\n\t}\n\n\tfunction onActionChangeName() {\n\t\tactions.changeName(\"monkey\")\n\t}\n\t// function getName() {\n\t// \treturn name\n\t// }\n\tconsole.log(\"return=======>\")\n\treturn (\n\t\t<Card title=\"hooks\">\n\t\t\t<Text>\n\t\t\t\t{\n\t\t\t\t\t`count:${count}`\n\t\t\t\t}\n\t\t\t</Text>\n\t\t\t<Text>\n\t\t\t\t{\n\t\t\t\t\t`name: ${name}`\n\t\t\t\t}\n\t\t\t</Text>\n\t\t\t<Line />\n\t\t\t<div onClick={onActionChangeName}>\n\t\t\t\taction change name\n\t\t\t</div>\n\t\t\t<div onClick={onChangeCount}>\n\t\t\t\tchangeStateCount\n\t\t\t</div>\n\t\t\t<div onClick={onChangeName}>\n\t\t\t\tchangeStateName\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nexport default connect((state: any) => {\n\tconst { hooks } = state\n\n\treturn hooks\n})(Hooks)"],"sourceRoot":""}