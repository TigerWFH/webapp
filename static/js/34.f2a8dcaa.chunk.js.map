{"version":3,"sources":["pages/test/index.tsx"],"names":["Test","props","_this","Object","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","onChangeName","setState","test","_home_runner_work_webapp_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","state","name","demo","onChangeAge","second","age","onChangeGrade","console","log","third","grade","react__WEBPACK_IMPORTED_MODULE_6__","onClick","Second","React","children","Third","edit","onSelect","selection","document","getSelection","anchorNode","range","getRangeAt","toString","onGetContent","_this2","innerText","textContent","innerHtml","innerHTML","onChangeColor","execCommand","onAdd","onChangeFont","onInsert","replace","_this3","ref","contentEditable","style","width","display","visibility","Demo","__webpack_exports__"],"mappings":"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","file":"static/js/34.f2a8dcaa.chunk.js","sourcesContent":["import * as React from \"react\";\n\n/*\n    Node.textContent：返回一个节点及其后代的文本内容，可以防止XSS\n        获取所有元素的内容，包括script和style元素\n    Node.insertAdjancetText()\n    HTMLElement.innerText：返回一个节点及其后代的渲染出来的文本内容\n        受css样式影响，不会返回隐藏元素的文本\n    Element.innerHTML：设置或获取HTML语法表示的元素的后代\n    Element.insertAdjacentHTML()：将指定的文本解析为Element元素，并将结果节点插入到DOM树种指定的位置\n    -----------------\n    处理文本节点：建议使用node.textContent和node.insertAdjancetText()\n    处理HTML内容：建议使用Element.innerHTML和Element.insertAdjacentHTML()\n*/\nclass Test extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            test: {\n                name: \"firstLevel\",\n                second: {\n                    age: \"secondLevel\",\n                    third: {\n                        grade: \"third\"\n                    }\n                }\n            },\n            demo: \"demo\"\n        }\n    }\n\n    onChangeName = () => {\n        // 改变了test，触发rerender\n        this.setState({\n            test: {\n                ...this.state.test,\n                name: \"changeName\"\n            },\n            demo: \"changeName\"\n        })\n    }\n\n    onChangeAge = () => {\n        // test不变，改变了second，触发rerender\n        const { test } = this.state;\n        test.second = {\n            ...test.second,\n            age: \"change age\"\n\n        };\n        this.setState({\n            test\n        })\n    }\n    onChangeGrade = () => {\n        // test、second不变，改变了third，无法触发rerender\n        console.log(\"change grade\")\n        const { test } = this.state;\n        const { second } = test;\n        second.third = {\n            ...second.third,\n            grade: \"change grade\"\n        }\n    }\n\n    render() {\n        console.log(\"first\")\n        return (\n            <div>\n                <button onClick={this.onChangeName}>\n                    change name\n                </button>\n                <button onClick={this.onChangeAge}>\n                    change age\n                </button>\n                <button>\n                    change age again\n                </button>\n                <button onClick={this.onChangeGrade}>\n                    change grade\n                </button>\n                <button>\n                    change grade again\n                </button>\n\n                {\n                    this.state.test.name\n                }\n                <Second second={this.state.test.second} />\n                {\n                    React.cloneElement(this.props.children as any, { demo: this.state.demo })\n                }\n            </div>\n        )\n    }\n}\n\nclass Second extends React.Component<any, any> {\n    render() {\n        console.log(\"second\")\n        return (\n            <div>\n                {\n                    this.props.second.age\n                }\n                <Third third={this.props.second.third.age} />\n            </div>\n        )\n    }\n}\nclass Third extends React.Component<any, any> {\n    edit: any = null\n    onSelect = () => {\n        const selection = document.getSelection();\n        console.log(\"=========>\", selection)\n        if (selection !== null) {\n            const { anchorNode } = selection;\n            const range = selection.getRangeAt(0);\n            console.log(\"reange====>\", range, range.toString())\n            console.log(\"anchorNode===>\", anchorNode)\n        }\n    }\n    onGetContent = () => {\n        if (this.edit) {\n            const innerText = this.edit.innerText;\n            console.log(\"innerText=====>\", innerText)\n            const textContent = this.edit.textContent;\n            console.log(\"textContent=====>\", textContent)\n            const innerHtml = this.edit.innerHTML;\n            console.log(\"innerHtml=====>\", innerHtml)\n        }\n    }\n    onChangeColor = () => {\n        // const selection = window.getSelection();\n        document.execCommand(\"\", false);\n    }\n    onAdd = () => {\n        const selection = document.getSelection();\n        console.log(\"=========>\", selection)\n        /*\n        anchorNode: null\nanchorOffset: 0\nbaseNode: null\nbaseOffset: 0\nextentNode: null\nextentOffset: 0\nfocusNode: null\nfocusOffset: 0\nisCollapsed: true\nrangeCount: \n        */\n        if (selection !== null) {\n            // const { anchorOffset, anchorNode, focusOffset, focusNode } = selection;\n            const range = selection.getRangeAt(0);\n            console.log(\"reange====>\", range)\n        }\n\n\n        document.execCommand(\"createlink\", false, 'https://www.baidu.com');\n    }\n    onChangeFont = () => {\n        document.execCommand(\"forecolor\", false, 'red');\n    }\n    onInsert = () => {\n        if (this.edit != null) {\n            this.edit.replace();\n        }\n    }\n    render() {\n        console.log(\"third\")\n        return (\n            <div>\n                {\n                    this.props.third\n                }\n                <h3>富文本编辑器</h3>\n                <div>\n                    <div>\n                        <button onClick={this.onSelect}>选中内容</button>\n                        <button onClick={this.onGetContent}>获取内容</button>\n                        <button onClick={this.onChangeColor}>改变颜色</button>\n                        <button onClick={this.onAdd}>add anchod</button>\n                        <button onClick={this.onChangeFont}>改变字体</button>\n                    </div>\n                    <div ref={(edit) => (this.edit = edit)} contentEditable={true}>\n                        <span>我是富文本</span>\n                        <div>\n                            <span style={{ width: \"80px\", display: \"inline-block\" }}></span>\n                            <span>我是富文本2</span>\n                            <span>我是富文本3</span>\n                            <span>我是富文本4</span>\n                        </div>\n                        <span style={{ visibility: \"hidden\" }}>我是隐藏的</span>\n                        <span>footer</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Demo extends React.Component<any, any> {\n    render() {\n        console.log(\"demo-render\")\n        return (\n            <div>\n                {\n                    this.props.demo\n                }\n            </div>\n        )\n    }\n}\n\n\n\nexport default function () {\n    return (\n        <Test>\n            <Demo demo=\"initial demo\" />\n        </Test>\n    )\n};"],"sourceRoot":""}