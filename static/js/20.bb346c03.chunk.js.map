{"version":3,"sources":["pages/x6/components/X6DndGraph/index.module.scss","pages/x6/components/X6ReactTrigger/index.module.scss","pages/x6/components/X6ReactTrigger/index.tsx","pages/x6/components/X6DndGraph/index.tsx","pages/x6/index.tsx"],"names":["module","exports","x6dnd","component","wrapper","stencil","container","toolbar","graph","x6-graph-scroller","title","content","Trigger","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","name","target","value","onDelete","editable","state","node","setData","console","log","nextProps","nextState","hasChanged","_this$state","react","className","styles","placeholder","delete","onClick","React","defaultProps","width","height","type","Rect","Shape","Circle","Item","Toolbar","Group","MOCKDATA","nodes","id","x","y","label","edges","source","X6DndGraph","stencilContainer","getnerateTreeFromEdges","forEach","edge","parent","prev","next","child","refContainer","refStencil","onGetAll","all","getCells","onAutoLayout","rootNode","getRootNodes","length","_this$graph","root","depthMap","Map","leafCount","getLeafNodes","prevChildren","getNeighbors","outgoing","searchCell","cell","distance","isNode","position","_this$graph2","_parent","offset","getPredecessors","breadthFirst","parentPosition","Array","isArray","count","get","undefined","set","Graph","grid","snapline","enabled","sharp","scroller","pageVisible","pageBreak","pannable","fromJSON","Addon","Stencil","search","keyword","shape","indexOf","notFoundText","collapsable","stencilGraphWidth","stencilGraphHeight","groups","graphHeight","graphOptions","collapsed","getDragNode","options","clone","getDropNode","newNode","size","addPorts","attrs","circle","magnet","appendChild","r","rect","fill","stroke","strokeWidth","text","c","data","c2","stroke-width","r2","r3","c3","ports","customNode","X6ReactTrigger","load","style","ref","tooltip","icon","X6","overflow","X6DndGraph_X6DndGraph","connect","x6"],"mappings":"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","file":"static/js/20.bb346c03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"x6dnd\":\"X6DndGraph_x6dnd__34Xov\",\"component\":\"X6DndGraph_component__7q1PX\",\"wrapper\":\"X6DndGraph_wrapper__2AVqN\",\"stencil\":\"X6DndGraph_stencil__21abQ\",\"container\":\"X6DndGraph_container__3ZzDT\",\"toolbar\":\"X6DndGraph_toolbar__2HmC4\",\"graph\":\"X6DndGraph_graph__3O_Ro\",\"x6-graph-scroller\":\"X6DndGraph_x6-graph-scroller__1I59x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"X6ReactTrigger_container__3lW6w\",\"title\":\"X6ReactTrigger_title__21kuW\",\"content\":\"X6ReactTrigger_content__1yQMJ\"};","import * as React from \"react\";\nimport styles from \"./index.module.scss\";\n\n\nconst LOG_NODE_WIDTH = 40;\nconst LOG_NODE_HEIGHT = 40;\n\ninterface ITrigger {\n\n    width?: number\n    height?: number\n    name?: string\n    content?: string\n    node?: any\n    onDelete?: () => any\n}\nclass Trigger extends React.Component<ITrigger, any, never> {\n    static defaultProps = {\n        width: LOG_NODE_WIDTH,\n        height: LOG_NODE_HEIGHT,\n        name: \"客群\",\n        type: 'consumer',\n        content: 'default content'\n    };\n    constructor(props: any) {\n        super(props);\n        console.log(\"constructor\")\n        this.state = {\n            name: '',\n            editable: false\n        }\n    }\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        console.log(\"SCU====>\", nextProps, nextState)\n        const { name } = nextState;\n        const oldName = this.state.name;\n        if (name !== oldName) {\n            return true;\n        }\n        const node = this.props.node;\n        if (node) {\n            if (node.hasChanged(\"data\")) {\n                return true;\n            }\n        }\n\n        console.log(\"no-rerender======>\", this.props.node === nextProps.node)\n\n        return false;\n    }\n    componentDidUpdate() {\n        console.log(\"didUpdate======>\", this.props)\n    }\n\n    onChange = (e: any) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    onDelete = () => {\n        // console.log(\"shanchu\")\n        // const { onDelete } = this.props;\n        // if (typeof onDelete === 'function') {\n        //     onDelete()\n        // }\n        const { editable } = this.state;\n        this.setState({\n            editable: !editable\n        }, () => {\n            const { node } = this.props;\n            // const { data = {} } = node;\n            const { name } = this.state;\n            // data.name = name;\n            node.setData({\n                name\n            })\n        })\n    }\n\n    render() {\n        console.log(\"render=======>\", this.props)\n        const { content } = this.props;\n        const { name, editable } = this.state;\n        return (\n            <div className={styles.container} >\n                <div className={styles.title}>\n                    {\n                        editable ? <input value={name} placeholder=\"请输入新名字\" onChange={this.onChange} /> :\n                            <span className={styles.name}>{name}</span>\n                    }\n                    <button className={styles.delete} onClick={this.onDelete}>\n                        {\n                            editable ? '保存' : '编辑'\n                        }\n                    </button>\n                </div>\n                <div className={styles.content}>\n                    {\n                        content\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Trigger;","import * as React from 'react';\nimport { Graph, Addon, Shape, Cell } from '@antv/x6';\nimport { Toolbar } from '@antv/x6-react-components';\nimport '@antv/x6-react-shape';\nimport '@antv/x6-react-components/es/menu/style/index.css';\nimport '@antv/x6-react-components/es/toolbar/style/index.css';\nimport { Stencil } from '@antv/x6/lib/addon';\nimport styles from './index.module.scss';\nimport Trigger from '../X6ReactTrigger';\n\nconst { Rect, Circle } = Shape;\nconst { Item, Group } = Toolbar;\n\ninterface IX6DndGraphProps {\n  businessType?: string; // 业务类型，不同业务使用不同的图元集合\n}\n/*\n    source是父节点\n    target是子节点\n*/\n\nconst MOCKDATA = {\n  nodes: [\n    {\n      id: 'node1',\n      x: 40,\n      y: 40,\n      width: 80,\n      height: 40,\n      label: 'node1'\n    },\n    {\n      id: 'node2',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node2'\n    },\n    {\n      id: 'node3',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node3'\n    },\n    {\n      id: 'node4',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node4'\n    },\n    {\n      id: 'node5',\n      x: 40,\n      y: 40,\n      width: 80,\n      height: 40,\n      label: 'node5'\n    },\n    {\n      id: 'node6',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node6'\n    },\n    {\n      id: 'node7',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node7'\n    },\n    {\n      id: 'node8',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node8'\n    },\n    {\n      id: 'node8',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node8'\n    },\n    {\n      id: 'node9',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node9'\n    },\n    {\n      id: 'node10',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node10'\n    },\n    {\n      id: 'node11',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node11'\n    },\n    {\n      id: 'node12',\n      x: 160,\n      y: 180,\n      width: 80,\n      height: 40,\n      label: 'node12'\n    }\n  ],\n  edges: [\n    {\n      source: 'node1',\n      target: 'node10'\n    },\n    {\n      source: 'node1',\n      target: 'node8'\n    },\n    {\n      source: 'node1',\n      target: 'node3'\n    },\n    {\n      source: 'node1',\n      target: 'node9'\n    },\n    {\n      source: 'node1',\n      target: 'node2'\n    },\n    {\n      source: 'node2',\n      target: 'node4'\n    },\n    {\n      source: 'node2',\n      target: 'node5'\n    },\n    {\n      source: 'node2',\n      target: 'node6'\n    },\n    {\n      source: 'node2',\n      target: 'node7'\n    },\n    {\n      source: 'node9',\n      target: 'node11'\n    },\n    {\n      source: 'node9',\n      target: 'node12'\n    }\n  ]\n};\n\nexport default class X6DndGraph extends React.Component<IX6DndGraphProps, any> {\n  container: HTMLDivElement | null = null;\n  stencilContainer: HTMLDivElement | null = null;\n  graph: Graph | undefined;\n  stencil: Stencil | undefined;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      node: null\n    };\n  }\n  getnerateTreeFromEdges = (edges: any[]) => {\n    // let root = null;\n    edges.forEach((edge) => {\n      const parent = {\n        id: edge.source,\n        prev: null,\n        next: null\n      };\n      const child = {\n        id: edge.target,\n        prev: parent,\n        next: null\n      };\n      parent.next = child as any;\n    });\n  };\n  componentDidMount() {\n    this.graph = new Graph({\n      container: this.container as HTMLDivElement,\n      grid: true,\n      snapline: {\n        enabled: true,\n        sharp: true\n      },\n      scroller: {\n        enabled: true,\n        pageVisible: false,\n        pageBreak: false,\n        pannable: true\n      }\n    });\n    this.graph.fromJSON(MOCKDATA);\n\n    // this.graph.on(\"cell:dblclick\", (options: any) => {\n    //     const { cell, e } = options\n    //     cell.addTools({\n    //         name: cell.isEdge() ? 'edge-editor' : 'node-editor',\n    //         args: {\n    //             event: e,\n    //         },\n    //     })\n    // })\n\n    this.stencil = new Addon.Stencil({\n      title: '业务组件库',\n      target: this.graph,\n      search(cell, keyword) {\n        return cell.shape.indexOf(keyword) !== -1;\n      },\n      placeholder: '请输入组件名称',\n      notFoundText: '未搜索到指定的组件',\n      collapsable: true,\n      stencilGraphWidth: 200,\n      stencilGraphHeight: 180,\n      groups: [\n        {\n          name: 'trigger',\n          title: '触发',\n          graphHeight: 100,\n          graphOptions: {\n            scroller: true\n          }\n        },\n        {\n          name: 'flow',\n          title: '流程控制',\n          collapsed: true\n        },\n        {\n          name: 'strategy',\n          title: '策略',\n          collapsed: true\n        },\n        {\n          name: 'actions',\n          title: '动作',\n          collapsed: true\n        },\n        {\n          name: 'productions',\n          title: '数据产品',\n          collapsed: true\n        }\n      ],\n      getDragNode: (node, options) => {\n        console.log('getDragNode====>', node, options);\n        return node.clone();\n      },\n      getDropNode: (node: any, options) => {\n        console.log('getDropNode=====>', node, options);\n        const ports = [\n          {\n            id: 'port1',\n            attrs: {\n              circle: {\n                magnet: true\n              }\n            }\n          },\n          {\n            id: 'port2',\n            attrs: {\n              circle: {\n                magnet: true\n              }\n            }\n          }\n        ];\n\n        const newNode = node.clone().size({\n          width: 240,\n          height: 80\n        });\n        newNode.addPorts(ports);\n        return newNode;\n      }\n    });\n\n    if (this.stencilContainer) {\n      this.stencilContainer.appendChild(this.stencil.container);\n    }\n    // 业务组件栏的组件实例\n    const r = new Rect({\n      width: 70,\n      height: 40,\n      attrs: {\n        rect: { fill: '#31D0C6', stroke: '#4B4A67', strokeWidth: 6 },\n        text: { text: 'rect', fill: 'white' }\n      }\n    });\n\n    const c = new Circle({\n      width: 60,\n      height: 60,\n      data: {\n        data: 'myData'\n      },\n      attrs: {\n        circle: { fill: '#FE854F', strokeWidth: 6, stroke: '#4B4A67' },\n        text: { text: 'ellipse', fill: 'white' }\n      }\n    });\n\n    const c2 = new Circle({\n      width: 60,\n      height: 60,\n      attrs: {\n        circle: { fill: '#4B4A67', 'stroke-width': 6, stroke: '#FE854F' },\n        text: { text: 'ellipse', fill: 'white' }\n      }\n    });\n\n    const r2 = new Rect({\n      width: 70,\n      height: 40,\n      attrs: {\n        rect: { fill: '#4B4A67', stroke: '#31D0C6', strokeWidth: 6 },\n        text: { text: 'rect', fill: 'white' }\n      }\n    });\n\n    const r3 = new Rect({\n      width: 70,\n      height: 40,\n      attrs: {\n        rect: { fill: '#31D0C6', stroke: '#4B4A67', strokeWidth: 6 },\n        text: { text: 'rect', fill: 'white' }\n      }\n    });\n\n    const c3 = new Circle({\n      width: 60,\n      height: 60,\n      attrs: {\n        circle: { fill: '#FE854F', strokeWidth: 6, stroke: '#4B4A67' },\n        text: { text: 'ellipse', fill: 'white' }\n      },\n      ports: [\n        {\n          id: 'port1',\n          attrs: {\n            circle: {\n              magnet: true\n            }\n          }\n        },\n        {\n          id: 'port2',\n          attrs: {\n            circle: {\n              magnet: true\n            }\n          }\n        }\n      ]\n    });\n\n    const customNode = {\n      shape: 'react-shape',\n      width: 60,\n      height: 60,\n      component: <Trigger />\n    };\n\n    this.stencil.load([r, c, customNode], 'trigger');\n    this.stencil.load([c2.clone(), r2, r3, c3], 'flow');\n  }\n\n  componentDidUpdate() {\n    // const { node } = this.state;\n    console.log('didUpdate========>', this.state);\n    // if (node !== null) {\n    //     this.graph?.addNode(node)\n    // }\n  }\n\n  refContainer = (container: HTMLDivElement) => {\n    this.container = container;\n  };\n\n  refStencil = (stencil: HTMLDivElement) => {\n    this.stencilContainer = stencil;\n  };\n\n  onGetAll = () => {\n    if (this.graph) {\n      const all = this.graph.getCells();\n      console.log('cells======>', all);\n    }\n  };\n\n  onAutoLayout = () => {\n    const step = 200;\n    const level = 50;\n    const elemWidth = 80;\n    const elemHeight = 40;\n\n    if (this.graph) {\n      const rootNode = this.graph.getRootNodes();\n      if (rootNode.length === 1) {\n        const root = rootNode[0];\n        /*\n            深度depth到元素个数count的映射，用于计算位置\n        */\n        const depthMap = new Map([]);\n        // 获取叶子节点个数\n        const leafCount = this.graph.getLeafNodes();\n        console.log('leafCount===>', leafCount.length);\n        let prevChildren = this.graph?.getNeighbors(root, {\n          outgoing: true\n        }); // 前置节点的子节点个数\n        this.graph.searchCell(\n          root,\n          (cell: Cell, distance: number) => {\n            if (distance === 0) {\n              // 根节点，直接设置坐标(0, 0)\n              if (cell.isNode()) {\n                cell.position(0, 0);\n              }\n            } else {\n              if (cell.isNode()) {\n                // 非根节点，根据父节点坐标和兄弟节点个数计算坐标\n                // 获取当前节点的父节点\n                const offset = ((level + elemHeight) * prevChildren.length) / 2;\n                console.log('offset====>', offset);\n                const prev = this.graph?.getPredecessors(cell, {\n                  breadthFirst: true,\n                  distance: 1\n                });\n                let parent = null;\n                let parentPosition: any = {};\n                if (Array.isArray(prev)) {\n                  parent = prev[prev.length - 1];\n                }\n                if (parent?.isNode()) {\n                  parentPosition = parent.position();\n                }\n                console.log(\n                  'cell====>',\n                  cell,\n                  parent,\n                  prevChildren,\n                  parentPosition\n                );\n                let count: any = depthMap.get(distance);\n                if (count === undefined) {\n                  count = 1;\n                } else {\n                  count = count + 1;\n                }\n                depthMap.set(distance, count);\n                const x = parentPosition.x + elemWidth + step;\n                const y =\n                  parentPosition.y + (elemWidth + level) * (count - 1) - offset;\n\n                cell.position(x, y);\n              }\n            }\n          },\n          {\n            breadthFirst: true,\n            outgoing: true\n          }\n        );\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className={styles.x6dnd}>\n        <div className={styles.component}>\n          <Trigger />\n        </div>\n        <div className={styles.wrapper} style={{ width: '100%' }}>\n          <div className={styles.stencil} ref={this.refStencil}></div>\n          <div className={styles.container}>\n            <Toolbar className={styles.toolbar}>\n              <Group>\n                <Item name=\"zoomIn\" tooltip=\"缩小\" icon=\"\">\n                  缩小\n                </Item>\n                <Item name=\"zoomOut\" tooltip=\"放大\" icon=\"\">\n                  放大\n                </Item>\n                <Item\n                  name=\"auto\"\n                  tooltip=\"自动布局\"\n                  onClick={this.onAutoLayout}\n                  icon=\"\">\n                  自动布局\n                </Item>\n              </Group>\n              <Group>\n                <Item name=\"all\" tooltip=\"获取节点\" onClick={this.onGetAll}>\n                  获取节点\n                </Item>\n              </Group>\n            </Toolbar>\n            <div className={styles.graph} ref={this.refContainer}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport X6DndGraph from './components/X6DndGraph'\n\ninterface IX6Props {\n    logs: {}\n    groupList: any[]\n}\n\nclass X6 extends React.Component<IX6Props, never> {\n    render() {\n        return (\n            <div style={{ width: '100%', height: '100%', overflow: 'auto' }}>\n                <X6DndGraph />\n            </div>\n        )\n    }\n}\n\nexport default connect((state: any) => {\n    const { x6 } = state\n\n    return x6\n})(X6)"],"sourceRoot":""}