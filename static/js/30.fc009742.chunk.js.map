{"version":3,"sources":["pages/detail/controller/actions.ts","pages/detail/index.tsx"],"names":["bindActionCreators","requestDetail","dispatch","getState","console","log","setTimeout","data","type","t","payload","chnageDetail","store","Detail","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","skuid","onToNext","history","push","onToButton","setState","onChangeDetail","actions","state","match","params","prevProps","prevState","_this2","snapshot","detailDemo","react","onClick","concat","React","connect","ownProps","detail"],"mappings":"qLAiCeA,cACb,CACEC,cAbkB,WAGpB,OAAO,SAACC,EAAeC,GACrBC,QAAQC,IAAI,mBACZC,WAAW,WAnBO,IAACC,EAoBjBL,GApBiBK,EAoBM,GApBS,CACpCC,KAAMC,IACNC,QAASH,MAmBJ,OAOHI,aAvBiB,WACnB,OAAO,SAACT,EAAeC,GACrBD,EAAS,CACPM,KAAMC,IACNC,QAAS,qBAqBbE,IAAMV,UCzBFW,cAEL,SAAAA,EAAYC,GAAe,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAC1BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFPQ,WAC2B,EAAAP,EA4C3BQ,SAAW,WACUR,EAAKD,MAAjBU,QACAC,KAAK,iBA9CaV,EAgD3BW,WAAa,WACZX,EAAKO,MAAQ,MACbP,EAAKY,SAAS,CACbL,MAAO,SAnDkBP,EAsD3Ba,eAAiB,WAChBC,EAAQlB,gBArDRI,EAAKe,MAAQ,CACZR,MAAO,WAHkB,IAKlBS,EAAUhB,EAAKD,MAAfiB,MALkB,OAM1BhB,EAAKO,MAAQS,EAAMC,OAAOV,MAC1BlB,QAAQC,IAAI,8BAA+BU,EAAKO,OAPtBP,mFAc1BX,QAAQC,IAAI,2BAA4Ba,KAAKI,OAC7CO,EAAQ5B,gEAKR,OADAG,QAAQC,IAAI,wCAAyCa,KAAKI,QACnD,kDAEgBW,EAAmBC,GAAmB,IAAAC,EAAAjB,KAC7Dd,QAAQC,IAAI,2BAA4Ba,KAAKI,OADgB,IAGvDA,EADYJ,KAAKJ,MAAfiB,MACYC,OAAOV,MAU3B,OATIJ,KAAKI,QAAUA,GAClBJ,KAAKS,SAAS,SAACO,EAAWpB,GAEzB,OADAqB,EAAKb,MAAQA,EACN,CACNA,WAKI,gDAEWW,EAAmBC,EAAmBE,GACxDhC,QAAQC,IAAI,4EAIZD,QAAQC,IAAI,uCAAwCa,KAAKI,wCAgBzDlB,QAAQC,IAAI,yBAA0Ba,KAAKI,OADnC,IAEAe,EAAenB,KAAKJ,MAApBuB,WACR,OACCC,EAAA,yBACCA,EAAA,wBAAQC,QAASrB,KAAKU,gBAAtB,gBACAU,EAAA,wBAAQC,QAASrB,KAAKK,UAAtB,wCAGAe,EAAA,yBACAA,EAAA,wBAAQC,QAASrB,KAAKQ,YAAtB,gDAICR,KAAKY,MAAMR,MAEZgB,EAAA,mCAAAE,OAEYH,wDAlEiBvB,EAAegB,GAE9C,OADA1B,QAAQC,IAAI,2CAA4CS,GACjD,YAbY2B,aA2FNC,sBANf,SAAyBZ,EAAYa,GAGpC,MAAO,CAAEC,OAFUd,EAAXc,SAK+B,KAAzBF,CAA+B7B","file":"static/js/30.fc009742.chunk.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport store from '@/store';\nimport * as t from './type';\n\n// const detail = () => ({\n//     type: t.DETAIL\n// })\n\nconst detailSuccess = (data: any) => ({\n  type: t.DETAIL_SUCCESS,\n  payload: data\n});\n\nconst chnageDetail = () => {\n  return (dispatch: any, getState: any) => {\n    dispatch({\n      type: t.CHANGE_DETAIL,\n      payload: 'changedDetail'\n    });\n  };\n};\n\nconst requestDetail = () => {\n  // 这里的dispatch和getState都是redux-thunk注入进来的\n  // redux的dispatch只返回plain object，中间件会返回多样式数据包括异步\n  return (dispatch: any, getState: any) => {\n    console.log('dispatch-detail');\n    setTimeout(() => {\n      dispatch(detailSuccess({}));\n    }, 2000);\n  };\n};\n\nexport default bindActionCreators(\n  {\n    requestDetail,\n    chnageDetail\n  },\n  store.dispatch\n);\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport actions from './controller/actions'\n\ninterface IProps {\n\tmatch: any;\n\thistory: any;\n\tdetail: any;\n\tdetailDemo: string\n}\ninterface IState {\n\tskuid: string;\n}\nclass Detail extends React.Component<IProps, IState> {\n\tskuid: any\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tskuid: 'default'\n\t\t};\n\t\tconst { match } = this.props\n\t\tthis.skuid = match.params.skuid\n\t\tconsole.log('Detail===constructor======>', this.skuid)\n\t}\n\tstatic getDerivedStateFromProps(props: IProps, state: IState) {\n\t\tconsole.log('Detail===getderivedstatefromprops======>', props)\n\t\treturn null\n\t}\n\tcomponentDidMount() {\n\t\tconsole.log('Detail===didMount======>', this.skuid)\n\t\tactions.requestDetail()\n\t}\n\n\tshouldComponentUpdate() {\n\t\tconsole.log('Detail===shouldComponentUpdate======>', this.skuid)\n\t\treturn true;\n\t}\n\tgetSnapshotBeforeUpdate(prevProps: IProps, prevState: IState) {\n\t\tconsole.log('Detail===snapshot======>', this.skuid)\n\t\tconst { match } = this.props\n\t\tconst skuid = match.params.skuid\n\t\tif (this.skuid !== skuid) {\n\t\t\tthis.setState((prevState, props) => {\n\t\t\t\tthis.skuid = skuid\n\t\t\t\treturn {\n\t\t\t\t\tskuid\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn null\n\t}\n\tcomponentDidUpdate(prevProps: IProps, prevState: IState, snapshot: any) {\n\t\tconsole.log('Detail===didUpdate======>',)\n\t\t// 拿到skuid，可以更新页面\n\t}\n\tcomponentWillUnmount() {\n\t\tconsole.log('Detail===componentWillUnmount======>', this.skuid)\n\t}\n\tonToNext = () => {\n\t\tconst { history } = this.props\n\t\thistory.push('/detail/next')\n\t}\n\tonToButton = () => {\n\t\tthis.skuid = \"123\"\n\t\tthis.setState({\n\t\t\tskuid: \"123\"\n\t\t})\n\t}\n\tonChangeDetail = () => {\n\t\tactions.chnageDetail()\n\t}\n\trender() {\n\t\tconsole.log(\"Detail===render======>\", this.skuid)\n\t\tconst { detailDemo } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick={this.onChangeDetail}>changeDetail</button>\n\t\t\t\t<button onClick={this.onToNext}>\n\t\t\t\t\t路由跳转重用\n\t\t\t\t</button>\n\t\t\t\t<br />\n\t\t\t\t<button onClick={this.onToButton}>\n\t\t\t\t\tsetState重用当前页面\n\t\t\t\t</button>\n\t\t\t\t{\n\t\t\t\t\tthis.state.skuid\n\t\t\t\t}\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\t`Detail:${detailDemo}`\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state: any, ownProps: IProps) {\n\tconst { detail } = state\n\n\treturn { detail }\n}\n\nexport default connect(mapStateToProps, null)(Detail);"],"sourceRoot":""}